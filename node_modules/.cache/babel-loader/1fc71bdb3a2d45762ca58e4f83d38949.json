{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/image/imageloadobserver\n */\n\nimport { Observer } from 'ckeditor5/src/engine';\n\n/**\n * Observes all new images added to the {@link module:engine/view/document~Document},\n * fires {@link module:engine/view/document~Document#event:imageLoaded} and\n * {@link module:engine/view/document~Document#event:layoutChanged} event every time when the new image\n * has been loaded.\n *\n * **Note:** This event is not fired for images that has been added to the document and rendered as `complete` (already loaded).\n *\n * @extends module:engine/view/observer/observer~Observer\n */\nexport default class ImageLoadObserver extends Observer {\n  /**\n   * @inheritDoc\n   */\n  observe(domRoot) {\n    this.listenTo(domRoot, 'load', (event, domEvent) => {\n      const domElement = domEvent.target;\n      if (this.checkShouldIgnoreEventFromTarget(domElement)) {\n        return;\n      }\n      if (domElement.tagName == 'IMG') {\n        this._fireEvents(domEvent);\n      }\n      // Use capture phase for better performance (#4504).\n    }, {\n      useCapture: true\n    });\n  }\n\n  /**\n   * Fires {@link module:engine/view/document~Document#event:layoutChanged} and\n   * {@link module:engine/view/document~Document#event:imageLoaded}\n   * if observer {@link #isEnabled is enabled}.\n   *\n   * @protected\n   * @param {Event} domEvent The DOM event.\n   */\n  _fireEvents(domEvent) {\n    if (this.isEnabled) {\n      this.document.fire('layoutChanged');\n      this.document.fire('imageLoaded', domEvent);\n    }\n  }\n}\n\n/**\n * Fired when an <img/> DOM element has been loaded in the DOM root.\n *\n * Introduced by {@link module:image/image/imageloadobserver~ImageLoadObserver}.\n *\n * @see module:image/image/imageloadobserver~ImageLoadObserver\n * @event module:engine/view/document~Document#event:imageLoaded\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */","map":{"version":3,"names":["Observer","ImageLoadObserver","observe","domRoot","listenTo","event","domEvent","domElement","target","checkShouldIgnoreEventFromTarget","tagName","_fireEvents","useCapture","isEnabled","document","fire"],"sources":["C:/data/project/realproject/node_modules/@ckeditor/ckeditor5-image/src/image/imageloadobserver.js"],"sourcesContent":["/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/image/imageloadobserver\n */\n\nimport { Observer } from 'ckeditor5/src/engine';\n\n/**\n * Observes all new images added to the {@link module:engine/view/document~Document},\n * fires {@link module:engine/view/document~Document#event:imageLoaded} and\n * {@link module:engine/view/document~Document#event:layoutChanged} event every time when the new image\n * has been loaded.\n *\n * **Note:** This event is not fired for images that has been added to the document and rendered as `complete` (already loaded).\n *\n * @extends module:engine/view/observer/observer~Observer\n */\nexport default class ImageLoadObserver extends Observer {\n\t/**\n\t * @inheritDoc\n\t */\n\tobserve( domRoot ) {\n\t\tthis.listenTo( domRoot, 'load', ( event, domEvent ) => {\n\t\t\tconst domElement = domEvent.target;\n\n\t\t\tif ( this.checkShouldIgnoreEventFromTarget( domElement ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( domElement.tagName == 'IMG' ) {\n\t\t\t\tthis._fireEvents( domEvent );\n\t\t\t}\n\t\t\t// Use capture phase for better performance (#4504).\n\t\t}, { useCapture: true } );\n\t}\n\n\t/**\n\t * Fires {@link module:engine/view/document~Document#event:layoutChanged} and\n\t * {@link module:engine/view/document~Document#event:imageLoaded}\n\t * if observer {@link #isEnabled is enabled}.\n\t *\n\t * @protected\n\t * @param {Event} domEvent The DOM event.\n\t */\n\t_fireEvents( domEvent ) {\n\t\tif ( this.isEnabled ) {\n\t\t\tthis.document.fire( 'layoutChanged' );\n\t\t\tthis.document.fire( 'imageLoaded', domEvent );\n\t\t}\n\t}\n}\n\n/**\n * Fired when an <img/> DOM element has been loaded in the DOM root.\n *\n * Introduced by {@link module:image/image/imageloadobserver~ImageLoadObserver}.\n *\n * @see module:image/image/imageloadobserver~ImageLoadObserver\n * @event module:engine/view/document~Document#event:imageLoaded\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAASA,QAAQ,QAAQ,sBAAsB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAMC,iBAAiB,SAASD,QAAQ,CAAC;EACvD;AACD;AACA;EACCE,OAAO,CAAEC,OAAO,EAAG;IAClB,IAAI,CAACC,QAAQ,CAAED,OAAO,EAAE,MAAM,EAAE,CAAEE,KAAK,EAAEC,QAAQ,KAAM;MACtD,MAAMC,UAAU,GAAGD,QAAQ,CAACE,MAAM;MAElC,IAAK,IAAI,CAACC,gCAAgC,CAAEF,UAAU,CAAE,EAAG;QAC1D;MACD;MAEA,IAAKA,UAAU,CAACG,OAAO,IAAI,KAAK,EAAG;QAClC,IAAI,CAACC,WAAW,CAAEL,QAAQ,CAAE;MAC7B;MACA;IACD,CAAC,EAAE;MAAEM,UAAU,EAAE;IAAK,CAAC,CAAE;EAC1B;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACCD,WAAW,CAAEL,QAAQ,EAAG;IACvB,IAAK,IAAI,CAACO,SAAS,EAAG;MACrB,IAAI,CAACC,QAAQ,CAACC,IAAI,CAAE,eAAe,CAAE;MACrC,IAAI,CAACD,QAAQ,CAACC,IAAI,CAAE,aAAa,EAAET,QAAQ,CAAE;IAC9C;EACD;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\data\\\\project\\\\realproject\\\\src\\\\pboard\\\\PboardRead.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Form, Button, Row } from 'react-bootstrap';\nimport { Card, Grid, TextField } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PboardRead = _ref => {\n  _s();\n  let {\n    history,\n    match\n  } = _ref;\n  const pcode = match.params.pcode;\n  const [image, setImage] = useState('');\n  const [postRead, setPostRead] = useState({\n    ptitle: '',\n    pcontent: '',\n    pwriter: '',\n    pimage: '',\n    viewcnt: '',\n    regDate: '',\n    updateDate: '',\n    file: null\n  });\n  const {\n    ptitle,\n    pcontent,\n    pwriter,\n    pimage,\n    viewcnt,\n    pprice,\n    regDate,\n    updateDate,\n    file\n  } = postRead;\n  const callPostRead = async () => {\n    const result = await axios.get(`/api/pboard/read/${pcode}`);\n    setPostRead(result.data);\n    setImage(result.data.pimage);\n  };\n  const onChangeForm = e => {\n    setPostRead({\n      ...postRead,\n      [e.target.name]: e.target.value\n    });\n  };\n  const onChangeFile = e => {\n    setPostRead({\n      ...postRead,\n      file: e.target.files[0]\n    });\n    setImage(URL.createObjectURL(e.target.files[0]));\n  };\n  const onSubmit_update = async e => {\n    e.preventDefault();\n    if (!window.confirm('정말로 수정하시겠습니까?')) return;\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"pcode\", pcode);\n    formData.append(\"pcontent\", pcontent);\n    formData.append(\"ptitle\", ptitle);\n    formData.append(\"pprice\", pprice);\n    formData.append(\"pwriter\", pwriter);\n    formData.append(\"pimage\", pimage);\n    for (const pair of formData.entries()) {\n      console.log(pair[0] + ',' + pair[1]);\n    }\n    await axios.post('/api/pboard/update', formData);\n    alert('수정완료');\n  };\n  useEffect(() => {\n    callPostRead();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"d-flex justify-content-center my-5\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: '30rem'\n        },\n        className: \"p-3\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: image || 'https://dummyimage.com/100x100',\n            alt: \"\\uBE48\\uC774\\uBBF8\\uC9C0\",\n            width: 150,\n            height: 150\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"my-3\",\n            type: \"file\",\n            onChange: onChangeFile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              required: true,\n              fullWidth: true,\n              value: ptitle,\n              onChange: onChangeForm,\n              label: \"\\uC81C\\uBAA9\",\n              name: \"ptitle\",\n              autoComplete: \"ptitle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              multiline: true,\n              minRows: 12,\n              variant: \"outlined\",\n              required: true,\n              fullWidth: true,\n              value: pcontent,\n              onChange: onChangeForm,\n              label: \"\\uB0B4\\uC6A9\\uC740 300\\uC790 \\uC81C\\uD55C\",\n              name: \"pcontent\",\n              autoComplete: \"pcontent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                required: true,\n                fullWidth: true,\n                placeholder: \"\\uAC00\\uACA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n                value: pprice,\n                onChange: onChangeForm,\n                name: \"pprice\",\n                type: \"number\",\n                autoComplete: \"pprice\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 30\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: onSubmit_update,\n              style: {\n                width: '100%',\n                margintTop: 300\n              },\n              children: \"\\uC0C1\\uD488\\uC815\\uBCF4 \\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(PboardRead, \"BxWjuCqSHxFaj8JnEHVQr+gGRo4=\");\n_c = PboardRead;\nexport default PboardRead;\nvar _c;\n$RefreshReg$(_c, \"PboardRead\");","map":{"version":3,"names":["React","axios","useState","useEffect","Form","Button","Row","Card","Grid","TextField","PboardRead","history","match","pcode","params","image","setImage","postRead","setPostRead","ptitle","pcontent","pwriter","pimage","viewcnt","regDate","updateDate","file","pprice","callPostRead","result","get","data","onChangeForm","e","target","name","value","onChangeFile","files","URL","createObjectURL","onSubmit_update","preventDefault","window","confirm","formData","FormData","append","pair","entries","console","log","post","alert","width","marginTop","margintTop"],"sources":["C:/data/project/realproject/src/pboard/PboardRead.jsx"],"sourcesContent":["import React from 'react'\r\nimport axios from 'axios'\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Form, Button, Row } from 'react-bootstrap';\r\nimport { Card, Grid, TextField } from '@material-ui/core';\r\n\r\nconst PboardRead = ({ history, match }) => {\r\n  const pcode = match.params.pcode;\r\n  const [image, setImage] = useState('');\r\n  const [postRead, setPostRead] = useState({\r\n    ptitle: '',\r\n    pcontent: '',\r\n    pwriter: '',\r\n    pimage: '',\r\n    viewcnt: '',\r\n    regDate: '',\r\n    updateDate: '',\r\n    file: null\r\n  });\r\n  const { ptitle, pcontent, pwriter, pimage, viewcnt, pprice, regDate, updateDate, file } = postRead;\r\n\r\n\r\n  const callPostRead = async () => {\r\n    const result = await axios.get(`/api/pboard/read/${pcode}`)\r\n    setPostRead(result.data);\r\n    setImage(result.data.pimage);\r\n  }\r\n\r\n\r\n  const onChangeForm = (e) => {\r\n    setPostRead({\r\n      ...postRead,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  const onChangeFile = (e) => {\r\n    setPostRead({\r\n      ...postRead,\r\n      file: e.target.files[0]\r\n    })\r\n    setImage(URL.createObjectURL(e.target.files[0]))\r\n  }\r\n\r\n  const onSubmit_update = async (e) => {\r\n    e.preventDefault();\r\n    if (!window.confirm('정말로 수정하시겠습니까?')) return;\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    formData.append(\"pcode\", pcode);\r\n    formData.append(\"pcontent\", pcontent);\r\n    formData.append(\"ptitle\", ptitle);\r\n    formData.append(\"pprice\", pprice);\r\n    formData.append(\"pwriter\", pwriter);\r\n    formData.append(\"pimage\", pimage);\r\n    for(const pair of formData.entries()){\r\n      console.log(pair[0]+','+pair[1])\r\n    }\r\n    await axios.post('/api/pboard/update', formData);\r\n    alert('수정완료')\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    callPostRead();\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Row className='d-flex justify-content-center my-5'>\r\n        <Card style={{ width: '30rem' }} className=\"p-3\">\r\n          <Form>\r\n            <img src={image || 'https://dummyimage.com/100x100'} alt=\"빈이미지\" width={150} height={150} />\r\n            <Form.Control className='my-3'\r\n              type=\"file\"\r\n              onChange={onChangeFile} />\r\n            <hr />\r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                value={ptitle}\r\n                onChange={onChangeForm}\r\n                label=\"제목\"\r\n                name=\"ptitle\"\r\n                autoComplete=\"ptitle\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextField multiline\r\n                minRows={12}\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                value={pcontent}\r\n                onChange={onChangeForm}\r\n                label=\"내용은 300자 제한\"\r\n                name=\"pcontent\"\r\n                autoComplete=\"pcontent\"\r\n              />\r\n              {/*                             <Grid>\r\n                                <input type='hidden' name={pwriter}  value={pwriter}  />\r\n                            </Grid> */}\r\n              <hr />\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  placeholder='가격을 입력하세요'\r\n                  value={pprice}\r\n                  onChange={onChangeForm}\r\n                  name=\"pprice\"\r\n                  type='number'\r\n                  autoComplete=\"pprice\"\r\n                />\r\n              </Grid>\r\n              <hr />\r\n            </Grid>\r\n            <div style={{ marginTop: 30 }}>\r\n              <Button onClick={onSubmit_update} style={{ width: '100%', margintTop: 300 }}>상품정보 수정</Button>\r\n            </div>\r\n          </Form>\r\n        </Card>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PboardRead"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,IAAI,EAAEC,MAAM,EAAEC,GAAG,QAAQ,iBAAiB;AACnD,SAASC,IAAI,EAAEC,IAAI,EAAEC,SAAS,QAAQ,mBAAmB;AAAC;AAE1D,MAAMC,UAAU,GAAG,QAAwB;EAAA;EAAA,IAAvB;IAAEC,OAAO;IAAEC;EAAM,CAAC;EACpC,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACD,KAAK;EAChC,MAAM,CAACE,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC;IACvCiB,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAE,EAAE;IACXC,MAAM,EAAE,EAAE;IACVC,OAAO,EAAE,EAAE;IACXC,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE,EAAE;IACdC,IAAI,EAAE;EACR,CAAC,CAAC;EACF,MAAM;IAAEP,MAAM;IAAEC,QAAQ;IAAEC,OAAO;IAAEC,MAAM;IAAEC,OAAO;IAAEI,MAAM;IAAEH,OAAO;IAAEC,UAAU;IAAEC;EAAK,CAAC,GAAGT,QAAQ;EAGlG,MAAMW,YAAY,GAAG,YAAY;IAC/B,MAAMC,MAAM,GAAG,MAAM5B,KAAK,CAAC6B,GAAG,CAAE,oBAAmBjB,KAAM,EAAC,CAAC;IAC3DK,WAAW,CAACW,MAAM,CAACE,IAAI,CAAC;IACxBf,QAAQ,CAACa,MAAM,CAACE,IAAI,CAACT,MAAM,CAAC;EAC9B,CAAC;EAGD,MAAMU,YAAY,GAAIC,CAAC,IAAK;IAC1Bf,WAAW,CAAC;MACV,GAAGD,QAAQ;MACX,CAACgB,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAC5B,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,YAAY,GAAIJ,CAAC,IAAK;IAC1Bf,WAAW,CAAC;MACV,GAAGD,QAAQ;MACXS,IAAI,EAAEO,CAAC,CAACC,MAAM,CAACI,KAAK,CAAC,CAAC;IACxB,CAAC,CAAC;IACFtB,QAAQ,CAACuB,GAAG,CAACC,eAAe,CAACP,CAAC,CAACC,MAAM,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;EAClD,CAAC;EAED,MAAMG,eAAe,GAAG,MAAOR,CAAC,IAAK;IACnCA,CAAC,CAACS,cAAc,EAAE;IAClB,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,eAAe,CAAC,EAAE;IACtC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAErB,IAAI,CAAC;IAC7BmB,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAElC,KAAK,CAAC;IAC/BgC,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAE3B,QAAQ,CAAC;IACrCyB,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAE5B,MAAM,CAAC;IACjC0B,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEpB,MAAM,CAAC;IACjCkB,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAE1B,OAAO,CAAC;IACnCwB,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEzB,MAAM,CAAC;IACjC,KAAI,MAAM0B,IAAI,IAAIH,QAAQ,CAACI,OAAO,EAAE,EAAC;MACnCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC,CAAC,CAAC,GAAC,GAAG,GAACA,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC;IACA,MAAM/C,KAAK,CAACmD,IAAI,CAAC,oBAAoB,EAAEP,QAAQ,CAAC;IAChDQ,KAAK,CAAC,MAAM,CAAC;EAEf,CAAC;EAEDlD,SAAS,CAAC,MAAM;IACdyB,YAAY,EAAE;EAChB,CAAC,EAAE,EAAE,CAAC;EAGN,oBACE;IAAA,uBAEE,QAAC,GAAG;MAAC,SAAS,EAAC,oCAAoC;MAAA,uBACjD,QAAC,IAAI;QAAC,KAAK,EAAE;UAAE0B,KAAK,EAAE;QAAQ,CAAE;QAAC,SAAS,EAAC,KAAK;QAAA,uBAC9C,QAAC,IAAI;UAAA,wBACH;YAAK,GAAG,EAAEvC,KAAK,IAAI,gCAAiC;YAAC,GAAG,EAAC,0BAAM;YAAC,KAAK,EAAE,GAAI;YAAC,MAAM,EAAE;UAAI;YAAA;YAAA;YAAA;UAAA,QAAG,eAC3F,QAAC,IAAI,CAAC,OAAO;YAAC,SAAS,EAAC,MAAM;YAC5B,IAAI,EAAC,MAAM;YACX,QAAQ,EAAEsB;UAAa;YAAA;YAAA;YAAA;UAAA,QAAG,eAC5B;YAAA;YAAA;YAAA;UAAA,QAAM,eAEN,QAAC,IAAI;YAAC,IAAI;YAAC,EAAE,EAAE,EAAG;YAAA,uBAChB,QAAC,SAAS;cACR,OAAO,EAAC,UAAU;cAClB,QAAQ;cACR,SAAS;cACT,KAAK,EAAElB,MAAO;cACd,QAAQ,EAAEa,YAAa;cACvB,KAAK,EAAC,cAAI;cACV,IAAI,EAAC,QAAQ;cACb,YAAY,EAAC;YAAQ;cAAA;cAAA;cAAA;YAAA;UACrB;YAAA;YAAA;YAAA;UAAA,QACG,eAEP,QAAC,IAAI;YAAC,IAAI;YAAC,EAAE,EAAE,EAAG;YAAA,wBAChB,QAAC,SAAS;cAAC,SAAS;cAClB,OAAO,EAAE,EAAG;cACZ,OAAO,EAAC,UAAU;cAClB,QAAQ;cACR,SAAS;cACT,KAAK,EAAEZ,QAAS;cAChB,QAAQ,EAAEY,YAAa;cACvB,KAAK,EAAC,2CAAa;cACnB,IAAI,EAAC,UAAU;cACf,YAAY,EAAC;YAAU;cAAA;cAAA;cAAA;YAAA,QACvB,eAIF;cAAA;cAAA;cAAA;YAAA,QAAM,eACN,QAAC,IAAI;cAAC,IAAI;cAAC,EAAE,EAAE,EAAG;cAAA,uBAChB,QAAC,SAAS;gBACR,OAAO,EAAC,UAAU;gBAClB,QAAQ;gBACR,SAAS;gBACT,WAAW,EAAC,mDAAW;gBACvB,KAAK,EAAEL,MAAO;gBACd,QAAQ,EAAEK,YAAa;gBACvB,IAAI,EAAC,QAAQ;gBACb,IAAI,EAAC,QAAQ;gBACb,YAAY,EAAC;cAAQ;gBAAA;gBAAA;gBAAA;cAAA;YACrB;cAAA;cAAA;cAAA;YAAA,QACG,eACP;cAAA;cAAA;cAAA;YAAA,QAAM;UAAA;YAAA;YAAA;YAAA;UAAA,QACD,eACP;YAAK,KAAK,EAAE;cAAEuB,SAAS,EAAE;YAAG,CAAE;YAAA,uBAC5B,QAAC,MAAM;cAAC,OAAO,EAAEd,eAAgB;cAAC,KAAK,EAAE;gBAAEa,KAAK,EAAE,MAAM;gBAAEE,UAAU,EAAE;cAAI,CAAE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAiB;YAAA;YAAA;YAAA;UAAA,QACzF;QAAA;UAAA;UAAA;UAAA;QAAA;MACD;QAAA;QAAA;QAAA;MAAA;IACF;MAAA;MAAA;MAAA;IAAA;EACH;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAA,GA9HK9C,UAAU;AAAA,KAAVA,UAAU;AAgIhB,eAAeA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module"}
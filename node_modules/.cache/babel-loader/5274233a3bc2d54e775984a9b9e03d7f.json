{"ast":null,"code":"var _jsxFileName = \"C:\\\\data\\\\project\\\\realproject\\\\src\\\\my\\\\MyChatList.jsx\",\n  _s = $RefreshSig$();\nimport { collection, limit, onSnapshot, orderBy, query } from 'firebase/firestore';\nimport React, { useEffect } from 'react';\nimport './chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyChatList = () => {\n  _s();\n  const getMessages = () => {\n    const q = query(collection(db, `${pwriter_id}`), orderBy('date', 'asc'), limit(100));\n    onSnapshot(q, snapshot => {\n      let rows = [];\n      snapshot.forEach(doc => {\n        rows.push({\n          uid: doc.data().uid\n        });\n      });\n      setMessages(rows);\n    });\n  };\n  useEffect(() => {\n    getMessages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: 100\n    },\n    children: \"list\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(MyChatList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = MyChatList;\nexport default MyChatList;\nvar _c;\n$RefreshReg$(_c, \"MyChatList\");","map":{"version":3,"names":["collection","limit","onSnapshot","orderBy","query","React","useEffect","MyChatList","getMessages","q","db","pwriter_id","snapshot","rows","forEach","doc","push","uid","data","setMessages","marginTop"],"sources":["C:/data/project/realproject/src/my/MyChatList.jsx"],"sourcesContent":["import { collection, limit, onSnapshot, orderBy, query } from 'firebase/firestore';\r\nimport React, { useEffect } from 'react';\r\nimport './chat.css';\r\nconst MyChatList = () => {\r\n    const getMessages = () => {\r\n        const q = query(\r\n            collection(db, `${pwriter_id}`),\r\n            orderBy('date', 'asc'),\r\n            limit(100)\r\n        );\r\n\r\n        onSnapshot(q, (snapshot) => {\r\n            let rows = [];\r\n            snapshot.forEach((doc) => {\r\n                rows.push({\r\n                    uid: doc.data().uid,\r\n                });\r\n            });\r\n            setMessages(rows);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getMessages();\r\n    }, [])\r\n\r\n    return (\r\n        <div style={{ marginTop: 100 }}>\r\n            list\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyChatList"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,KAAK,EAAEC,UAAU,EAAEC,OAAO,EAAEC,KAAK,QAAQ,oBAAoB;AAClF,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,YAAY;AAAC;AACpB,MAAMC,UAAU,GAAG,MAAM;EAAA;EACrB,MAAMC,WAAW,GAAG,MAAM;IACtB,MAAMC,CAAC,GAAGL,KAAK,CACXJ,UAAU,CAACU,EAAE,EAAG,GAAEC,UAAW,EAAC,CAAC,EAC/BR,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,EACtBF,KAAK,CAAC,GAAG,CAAC,CACb;IAEDC,UAAU,CAACO,CAAC,EAAGG,QAAQ,IAAK;MACxB,IAAIC,IAAI,GAAG,EAAE;MACbD,QAAQ,CAACE,OAAO,CAAEC,GAAG,IAAK;QACtBF,IAAI,CAACG,IAAI,CAAC;UACNC,GAAG,EAAEF,GAAG,CAACG,IAAI,EAAE,CAACD;QACpB,CAAC,CAAC;MACN,CAAC,CAAC;MACFE,WAAW,CAACN,IAAI,CAAC;IACrB,CAAC,CAAC;EACN,CAAC;EAEDP,SAAS,CAAC,MAAM;IACZE,WAAW,EAAE;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI;IAAK,KAAK,EAAE;MAAEY,SAAS,EAAE;IAAI,CAAE;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAEzB;AAEd,CAAC;AAAA,GA5BKb,UAAU;AAAA,KAAVA,UAAU;AA8BhB,eAAeA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module"}
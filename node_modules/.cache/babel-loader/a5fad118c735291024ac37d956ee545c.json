{"ast":null,"code":"var _jsxFileName = \"C:\\\\data\\\\project\\\\realproject\\\\src\\\\my\\\\MyChatRead.jsx\",\n  _s = $RefreshSig$();\nimport { addDoc, collection, deleteDoc, doc, getFirestore, limit, onSnapshot, orderBy, query } from 'firebase/firestore';\nimport moment from 'moment/moment';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Form, Row, Button, Spinner } from 'react-bootstrap';\nimport { UserContext } from '../context/UserContext';\nimport { app } from '../fireStore';\nimport './chat.css';\nimport MyChatItem from './MyChatItem';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyChatRead = _ref => {\n  _s();\n  let {\n    match,\n    history\n  } = _ref;\n  const {\n    loginUser\n  } = useContext(UserContext);\n  const pcode = match.params.pcode;\n  const db = getFirestore(app);\n  const [msg, setMsg] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [pwriter_id, setPwriter_id] = useState('aasdqwe');\n  const callPwriter_id = async () => {\n    const result = await axios.get(`/api/pboard/read/${pcode}`);\n    setPwriter_id(result.data.uid);\n    getMessages();\n  };\n\n  //Doc element를 최초 생성\n  const sendMessage = async e => {\n    if (e.keyCode === 13) {\n      if (msg === '') {\n        alert('보낼 내용을 입력하세요');\n        return;\n      }\n      if (e.ctrlKey) {\n        let val = e.target.value;\n        let start = e.target.selectionStart;\n        let end = e.target.selectionEnd;\n        e.target.value = val.substring(0, start) + \"\\n\" + val.substring(end);\n        setMsg(e.target.value);\n        return false; //  prevent focus\n      }\n\n      //rooms라는 collectino아래에 loginUser.uid라는 doc을 만듦.\n      //매번 로그인해서 채팅칠 때마다 다른 doc이 생김.\n      //그 아래 subcollection으로 room이름이 자기 loginUser.uid인 방이 생기고\n      //그 아래 subdoc으로 메시지가 들어감.\n      //pcode ㅡ> pwriter_id(판매자 uid) ㅡ> 로그인한아이디(uid) \n      const docRef = doc(db, pcode, pwriter_id);\n      const colRef = collection(docRef, `${sessionStorage.getItem('uid')}`);\n      await addDoc(colRef, {\n        uid: sessionStorage.getItem('uid'),\n        text: msg,\n        date: moment(new Date()).format('LTS'),\n        uprofile: loginUser.uprofile,\n        unickname: loginUser.unickname\n      });\n      setMsg('');\n    }\n  };\n\n  //만든 Doc element를 fetch. 새로 배열 하나 만들어서 뿌려야함.\n  //맨 처음 render할 때 axios가 느리기 때문에 pwriter_id가 빈 값으로 들어가서 /가 하나 더 생김.\n  //그래서 자꾸 path must not contain //이라는 오류가 뜸.\n  //그러니까 초기 값으로 ''같은 빈 칸이 아니라 'a'를 넣어주면 문제 해결.\n  const getMessages = () => {\n    const q = query(collection(db, `${pcode}/${pwriter_id}/${sessionStorage.getItem('uid')}`), orderBy('date', 'asc'), limit(100));\n    console.log(q);\n    onSnapshot(q, snapshot => {\n      let rows = [];\n      snapshot.forEach(doc => {\n        rows.push({\n          id: doc.id,\n          uid: doc.data().uid,\n          text: doc.data().text,\n          date: doc.data().date,\n          uprofile: doc.data().uprofile,\n          unickname: doc.data().unickname\n        });\n      });\n      setMessages(rows);\n    });\n  };\n  useEffect(() => {\n    callPwriter_id();\n  }, []);\n  const onClickDelete = async id => {\n    if (!window.confirm(`메세지를 삭제하시겠습니까?`)) return;\n    await deleteDoc(doc(db, `rooms/${sessionStorage.getItem('uid')}/room${sessionStorage.getItem('uid')}`, id));\n  };\n  if (!messages) return /*#__PURE__*/_jsxDEV(Spinner, {\n    animation: \"border\",\n    variant: \"primary\",\n    style: {\n      width: '20rem',\n      height: '20rem',\n      marginTop: '220px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '50px 0px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap\",\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: message.uid === loginUser.uid ? 'chat ch2' : 'chat ch1',\n        children: /*#__PURE__*/_jsxDEV(MyChatItem, {\n          message: message,\n          onClickDelete: onClickDelete\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-5 justify-content-center\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        className: \"d-flex my-3\",\n        style: {\n          width: '52rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          value: msg,\n          onChange: e => setMsg(e.target.value),\n          onKeyDown: sendMessage,\n          placeholder: \"enter\\uB97C \\uB204\\uB974\\uC138\\uC694\",\n          className: \"mx-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => history.push(`/my/pay/${pcode}`),\n          children: \"\\uACB0\\uC81C\\uCC3D \\uC774\\uB3D9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(MyChatRead, \"4t1MTVSkQQstc7yWzzzfVm2OVoM=\");\n_c = MyChatRead;\nexport default MyChatRead;\nvar _c;\n$RefreshReg$(_c, \"MyChatRead\");","map":{"version":3,"names":["addDoc","collection","deleteDoc","doc","getFirestore","limit","onSnapshot","orderBy","query","moment","React","useContext","useEffect","useState","Form","Row","Button","Spinner","UserContext","app","MyChatItem","axios","MyChatRead","match","history","loginUser","pcode","params","db","msg","setMsg","messages","setMessages","pwriter_id","setPwriter_id","callPwriter_id","result","get","data","uid","getMessages","sendMessage","e","keyCode","alert","ctrlKey","val","target","value","start","selectionStart","end","selectionEnd","substring","docRef","colRef","sessionStorage","getItem","text","date","Date","format","uprofile","unickname","q","console","log","snapshot","rows","forEach","push","id","onClickDelete","window","confirm","width","height","marginTop","margin","map","message"],"sources":["C:/data/project/realproject/src/my/MyChatRead.jsx"],"sourcesContent":["import { addDoc, collection, deleteDoc, doc, getFirestore, limit, onSnapshot, orderBy, query } from 'firebase/firestore';\r\nimport moment from 'moment/moment';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { Form, Row, Button, Spinner } from 'react-bootstrap';\r\nimport { UserContext } from '../context/UserContext';\r\nimport { app } from '../fireStore';\r\nimport './chat.css'\r\nimport MyChatItem from './MyChatItem';\r\nimport axios from 'axios';\r\n\r\nconst MyChatRead = ({match,history}) => {\r\n  const { loginUser } = useContext(UserContext);\r\n  const pcode = match.params.pcode;\r\n  const db = getFirestore(app);\r\n  const [msg, setMsg] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [pwriter_id,setPwriter_id]=useState('aasdqwe');\r\n\r\n  const callPwriter_id = async () => {\r\n        const result = await axios.get(`/api/pboard/read/${pcode}`)\r\n        setPwriter_id(result.data.uid);\r\n        getMessages();\r\n      }\r\n\r\n  //Doc element를 최초 생성\r\n  const sendMessage = async (e) => {\r\n      if (e.keyCode === 13) {\r\n          if (msg === '') {\r\n              alert('보낼 내용을 입력하세요')\r\n              return;\r\n          }\r\n          if (e.ctrlKey) {\r\n              let val = e.target.value;\r\n              let start = e.target.selectionStart;\r\n              let end = e.target.selectionEnd;\r\n              e.target.value = val.substring(0, start) + \"\\n\" + val.substring(end);\r\n              setMsg(e.target.value);\r\n              return false; //  prevent focus\r\n          }\r\n\r\n          //rooms라는 collectino아래에 loginUser.uid라는 doc을 만듦.\r\n          //매번 로그인해서 채팅칠 때마다 다른 doc이 생김.\r\n          //그 아래 subcollection으로 room이름이 자기 loginUser.uid인 방이 생기고\r\n          //그 아래 subdoc으로 메시지가 들어감.\r\n          //pcode ㅡ> pwriter_id(판매자 uid) ㅡ> 로그인한아이디(uid) \r\n          const docRef = doc(db, pcode, pwriter_id);\r\n          const colRef = collection(docRef, `${sessionStorage.getItem('uid')}`)\r\n          await addDoc(colRef, {\r\n              uid: sessionStorage.getItem('uid'),\r\n              text: msg,\r\n              date: moment(new Date()).format('LTS'),\r\n              uprofile: loginUser.uprofile,\r\n              unickname: loginUser.unickname\r\n          });\r\n          setMsg('');\r\n      }\r\n  }\r\n\r\n  //만든 Doc element를 fetch. 새로 배열 하나 만들어서 뿌려야함.\r\n  //맨 처음 render할 때 axios가 느리기 때문에 pwriter_id가 빈 값으로 들어가서 /가 하나 더 생김.\r\n  //그래서 자꾸 path must not contain //이라는 오류가 뜸.\r\n  //그러니까 초기 값으로 ''같은 빈 칸이 아니라 'a'를 넣어주면 문제 해결.\r\n  const getMessages = () => {\r\n      const q = query(\r\n          collection(db, `${pcode}/${pwriter_id}/${sessionStorage.getItem('uid')}`),\r\n          orderBy('date', 'asc'),\r\n          limit(100)\r\n      );\r\n      console.log(q);\r\n\r\n      onSnapshot(q, (snapshot) => {\r\n          let rows = [];\r\n          snapshot.forEach((doc) => {\r\n              rows.push({\r\n                  id: doc.id,\r\n                  uid: doc.data().uid,\r\n                  text: doc.data().text,\r\n                  date: doc.data().date,\r\n                  uprofile: doc.data().uprofile,\r\n                  unickname: doc.data().unickname\r\n              });\r\n          });\r\n          setMessages(rows);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    callPwriter_id();\r\n}, []);\r\n\r\n\r\n\r\n  const onClickDelete = async (id) => {\r\n      if (!window.confirm(`메세지를 삭제하시겠습니까?`)) return;\r\n      await deleteDoc(doc(db, `rooms/${sessionStorage.getItem('uid')}/room${sessionStorage.getItem('uid')}`, id));\r\n  }\r\n\r\n  if (!messages) return (\r\n    <Spinner animation=\"border\" variant=\"primary\"\r\n        style={{ width: '20rem', height: '20rem', marginTop: '220px' }} />\r\n)\r\n\r\n  return (\r\n    <div style={{ margin: '50px 0px' }}>\r\n            {/*         <Button onClick={()=>onClickDeleteAll()}>채팅창초기화</Button> */}\r\n            <div className=\"wrap\">\r\n\r\n                {messages.map(message =>\r\n                    <div className={message.uid === loginUser.uid ? 'chat ch2' : 'chat ch1'}>\r\n                        <MyChatItem key={message.id}\r\n                            message={message}\r\n                            onClickDelete={onClickDelete} />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n\r\n            <Row className=\"mt-5 justify-content-center\">\r\n                <Form className=\"d-flex my-3\" style={{ width: '52rem' }}>\r\n                    <Form.Control\r\n                        as=\"textarea\"\r\n                        value={msg}\r\n                        onChange={(e) => setMsg(e.target.value)}\r\n                        onKeyDown={sendMessage}\r\n                        placeholder='enter를 누르세요' className=\"mx-2\" />\r\n                </Form>\r\n                <div>\r\n                    <Button onClick={() => history.push(`/my/pay/${pcode}`)}>결제창 이동</Button>\r\n                </div>\r\n            </Row>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default MyChatRead"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/toolbar/balloon/balloontoolbar\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ContextualBalloon from '../../panel/balloon/contextualballoon';\nimport ToolbarView from '../toolbarview';\nimport BalloonPanelView, { generatePositions } from '../../panel/balloon/balloonpanelview.js';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport Rect from '@ckeditor/ckeditor5-utils/src/dom/rect';\nimport normalizeToolbarConfig from '../normalizetoolbarconfig';\nimport { debounce } from 'lodash-es';\nimport ResizeObserver from '@ckeditor/ckeditor5-utils/src/dom/resizeobserver';\nimport toUnit from '@ckeditor/ckeditor5-utils/src/dom/tounit';\nimport { env, global } from '@ckeditor/ckeditor5-utils';\nconst toPx = toUnit('px');\n\n/**\n * The contextual toolbar.\n *\n * It uses the {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon contextual balloon plugin}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class BalloonToolbar extends Plugin {\n  /**\n   * @inheritDoc\n   */\n  static get pluginName() {\n    return 'BalloonToolbar';\n  }\n\n  /**\n   * @inheritDoc\n   */\n  static get requires() {\n    return [ContextualBalloon];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  constructor(editor) {\n    super(editor);\n\n    /**\n     * A cached and normalized `config.balloonToolbar` object.\n     *\n     * @type {module:core/editor/editorconfig~EditorConfig#balloonToolbar}\n     * @private\n     */\n    this._balloonConfig = normalizeToolbarConfig(editor.config.get('balloonToolbar'));\n\n    /**\n     * The toolbar view displayed in the balloon.\n     *\n     * @type {module:ui/toolbar/toolbarview~ToolbarView}\n     */\n    this.toolbarView = this._createToolbarView();\n\n    /**\n     * Tracks the focus of the {@link module:core/editor/editorui~EditorUI#getEditableElement editable element}\n     * and the {@link #toolbarView}. When both are blurred then the toolbar should hide.\n     *\n     * @readonly\n     * @type {module:utils:focustracker~FocusTracker}\n     */\n    this.focusTracker = new FocusTracker();\n\n    // Wait for the EditorUI#init. EditableElement is not available before.\n    editor.ui.once('ready', () => {\n      this.focusTracker.add(editor.ui.getEditableElement());\n      this.focusTracker.add(this.toolbarView.element);\n    });\n\n    // Register the toolbar so it becomes available for Alt+F10 and Esc navigation.\n    editor.ui.addToolbar(this.toolbarView, {\n      beforeFocus: () => this.show(true),\n      afterBlur: () => this.hide(),\n      isContextual: true\n    });\n\n    /**\n     * An instance of the resize observer that allows to respond to changes in editable's geometry\n     * so the toolbar can stay within its boundaries (and group toolbar items that do not fit).\n     *\n     * **Note**: Used only when `shouldNotGroupWhenFull` was **not** set in the\n     * {@link module:core/editor/editorconfig~EditorConfig#balloonToolbar configuration}.\n     *\n     * **Note:** Created in {@link #init}.\n     *\n     * @protected\n     * @member {module:utils/dom/resizeobserver~ResizeObserver}\n     */\n    this._resizeObserver = null;\n\n    /**\n     * The contextual balloon plugin instance.\n     *\n     * @private\n     * @type {module:ui/panel/balloon/contextualballoon~ContextualBalloon}\n     */\n    this._balloon = editor.plugins.get(ContextualBalloon);\n\n    /**\n     * Fires {@link #event:_selectionChangeDebounced} event using `lodash#debounce`.\n     *\n     * This function is stored as a plugin property to make possible to cancel\n     * trailing debounced invocation on destroy.\n     *\n     * @private\n     * @type {Function}\n     */\n    this._fireSelectionChangeDebounced = debounce(() => this.fire('_selectionChangeDebounced'), 200);\n\n    // The appearance of the BalloonToolbar method is eventâ€“driven.\n    // It is possible to stop the #show event and this prevent the toolbar from showing up.\n    this.decorate('show');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  init() {\n    const editor = this.editor;\n    const selection = editor.model.document.selection;\n\n    // Show/hide the toolbar on editable focus/blur.\n    this.listenTo(this.focusTracker, 'change:isFocused', (evt, name, isFocused) => {\n      const isToolbarVisible = this._balloon.visibleView === this.toolbarView;\n      if (!isFocused && isToolbarVisible) {\n        this.hide();\n      } else if (isFocused) {\n        this.show();\n      }\n    });\n\n    // Hide the toolbar when the selection is changed by a direct change or has changed to collapsed.\n    this.listenTo(selection, 'change:range', (evt, data) => {\n      if (data.directChange || selection.isCollapsed) {\n        this.hide();\n      }\n\n      // Fire internal `_selectionChangeDebounced` event to use it for showing\n      // the toolbar after the selection stops changing.\n      this._fireSelectionChangeDebounced();\n    });\n\n    // Show the toolbar when the selection stops changing.\n    this.listenTo(this, '_selectionChangeDebounced', () => {\n      if (this.editor.editing.view.document.isFocused) {\n        this.show();\n      }\n    });\n    if (!this._balloonConfig.shouldNotGroupWhenFull) {\n      this.listenTo(editor, 'ready', () => {\n        const editableElement = editor.ui.view.editable.element;\n\n        // Set #toolbarView's max-width on the initialization and update it on the editable resize.\n        this._resizeObserver = new ResizeObserver(editableElement, () => {\n          // The max-width equals 90% of the editable's width for the best user experience.\n          // The value keeps the balloon very close to the boundaries of the editable and limits the cases\n          // when the balloon juts out from the editable element it belongs to.\n          this.toolbarView.maxWidth = toPx(new Rect(editableElement).width * .9);\n        });\n      });\n    }\n\n    // Listen to the toolbar view and whenever it changes its geometry due to some items being\n    // grouped or ungrouped, update the position of the balloon because a shorter/longer toolbar\n    // means the balloon could be pointing at the wrong place. Once updated, the balloon will point\n    // at the right selection in the content again.\n    // https://github.com/ckeditor/ckeditor5/issues/6444\n    this.listenTo(this.toolbarView, 'groupedItemsUpdate', () => {\n      this._updatePosition();\n    });\n  }\n\n  /**\n   * Creates toolbar components based on given configuration.\n   * This needs to be done when all plugins are ready.\n   *\n   * @inheritDoc\n   */\n  afterInit() {\n    const factory = this.editor.ui.componentFactory;\n    this.toolbarView.fillFromConfig(this._balloonConfig, factory);\n  }\n\n  /**\n   * Creates the toolbar view instance.\n   *\n   * @private\n   * @returns {module:ui/toolbar/toolbarview~ToolbarView}\n   */\n  _createToolbarView() {\n    const t = this.editor.locale.t;\n    const shouldGroupWhenFull = !this._balloonConfig.shouldNotGroupWhenFull;\n    const toolbarView = new ToolbarView(this.editor.locale, {\n      shouldGroupWhenFull,\n      isFloating: true\n    });\n    toolbarView.ariaLabel = t('Editor contextual toolbar');\n    toolbarView.render();\n    return toolbarView;\n  }\n\n  /**\n   * Shows the toolbar and attaches it to the selection.\n   *\n   * Fires {@link #event:show} event which can be stopped to prevent the toolbar from showing up.\n   *\n   * @param {Boolean} [showForCollapsedSelection=false] When set `true`, the toolbar will show despite collapsed selection in the\n   * editing view.\n   */\n  show() {\n    let showForCollapsedSelection = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    const editor = this.editor;\n    const selection = editor.model.document.selection;\n    const schema = editor.model.schema;\n\n    // Do not add the toolbar to the balloon stack twice.\n    if (this._balloon.hasView(this.toolbarView)) {\n      return;\n    }\n\n    // Do not show the toolbar when the selection is collapsed.\n    if (selection.isCollapsed && !showForCollapsedSelection) {\n      return;\n    }\n\n    // Do not show the toolbar when there is more than one range in the selection and they fully contain selectable elements.\n    // See https://github.com/ckeditor/ckeditor5/issues/6443.\n    if (selectionContainsOnlyMultipleSelectables(selection, schema)) {\n      return;\n    }\n\n    // Don not show the toolbar when all components inside are disabled\n    // see https://github.com/ckeditor/ckeditor5-ui/issues/269.\n    if (Array.from(this.toolbarView.items).every(item => item.isEnabled !== undefined && !item.isEnabled)) {\n      return;\n    }\n\n    // Update the toolbar position when the editor ui should be refreshed.\n    this.listenTo(this.editor.ui, 'update', () => {\n      this._updatePosition();\n    });\n\n    // Add the toolbar to the common editor contextual balloon.\n    this._balloon.add({\n      view: this.toolbarView,\n      position: this._getBalloonPositionData(),\n      balloonClassName: 'ck-toolbar-container'\n    });\n  }\n\n  /**\n   * Hides the toolbar.\n   */\n  hide() {\n    if (this._balloon.hasView(this.toolbarView)) {\n      this.stopListening(this.editor.ui, 'update');\n      this._balloon.remove(this.toolbarView);\n    }\n  }\n\n  /**\n   * Returns positioning options for the {@link #_balloon}. They control the way balloon is attached\n   * to the selection.\n   *\n   * @private\n   * @returns {module:utils/dom/position~Options}\n   */\n  _getBalloonPositionData() {\n    const editor = this.editor;\n    const view = editor.editing.view;\n    const viewDocument = view.document;\n    const viewSelection = viewDocument.selection;\n\n    // Get direction of the selection.\n    const isBackward = viewDocument.selection.isBackward;\n    return {\n      // Because the target for BalloonPanelView is a Rect (not DOMRange), it's geometry will stay fixed\n      // as the window scrolls. To let the BalloonPanelView follow such Rect, is must be continuously\n      // computed and hence, the target is defined as a function instead of a static value.\n      // https://github.com/ckeditor/ckeditor5-ui/issues/195\n      target: () => {\n        const range = isBackward ? viewSelection.getFirstRange() : viewSelection.getLastRange();\n        const rangeRects = Rect.getDomRangeRects(view.domConverter.viewRangeToDom(range));\n\n        // Select the proper range rect depending on the direction of the selection.\n        if (isBackward) {\n          return rangeRects[0];\n        } else {\n          // Ditch the zero-width \"orphan\" rect in the next line for the forward selection if there's\n          // another one preceding it. It is not rendered as a selection by the web browser anyway.\n          // https://github.com/ckeditor/ckeditor5-ui/issues/308\n          if (rangeRects.length > 1 && rangeRects[rangeRects.length - 1].width === 0) {\n            rangeRects.pop();\n          }\n          return rangeRects[rangeRects.length - 1];\n        }\n      },\n      positions: this._getBalloonPositions(isBackward)\n    };\n  }\n\n  /**\n   * Updates the position of the {@link #_balloon} to make up for changes:\n   *\n   * * in the geometry of the selection it is attached to (e.g. the selection moved in the viewport or expanded or shrunk),\n   * * or the geometry of the balloon toolbar itself (e.g. the toolbar has grouped or ungrouped some items and it is shorter or longer).\n   *\n   * @private\n   */\n  _updatePosition() {\n    this._balloon.updatePosition(this._getBalloonPositionData());\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    super.destroy();\n    this.stopListening();\n    this._fireSelectionChangeDebounced.cancel();\n    this.toolbarView.destroy();\n    this.focusTracker.destroy();\n    if (this._resizeObserver) {\n      this._resizeObserver.destroy();\n    }\n  }\n\n  /**\n   * This event is fired just before the toolbar shows up. Stopping this event will prevent this.\n   *\n   * @event show\n   */\n\n  /**\n   * This is internal plugin event which is fired 200 ms after model selection last change.\n   * This is to makes easy test debounced action without need to use `setTimeout`.\n   *\n   * @protected\n   * @event _selectionChangeDebounced\n   */\n\n  /**\n   * Returns toolbar positions for the given direction of the selection.\n   *\n   * @private\n   * @param {Boolean} isBackward\n   * @returns {Array.<module:utils/dom/position~Position>}\n   */\n  _getBalloonPositions(isBackward) {\n    const isSafariIniOS = env.isSafari && env.isiOS;\n\n    // https://github.com/ckeditor/ckeditor5/issues/7707\n    const positions = isSafariIniOS ? generatePositions({\n      // 20px when zoomed out. Less then 20px when zoomed in; the \"radius\" of the native selection handle gets\n      // smaller as the user zooms in. No less than the default v-offset, though.\n      heightOffset: Math.max(BalloonPanelView.arrowHeightOffset, Math.round(20 / global.window.visualViewport.scale))\n    }) : BalloonPanelView.defaultPositions;\n    return isBackward ? [positions.northWestArrowSouth, positions.northWestArrowSouthWest, positions.northWestArrowSouthEast, positions.northWestArrowSouthMiddleEast, positions.northWestArrowSouthMiddleWest, positions.southWestArrowNorth, positions.southWestArrowNorthWest, positions.southWestArrowNorthEast, positions.southWestArrowNorthMiddleWest, positions.southWestArrowNorthMiddleEast] : [positions.southEastArrowNorth, positions.southEastArrowNorthEast, positions.southEastArrowNorthWest, positions.southEastArrowNorthMiddleEast, positions.southEastArrowNorthMiddleWest, positions.northEastArrowSouth, positions.northEastArrowSouthEast, positions.northEastArrowSouthWest, positions.northEastArrowSouthMiddleEast, positions.northEastArrowSouthMiddleWest];\n  }\n}\n\n// Returns \"true\" when the selection has multiple ranges and each range contains a selectable element\n// and nothing else.\n//\n// @private\n// @param {module:engine/model/selection~Selection} selection\n// @param {module:engine/model/schema~Schema} schema\n// @returns {Boolean}\nfunction selectionContainsOnlyMultipleSelectables(selection, schema) {\n  // It doesn't contain multiple objects if there is only one range.\n  if (selection.rangeCount === 1) {\n    return false;\n  }\n  return [...selection.getRanges()].every(range => {\n    const element = range.getContainedElement();\n    return element && schema.isSelectable(element);\n  });\n}\n\n/**\n * Contextual toolbar configuration. Used by the {@link module:ui/toolbar/balloon/balloontoolbar~BalloonToolbar}\n * feature.\n *\n * ## Configuring toolbar items\n *\n *\t\tconst config = {\n *\t\t\tballoonToolbar: [ 'bold', 'italic', 'undo', 'redo' ]\n *\t\t};\n *\n * You can also use `'|'` to create a separator between groups of items:\n *\n *\t\tconst config = {\n *\t\t\tballoonToolbar: [ 'bold', 'italic', '|', 'undo', 'redo' ]\n *\t\t};\n *\n * Read also about configuring the main editor toolbar in {@link module:core/editor/editorconfig~EditorConfig#toolbar}.\n *\n * ## Configuring items grouping\n *\n * You can prevent automatic items grouping by setting the `shouldNotGroupWhenFull` option:\n *\n *\t\tconst config = {\n *\t\t\tballoonToolbar: {\n *\t\t\t\titems: [ 'bold', 'italic', 'undo', 'redo' ],\n *\t\t\t\tshouldNotGroupWhenFull: true\n *\t\t\t},\n *\t\t};\n *\n * @member {Array.<String>|Object} module:core/editor/editorconfig~EditorConfig#balloonToolbar\n */","map":{"version":3,"names":["Plugin","ContextualBalloon","ToolbarView","BalloonPanelView","generatePositions","FocusTracker","Rect","normalizeToolbarConfig","debounce","ResizeObserver","toUnit","env","global","toPx","BalloonToolbar","pluginName","requires","constructor","editor","_balloonConfig","config","get","toolbarView","_createToolbarView","focusTracker","ui","once","add","getEditableElement","element","addToolbar","beforeFocus","show","afterBlur","hide","isContextual","_resizeObserver","_balloon","plugins","_fireSelectionChangeDebounced","fire","decorate","init","selection","model","document","listenTo","evt","name","isFocused","isToolbarVisible","visibleView","data","directChange","isCollapsed","editing","view","shouldNotGroupWhenFull","editableElement","editable","maxWidth","width","_updatePosition","afterInit","factory","componentFactory","fillFromConfig","t","locale","shouldGroupWhenFull","isFloating","ariaLabel","render","showForCollapsedSelection","schema","hasView","selectionContainsOnlyMultipleSelectables","Array","from","items","every","item","isEnabled","undefined","position","_getBalloonPositionData","balloonClassName","stopListening","remove","viewDocument","viewSelection","isBackward","target","range","getFirstRange","getLastRange","rangeRects","getDomRangeRects","domConverter","viewRangeToDom","length","pop","positions","_getBalloonPositions","updatePosition","destroy","cancel","isSafariIniOS","isSafari","isiOS","heightOffset","Math","max","arrowHeightOffset","round","window","visualViewport","scale","defaultPositions","northWestArrowSouth","northWestArrowSouthWest","northWestArrowSouthEast","northWestArrowSouthMiddleEast","northWestArrowSouthMiddleWest","southWestArrowNorth","southWestArrowNorthWest","southWestArrowNorthEast","southWestArrowNorthMiddleWest","southWestArrowNorthMiddleEast","southEastArrowNorth","southEastArrowNorthEast","southEastArrowNorthWest","southEastArrowNorthMiddleEast","southEastArrowNorthMiddleWest","northEastArrowSouth","northEastArrowSouthEast","northEastArrowSouthWest","northEastArrowSouthMiddleEast","northEastArrowSouthMiddleWest","rangeCount","getRanges","getContainedElement","isSelectable"],"sources":["C:/data/project/realproject/node_modules/@ckeditor/ckeditor5-ui/src/toolbar/balloon/balloontoolbar.js"],"sourcesContent":["/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/toolbar/balloon/balloontoolbar\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ContextualBalloon from '../../panel/balloon/contextualballoon';\nimport ToolbarView from '../toolbarview';\nimport BalloonPanelView, { generatePositions } from '../../panel/balloon/balloonpanelview.js';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport Rect from '@ckeditor/ckeditor5-utils/src/dom/rect';\nimport normalizeToolbarConfig from '../normalizetoolbarconfig';\nimport { debounce } from 'lodash-es';\nimport ResizeObserver from '@ckeditor/ckeditor5-utils/src/dom/resizeobserver';\nimport toUnit from '@ckeditor/ckeditor5-utils/src/dom/tounit';\nimport { env, global } from '@ckeditor/ckeditor5-utils';\n\nconst toPx = toUnit( 'px' );\n\n/**\n * The contextual toolbar.\n *\n * It uses the {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon contextual balloon plugin}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class BalloonToolbar extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'BalloonToolbar';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ ContextualBalloon ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * A cached and normalized `config.balloonToolbar` object.\n\t\t *\n\t\t * @type {module:core/editor/editorconfig~EditorConfig#balloonToolbar}\n\t\t * @private\n\t\t */\n\t\tthis._balloonConfig = normalizeToolbarConfig( editor.config.get( 'balloonToolbar' ) );\n\n\t\t/**\n\t\t * The toolbar view displayed in the balloon.\n\t\t *\n\t\t * @type {module:ui/toolbar/toolbarview~ToolbarView}\n\t\t */\n\t\tthis.toolbarView = this._createToolbarView();\n\n\t\t/**\n\t\t * Tracks the focus of the {@link module:core/editor/editorui~EditorUI#getEditableElement editable element}\n\t\t * and the {@link #toolbarView}. When both are blurred then the toolbar should hide.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:utils:focustracker~FocusTracker}\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\t// Wait for the EditorUI#init. EditableElement is not available before.\n\t\teditor.ui.once( 'ready', () => {\n\t\t\tthis.focusTracker.add( editor.ui.getEditableElement() );\n\t\t\tthis.focusTracker.add( this.toolbarView.element );\n\t\t} );\n\n\t\t// Register the toolbar so it becomes available for Alt+F10 and Esc navigation.\n\t\teditor.ui.addToolbar( this.toolbarView, {\n\t\t\tbeforeFocus: () => this.show( true ),\n\t\t\tafterBlur: () => this.hide(),\n\t\t\tisContextual: true\n\t\t} );\n\n\t\t/**\n\t\t * An instance of the resize observer that allows to respond to changes in editable's geometry\n\t\t * so the toolbar can stay within its boundaries (and group toolbar items that do not fit).\n\t\t *\n\t\t * **Note**: Used only when `shouldNotGroupWhenFull` was **not** set in the\n\t\t * {@link module:core/editor/editorconfig~EditorConfig#balloonToolbar configuration}.\n\t\t *\n\t\t * **Note:** Created in {@link #init}.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:utils/dom/resizeobserver~ResizeObserver}\n\t\t */\n\t\tthis._resizeObserver = null;\n\n\t\t/**\n\t\t * The contextual balloon plugin instance.\n\t\t *\n\t\t * @private\n\t\t * @type {module:ui/panel/balloon/contextualballoon~ContextualBalloon}\n\t\t */\n\t\tthis._balloon = editor.plugins.get( ContextualBalloon );\n\n\t\t/**\n\t\t * Fires {@link #event:_selectionChangeDebounced} event using `lodash#debounce`.\n\t\t *\n\t\t * This function is stored as a plugin property to make possible to cancel\n\t\t * trailing debounced invocation on destroy.\n\t\t *\n\t\t * @private\n\t\t * @type {Function}\n\t\t */\n\t\tthis._fireSelectionChangeDebounced = debounce( () => this.fire( '_selectionChangeDebounced' ), 200 );\n\n\t\t// The appearance of the BalloonToolbar method is eventâ€“driven.\n\t\t// It is possible to stop the #show event and this prevent the toolbar from showing up.\n\t\tthis.decorate( 'show' );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst selection = editor.model.document.selection;\n\n\t\t// Show/hide the toolbar on editable focus/blur.\n\t\tthis.listenTo( this.focusTracker, 'change:isFocused', ( evt, name, isFocused ) => {\n\t\t\tconst isToolbarVisible = this._balloon.visibleView === this.toolbarView;\n\n\t\t\tif ( !isFocused && isToolbarVisible ) {\n\t\t\t\tthis.hide();\n\t\t\t} else if ( isFocused ) {\n\t\t\t\tthis.show();\n\t\t\t}\n\t\t} );\n\n\t\t// Hide the toolbar when the selection is changed by a direct change or has changed to collapsed.\n\t\tthis.listenTo( selection, 'change:range', ( evt, data ) => {\n\t\t\tif ( data.directChange || selection.isCollapsed ) {\n\t\t\t\tthis.hide();\n\t\t\t}\n\n\t\t\t// Fire internal `_selectionChangeDebounced` event to use it for showing\n\t\t\t// the toolbar after the selection stops changing.\n\t\t\tthis._fireSelectionChangeDebounced();\n\t\t} );\n\n\t\t// Show the toolbar when the selection stops changing.\n\t\tthis.listenTo( this, '_selectionChangeDebounced', () => {\n\t\t\tif ( this.editor.editing.view.document.isFocused ) {\n\t\t\t\tthis.show();\n\t\t\t}\n\t\t} );\n\n\t\tif ( !this._balloonConfig.shouldNotGroupWhenFull ) {\n\t\t\tthis.listenTo( editor, 'ready', () => {\n\t\t\t\tconst editableElement = editor.ui.view.editable.element;\n\n\t\t\t\t// Set #toolbarView's max-width on the initialization and update it on the editable resize.\n\t\t\t\tthis._resizeObserver = new ResizeObserver( editableElement, () => {\n\t\t\t\t\t// The max-width equals 90% of the editable's width for the best user experience.\n\t\t\t\t\t// The value keeps the balloon very close to the boundaries of the editable and limits the cases\n\t\t\t\t\t// when the balloon juts out from the editable element it belongs to.\n\t\t\t\t\tthis.toolbarView.maxWidth = toPx( new Rect( editableElement ).width * .9 );\n\t\t\t\t} );\n\t\t\t} );\n\t\t}\n\n\t\t// Listen to the toolbar view and whenever it changes its geometry due to some items being\n\t\t// grouped or ungrouped, update the position of the balloon because a shorter/longer toolbar\n\t\t// means the balloon could be pointing at the wrong place. Once updated, the balloon will point\n\t\t// at the right selection in the content again.\n\t\t// https://github.com/ckeditor/ckeditor5/issues/6444\n\t\tthis.listenTo( this.toolbarView, 'groupedItemsUpdate', () => {\n\t\t\tthis._updatePosition();\n\t\t} );\n\t}\n\n\t/**\n\t * Creates toolbar components based on given configuration.\n\t * This needs to be done when all plugins are ready.\n\t *\n\t * @inheritDoc\n\t */\n\tafterInit() {\n\t\tconst factory = this.editor.ui.componentFactory;\n\n\t\tthis.toolbarView.fillFromConfig( this._balloonConfig, factory );\n\t}\n\n\t/**\n\t * Creates the toolbar view instance.\n\t *\n\t * @private\n\t * @returns {module:ui/toolbar/toolbarview~ToolbarView}\n\t */\n\t_createToolbarView() {\n\t\tconst t = this.editor.locale.t;\n\t\tconst shouldGroupWhenFull = !this._balloonConfig.shouldNotGroupWhenFull;\n\t\tconst toolbarView = new ToolbarView( this.editor.locale, {\n\t\t\tshouldGroupWhenFull,\n\t\t\tisFloating: true\n\t\t} );\n\n\t\ttoolbarView.ariaLabel = t( 'Editor contextual toolbar' );\n\t\ttoolbarView.render();\n\n\t\treturn toolbarView;\n\t}\n\n\t/**\n\t * Shows the toolbar and attaches it to the selection.\n\t *\n\t * Fires {@link #event:show} event which can be stopped to prevent the toolbar from showing up.\n\t *\n\t * @param {Boolean} [showForCollapsedSelection=false] When set `true`, the toolbar will show despite collapsed selection in the\n\t * editing view.\n\t */\n\tshow( showForCollapsedSelection = false ) {\n\t\tconst editor = this.editor;\n\t\tconst selection = editor.model.document.selection;\n\t\tconst schema = editor.model.schema;\n\n\t\t// Do not add the toolbar to the balloon stack twice.\n\t\tif ( this._balloon.hasView( this.toolbarView ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Do not show the toolbar when the selection is collapsed.\n\t\tif ( selection.isCollapsed && !showForCollapsedSelection ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Do not show the toolbar when there is more than one range in the selection and they fully contain selectable elements.\n\t\t// See https://github.com/ckeditor/ckeditor5/issues/6443.\n\t\tif ( selectionContainsOnlyMultipleSelectables( selection, schema ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Don not show the toolbar when all components inside are disabled\n\t\t// see https://github.com/ckeditor/ckeditor5-ui/issues/269.\n\t\tif ( Array.from( this.toolbarView.items ).every( item => item.isEnabled !== undefined && !item.isEnabled ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Update the toolbar position when the editor ui should be refreshed.\n\t\tthis.listenTo( this.editor.ui, 'update', () => {\n\t\t\tthis._updatePosition();\n\t\t} );\n\n\t\t// Add the toolbar to the common editor contextual balloon.\n\t\tthis._balloon.add( {\n\t\t\tview: this.toolbarView,\n\t\t\tposition: this._getBalloonPositionData(),\n\t\t\tballoonClassName: 'ck-toolbar-container'\n\t\t} );\n\t}\n\n\t/**\n\t * Hides the toolbar.\n\t */\n\thide() {\n\t\tif ( this._balloon.hasView( this.toolbarView ) ) {\n\t\t\tthis.stopListening( this.editor.ui, 'update' );\n\t\t\tthis._balloon.remove( this.toolbarView );\n\t\t}\n\t}\n\n\t/**\n\t * Returns positioning options for the {@link #_balloon}. They control the way balloon is attached\n\t * to the selection.\n\t *\n\t * @private\n\t * @returns {module:utils/dom/position~Options}\n\t */\n\t_getBalloonPositionData() {\n\t\tconst editor = this.editor;\n\t\tconst view = editor.editing.view;\n\t\tconst viewDocument = view.document;\n\t\tconst viewSelection = viewDocument.selection;\n\n\t\t// Get direction of the selection.\n\t\tconst isBackward = viewDocument.selection.isBackward;\n\n\t\treturn {\n\t\t\t// Because the target for BalloonPanelView is a Rect (not DOMRange), it's geometry will stay fixed\n\t\t\t// as the window scrolls. To let the BalloonPanelView follow such Rect, is must be continuously\n\t\t\t// computed and hence, the target is defined as a function instead of a static value.\n\t\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/195\n\t\t\ttarget: () => {\n\t\t\t\tconst range = isBackward ? viewSelection.getFirstRange() : viewSelection.getLastRange();\n\t\t\t\tconst rangeRects = Rect.getDomRangeRects( view.domConverter.viewRangeToDom( range ) );\n\n\t\t\t\t// Select the proper range rect depending on the direction of the selection.\n\t\t\t\tif ( isBackward ) {\n\t\t\t\t\treturn rangeRects[ 0 ];\n\t\t\t\t} else {\n\t\t\t\t\t// Ditch the zero-width \"orphan\" rect in the next line for the forward selection if there's\n\t\t\t\t\t// another one preceding it. It is not rendered as a selection by the web browser anyway.\n\t\t\t\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/308\n\t\t\t\t\tif ( rangeRects.length > 1 && rangeRects[ rangeRects.length - 1 ].width === 0 ) {\n\t\t\t\t\t\trangeRects.pop();\n\t\t\t\t\t}\n\n\t\t\t\t\treturn rangeRects[ rangeRects.length - 1 ];\n\t\t\t\t}\n\t\t\t},\n\t\t\tpositions: this._getBalloonPositions( isBackward )\n\t\t};\n\t}\n\n\t/**\n\t * Updates the position of the {@link #_balloon} to make up for changes:\n\t *\n\t * * in the geometry of the selection it is attached to (e.g. the selection moved in the viewport or expanded or shrunk),\n\t * * or the geometry of the balloon toolbar itself (e.g. the toolbar has grouped or ungrouped some items and it is shorter or longer).\n\t *\n\t * @private\n\t */\n\t_updatePosition() {\n\t\tthis._balloon.updatePosition( this._getBalloonPositionData() );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tsuper.destroy();\n\n\t\tthis.stopListening();\n\t\tthis._fireSelectionChangeDebounced.cancel();\n\t\tthis.toolbarView.destroy();\n\t\tthis.focusTracker.destroy();\n\n\t\tif ( this._resizeObserver ) {\n\t\t\tthis._resizeObserver.destroy();\n\t\t}\n\t}\n\n\t/**\n\t * This event is fired just before the toolbar shows up. Stopping this event will prevent this.\n\t *\n\t * @event show\n\t */\n\n\t/**\n\t * This is internal plugin event which is fired 200 ms after model selection last change.\n\t * This is to makes easy test debounced action without need to use `setTimeout`.\n\t *\n\t * @protected\n\t * @event _selectionChangeDebounced\n\t */\n\n\t/**\n\t * Returns toolbar positions for the given direction of the selection.\n\t *\n\t * @private\n\t * @param {Boolean} isBackward\n\t * @returns {Array.<module:utils/dom/position~Position>}\n\t */\n\t_getBalloonPositions( isBackward ) {\n\t\tconst isSafariIniOS = env.isSafari && env.isiOS;\n\n\t\t// https://github.com/ckeditor/ckeditor5/issues/7707\n\t\tconst positions = isSafariIniOS ? generatePositions( {\n\t\t\t// 20px when zoomed out. Less then 20px when zoomed in; the \"radius\" of the native selection handle gets\n\t\t\t// smaller as the user zooms in. No less than the default v-offset, though.\n\t\t\theightOffset: Math.max(\n\t\t\t\tBalloonPanelView.arrowHeightOffset,\n\t\t\t\tMath.round( 20 / global.window.visualViewport.scale )\n\t\t\t)\n\t\t} ) : BalloonPanelView.defaultPositions;\n\n\t\treturn isBackward ? [\n\t\t\tpositions.northWestArrowSouth,\n\t\t\tpositions.northWestArrowSouthWest,\n\t\t\tpositions.northWestArrowSouthEast,\n\t\t\tpositions.northWestArrowSouthMiddleEast,\n\t\t\tpositions.northWestArrowSouthMiddleWest,\n\t\t\tpositions.southWestArrowNorth,\n\t\t\tpositions.southWestArrowNorthWest,\n\t\t\tpositions.southWestArrowNorthEast,\n\t\t\tpositions.southWestArrowNorthMiddleWest,\n\t\t\tpositions.southWestArrowNorthMiddleEast\n\t\t] : [\n\t\t\tpositions.southEastArrowNorth,\n\t\t\tpositions.southEastArrowNorthEast,\n\t\t\tpositions.southEastArrowNorthWest,\n\t\t\tpositions.southEastArrowNorthMiddleEast,\n\t\t\tpositions.southEastArrowNorthMiddleWest,\n\t\t\tpositions.northEastArrowSouth,\n\t\t\tpositions.northEastArrowSouthEast,\n\t\t\tpositions.northEastArrowSouthWest,\n\t\t\tpositions.northEastArrowSouthMiddleEast,\n\t\t\tpositions.northEastArrowSouthMiddleWest\n\t\t];\n\t}\n}\n\n// Returns \"true\" when the selection has multiple ranges and each range contains a selectable element\n// and nothing else.\n//\n// @private\n// @param {module:engine/model/selection~Selection} selection\n// @param {module:engine/model/schema~Schema} schema\n// @returns {Boolean}\nfunction selectionContainsOnlyMultipleSelectables( selection, schema ) {\n\t// It doesn't contain multiple objects if there is only one range.\n\tif ( selection.rangeCount === 1 ) {\n\t\treturn false;\n\t}\n\n\treturn [ ...selection.getRanges() ].every( range => {\n\t\tconst element = range.getContainedElement();\n\n\t\treturn element && schema.isSelectable( element );\n\t} );\n}\n\n/**\n * Contextual toolbar configuration. Used by the {@link module:ui/toolbar/balloon/balloontoolbar~BalloonToolbar}\n * feature.\n *\n * ## Configuring toolbar items\n *\n *\t\tconst config = {\n *\t\t\tballoonToolbar: [ 'bold', 'italic', 'undo', 'redo' ]\n *\t\t};\n *\n * You can also use `'|'` to create a separator between groups of items:\n *\n *\t\tconst config = {\n *\t\t\tballoonToolbar: [ 'bold', 'italic', '|', 'undo', 'redo' ]\n *\t\t};\n *\n * Read also about configuring the main editor toolbar in {@link module:core/editor/editorconfig~EditorConfig#toolbar}.\n *\n * ## Configuring items grouping\n *\n * You can prevent automatic items grouping by setting the `shouldNotGroupWhenFull` option:\n *\n *\t\tconst config = {\n *\t\t\tballoonToolbar: {\n *\t\t\t\titems: [ 'bold', 'italic', 'undo', 'redo' ],\n *\t\t\t\tshouldNotGroupWhenFull: true\n *\t\t\t},\n *\t\t};\n *\n * @member {Array.<String>|Object} module:core/editor/editorconfig~EditorConfig#balloonToolbar\n */\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
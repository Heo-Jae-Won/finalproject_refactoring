{"ast":null,"code":"var _jsxFileName = \"C:\\\\data\\\\project\\\\realproject\\\\src\\\\pboard\\\\PboardItem.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Button, ButtonGroup, Card, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { UserContext } from '../context/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PboardItem = _ref => {\n  _s();\n  let {\n    postList\n  } = _ref;\n  const {\n    pcode,\n    plike,\n    ptitle,\n    pcontent,\n    pwriter,\n    pimage,\n    viewcnt\n  } = postList;\n  const {\n    loginUser\n  } = useContext(UserContext);\n  const [loveList, setLoveList] = useState([]);\n  const [toggle, setToggle] = useState(false);\n  const callLikeList = async () => {\n    const result = await axios.get('/api/pboardlike/lovelist');\n    setLoveList(result.data);\n    //callLikeList 함수안 에서 state가 바뀌므로 이 함수 밖으로 나가야 loveList가 반영되어있다.\n    setToggle(result.data.lovecondition);\n  };\n\n  //토글된 상태는 해당 로그인유저별로 따로따로 다 보여야함.\n  //즉 unickname 별로 따로 토글상태인 lovecondition을 받아와야 한다는 뜻. \n  //어차피 pcode는 map으로 반복시켜놔서 알아서 받게되어있음.\n\n  const onToggleLike = async (pwriter, pcode) => {\n    const formData = new FormData();\n    formData.append('pcode', pcode);\n    formData.append('unickname', loginUser.unickname /* 새로고침에 취약한지 보기 */);\n    if (toggle === false) {\n      await axios.post(`/api/pboardlike/love`, formData);\n    } else {\n      await axios.post(`/api/pboardlike/dislove`, formData);\n    }\n    setToggle(!toggle);\n  };\n  useEffect(() => {\n    callLikeList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Col, {\n    style: {\n      marginTop: 60\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      bg: \"Light\",\n      style: {\n        width: '30rem',\n        height: 700,\n        padding: 20,\n        margin: '15px 0px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          style: {\n            fontSize: 20,\n            textAlign: 'left',\n            marginTop: 22\n          },\n          children: [\"\\uC791\\uC131\\uC790: \", pwriter]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Card.Img, {\n          src: pimage,\n          height: \"300\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n          style: {\n            textAlign: 'left',\n            marginTop: 22\n          },\n          children: [\"\\uC81C\\uBAA9: \", ptitle]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          style: {\n            textAlign: 'left',\n            marginTop: 22\n          },\n          children: [\"\\uB0B4\\uC6A9: \", pcontent]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        children: [sessionStorage.getItem('uid') && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => onToggleLike(loginUser.unickname, pcode),\n          variant: \"primary\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src:\n            // include나 find로 써볼 수 있을듯. 이걸 read로 하면 include도 해보자\n            toggle ? \"../image/heart.png\" : \"../image/emptyheart.png\" /* \"../image/emptyheart.png\" */,\n            width: 30\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), plike]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/pboard/read/${pcode}`,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              marginLeft: 300\n            },\n            variant: \"secondary\",\n            children: \"\\uC790\\uC138\\uD788\\uBCF4\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(PboardItem, \"nJaT78shew31py8ffduTy7DIHPY=\");\n_c = PboardItem;\nexport default PboardItem;\nvar _c;\n$RefreshReg$(_c, \"PboardItem\");","map":{"version":3,"names":["axios","React","useContext","useEffect","useState","Button","ButtonGroup","Card","Col","Link","UserContext","PboardItem","postList","pcode","plike","ptitle","pcontent","pwriter","pimage","viewcnt","loginUser","loveList","setLoveList","toggle","setToggle","callLikeList","result","get","data","lovecondition","onToggleLike","formData","FormData","append","unickname","post","marginTop","width","height","padding","margin","fontSize","textAlign","sessionStorage","getItem","marginLeft"],"sources":["C:/data/project/realproject/src/pboard/PboardItem.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { Button, ButtonGroup, Card, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserContext } from '../context/UserContext';\r\n\r\nconst PboardItem = ({ postList }) => {\r\n  const { pcode, plike, ptitle, pcontent, pwriter, pimage, viewcnt } = postList;\r\n  const { loginUser } = useContext(UserContext);\r\n  const [loveList, setLoveList] = useState([]);\r\n  const [toggle,setToggle]=useState(false);\r\n\r\n  const callLikeList = async () => {\r\n    const result = await axios.get('/api/pboardlike/lovelist')\r\n    setLoveList(result.data);\r\n    //callLikeList 함수안 에서 state가 바뀌므로 이 함수 밖으로 나가야 loveList가 반영되어있다.\r\n    setToggle(result.data.lovecondition);\r\n  }\r\n\r\n//토글된 상태는 해당 로그인유저별로 따로따로 다 보여야함.\r\n//즉 unickname 별로 따로 토글상태인 lovecondition을 받아와야 한다는 뜻. \r\n//어차피 pcode는 map으로 반복시켜놔서 알아서 받게되어있음.\r\n\r\n  const onToggleLike = async (pwriter, pcode) => {\r\n    const formData = new FormData();\r\n    formData.append('pcode', pcode);\r\n    formData.append('unickname', loginUser.unickname /* 새로고침에 취약한지 보기 */);\r\n    if(toggle===false){\r\n      await axios.post(`/api/pboardlike/love`, formData);\r\n    }else{\r\n      await axios.post(`/api/pboardlike/dislove`, formData);\r\n    }\r\n    setToggle(!toggle);\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    callLikeList();\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <Col style={{ marginTop: 60 }}>\r\n      <Card bg='Light' style={{ width: '30rem', height: 700, padding: 20, margin: '15px 0px' }}>\r\n        <Card.Body>\r\n        <Card.Header style={{fontSize:20, textAlign:'left', marginTop:22}}>작성자: {pwriter}</Card.Header>\r\n          <Card.Img src={pimage} height='300' />\r\n          <Card.Title style={{textAlign:'left', marginTop:22}}>제목: {ptitle}</Card.Title>\r\n          <hr/>\r\n          <Card.Text style={{textAlign:'left', marginTop:22}}>내용: {pcontent}</Card.Text>\r\n        </Card.Body>\r\n        <ButtonGroup>\r\n          {sessionStorage.getItem('uid') &&\r\n            <Button onClick={() => onToggleLike(loginUser.unickname, pcode)} variant=\"primary\">\r\n              <img src={\r\n                // include나 find로 써볼 수 있을듯. 이걸 read로 하면 include도 해보자\r\n                toggle ?  \"../image/heart.png\" : \"../image/emptyheart.png\"/* \"../image/emptyheart.png\" */} width={30} />\r\n              {plike}\r\n            </Button>\r\n          }\r\n          <Link to={`/pboard/read/${pcode}`}><Button style={{ marginLeft: 300 }} variant='secondary'>자세히보기</Button></Link>\r\n        </ButtonGroup>\r\n      </Card>\r\n\r\n    </Col>\r\n\r\n  )\r\n}\r\n\r\nexport default PboardItem"],"mappings":"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"},"metadata":{},"sourceType":"module"}
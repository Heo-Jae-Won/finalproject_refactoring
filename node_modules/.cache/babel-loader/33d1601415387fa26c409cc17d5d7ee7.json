{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/colorgrid/utils\n */\n\n/**\n * Returns color configuration options as defined in `editor.config.(fontColor|fontBackgroundColor).colors` or\n * `editor.config.table.(tableProperties|tableCellProperties).(background|border).colors\n * but processed to account for editor localization in the correct language.\n *\n * Note: The reason behind this method is that there is no way to use {@link module:utils/locale~Locale#t}\n * when the user configuration is defined because the editor does not exist yet.\n *\n * @param {module:utils/locale~Locale} locale The {@link module:core/editor/editor~Editor#locale} instance.\n * @param {Array.<module:ui/colorgrid/colorgrid~ColorDefinition>} options\n * @returns {Array.<module:ui/colorgrid/colorgrid~ColorDefinition>}.\n */\nexport function getLocalizedColorOptions(locale, options) {\n  const t = locale.t;\n  const localizedColorNames = {\n    Black: t('Black'),\n    'Dim grey': t('Dim grey'),\n    Grey: t('Grey'),\n    'Light grey': t('Light grey'),\n    White: t('White'),\n    Red: t('Red'),\n    Orange: t('Orange'),\n    Yellow: t('Yellow'),\n    'Light green': t('Light green'),\n    Green: t('Green'),\n    Aquamarine: t('Aquamarine'),\n    Turquoise: t('Turquoise'),\n    'Light blue': t('Light blue'),\n    Blue: t('Blue'),\n    Purple: t('Purple')\n  };\n  return options.map(colorOption => {\n    const label = localizedColorNames[colorOption.label];\n    if (label && label != colorOption.label) {\n      colorOption.label = label;\n    }\n    return colorOption;\n  });\n}\n\n/**\n * Creates a unified color definition object from color configuration options.\n * The object contains the information necessary to both render the UI and initialize the conversion.\n *\n * @param {module:ui/colorgrid/colorgrid~ColorDefinition} options\n * @returns {Array.<module:ui/colorgrid/colorgrid~ColorDefinition>}\n */\nexport function normalizeColorOptions(options) {\n  return options.map(normalizeSingleColorDefinition).filter(option => !!option);\n}\n\n// Creates a normalized color definition from the user-defined configuration.\n// The \"normalization\" means it will create full\n// {@link module:ui/colorgrid/colorgrid~ColorDefinition `ColorDefinition-like`}\n// object for string values, and add a `view` property, for each definition.\n//\n// @param {String|module:ui/colorgrid/colorgrid~ColorDefinition}\n// @returns {module:ui/colorgrid/colorgrid~ColorDefinition}\nexport function normalizeSingleColorDefinition(color) {\n  if (typeof color === 'string') {\n    return {\n      model: color,\n      label: color,\n      hasBorder: false,\n      view: {\n        name: 'span',\n        styles: {\n          color\n        }\n      }\n    };\n  } else {\n    return {\n      model: color.color,\n      label: color.label || color.color,\n      hasBorder: color.hasBorder === undefined ? false : color.hasBorder,\n      view: {\n        name: 'span',\n        styles: {\n          color: `${color.color}`\n        }\n      }\n    };\n  }\n}","map":{"version":3,"names":["getLocalizedColorOptions","locale","options","t","localizedColorNames","Black","Grey","White","Red","Orange","Yellow","Green","Aquamarine","Turquoise","Blue","Purple","map","colorOption","label","normalizeColorOptions","normalizeSingleColorDefinition","filter","option","color","model","hasBorder","view","name","styles","undefined"],"sources":["C:/data/project/realproject/node_modules/@ckeditor/ckeditor5-ui/src/colorgrid/utils.js"],"sourcesContent":["/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/colorgrid/utils\n */\n\n/**\n * Returns color configuration options as defined in `editor.config.(fontColor|fontBackgroundColor).colors` or\n * `editor.config.table.(tableProperties|tableCellProperties).(background|border).colors\n * but processed to account for editor localization in the correct language.\n *\n * Note: The reason behind this method is that there is no way to use {@link module:utils/locale~Locale#t}\n * when the user configuration is defined because the editor does not exist yet.\n *\n * @param {module:utils/locale~Locale} locale The {@link module:core/editor/editor~Editor#locale} instance.\n * @param {Array.<module:ui/colorgrid/colorgrid~ColorDefinition>} options\n * @returns {Array.<module:ui/colorgrid/colorgrid~ColorDefinition>}.\n */\nexport function getLocalizedColorOptions( locale, options ) {\n\tconst t = locale.t;\n\tconst localizedColorNames = {\n\t\tBlack: t( 'Black' ),\n\t\t'Dim grey': t( 'Dim grey' ),\n\t\tGrey: t( 'Grey' ),\n\t\t'Light grey': t( 'Light grey' ),\n\t\tWhite: t( 'White' ),\n\t\tRed: t( 'Red' ),\n\t\tOrange: t( 'Orange' ),\n\t\tYellow: t( 'Yellow' ),\n\t\t'Light green': t( 'Light green' ),\n\t\tGreen: t( 'Green' ),\n\t\tAquamarine: t( 'Aquamarine' ),\n\t\tTurquoise: t( 'Turquoise' ),\n\t\t'Light blue': t( 'Light blue' ),\n\t\tBlue: t( 'Blue' ),\n\t\tPurple: t( 'Purple' )\n\t};\n\n\treturn options.map( colorOption => {\n\t\tconst label = localizedColorNames[ colorOption.label ];\n\n\t\tif ( label && label != colorOption.label ) {\n\t\t\tcolorOption.label = label;\n\t\t}\n\n\t\treturn colorOption;\n\t} );\n}\n\n/**\n * Creates a unified color definition object from color configuration options.\n * The object contains the information necessary to both render the UI and initialize the conversion.\n *\n * @param {module:ui/colorgrid/colorgrid~ColorDefinition} options\n * @returns {Array.<module:ui/colorgrid/colorgrid~ColorDefinition>}\n */\nexport function normalizeColorOptions( options ) {\n\treturn options\n\t\t.map( normalizeSingleColorDefinition )\n\t\t.filter( option => !!option );\n}\n\n// Creates a normalized color definition from the user-defined configuration.\n// The \"normalization\" means it will create full\n// {@link module:ui/colorgrid/colorgrid~ColorDefinition `ColorDefinition-like`}\n// object for string values, and add a `view` property, for each definition.\n//\n// @param {String|module:ui/colorgrid/colorgrid~ColorDefinition}\n// @returns {module:ui/colorgrid/colorgrid~ColorDefinition}\nexport function normalizeSingleColorDefinition( color ) {\n\tif ( typeof color === 'string' ) {\n\t\treturn {\n\t\t\tmodel: color,\n\t\t\tlabel: color,\n\t\t\thasBorder: false,\n\t\t\tview: {\n\t\t\t\tname: 'span',\n\t\t\t\tstyles: {\n\t\t\t\t\tcolor\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} else {\n\t\treturn {\n\t\t\tmodel: color.color,\n\t\t\tlabel: color.label || color.color,\n\t\t\thasBorder: color.hasBorder === undefined ? false : color.hasBorder,\n\t\t\tview: {\n\t\t\t\tname: 'span',\n\t\t\t\tstyles: {\n\t\t\t\t\tcolor: `${ color.color }`\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,wBAAwB,CAAEC,MAAM,EAAEC,OAAO,EAAG;EAC3D,MAAMC,CAAC,GAAGF,MAAM,CAACE,CAAC;EAClB,MAAMC,mBAAmB,GAAG;IAC3BC,KAAK,EAAEF,CAAC,CAAE,OAAO,CAAE;IACnB,UAAU,EAAEA,CAAC,CAAE,UAAU,CAAE;IAC3BG,IAAI,EAAEH,CAAC,CAAE,MAAM,CAAE;IACjB,YAAY,EAAEA,CAAC,CAAE,YAAY,CAAE;IAC/BI,KAAK,EAAEJ,CAAC,CAAE,OAAO,CAAE;IACnBK,GAAG,EAAEL,CAAC,CAAE,KAAK,CAAE;IACfM,MAAM,EAAEN,CAAC,CAAE,QAAQ,CAAE;IACrBO,MAAM,EAAEP,CAAC,CAAE,QAAQ,CAAE;IACrB,aAAa,EAAEA,CAAC,CAAE,aAAa,CAAE;IACjCQ,KAAK,EAAER,CAAC,CAAE,OAAO,CAAE;IACnBS,UAAU,EAAET,CAAC,CAAE,YAAY,CAAE;IAC7BU,SAAS,EAAEV,CAAC,CAAE,WAAW,CAAE;IAC3B,YAAY,EAAEA,CAAC,CAAE,YAAY,CAAE;IAC/BW,IAAI,EAAEX,CAAC,CAAE,MAAM,CAAE;IACjBY,MAAM,EAAEZ,CAAC,CAAE,QAAQ;EACpB,CAAC;EAED,OAAOD,OAAO,CAACc,GAAG,CAAEC,WAAW,IAAI;IAClC,MAAMC,KAAK,GAAGd,mBAAmB,CAAEa,WAAW,CAACC,KAAK,CAAE;IAEtD,IAAKA,KAAK,IAAIA,KAAK,IAAID,WAAW,CAACC,KAAK,EAAG;MAC1CD,WAAW,CAACC,KAAK,GAAGA,KAAK;IAC1B;IAEA,OAAOD,WAAW;EACnB,CAAC,CAAE;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,qBAAqB,CAAEjB,OAAO,EAAG;EAChD,OAAOA,OAAO,CACZc,GAAG,CAAEI,8BAA8B,CAAE,CACrCC,MAAM,CAAEC,MAAM,IAAI,CAAC,CAACA,MAAM,CAAE;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASF,8BAA8B,CAAEG,KAAK,EAAG;EACvD,IAAK,OAAOA,KAAK,KAAK,QAAQ,EAAG;IAChC,OAAO;MACNC,KAAK,EAAED,KAAK;MACZL,KAAK,EAAEK,KAAK;MACZE,SAAS,EAAE,KAAK;MAChBC,IAAI,EAAE;QACLC,IAAI,EAAE,MAAM;QACZC,MAAM,EAAE;UACPL;QACD;MACD;IACD,CAAC;EACF,CAAC,MAAM;IACN,OAAO;MACNC,KAAK,EAAED,KAAK,CAACA,KAAK;MAClBL,KAAK,EAAEK,KAAK,CAACL,KAAK,IAAIK,KAAK,CAACA,KAAK;MACjCE,SAAS,EAAEF,KAAK,CAACE,SAAS,KAAKI,SAAS,GAAG,KAAK,GAAGN,KAAK,CAACE,SAAS;MAClEC,IAAI,EAAE;QACLC,IAAI,EAAE,MAAM;QACZC,MAAM,EAAE;UACPL,KAAK,EAAG,GAAGA,KAAK,CAACA,KAAO;QACzB;MACD;IACD,CAAC;EACF;AACD"},"metadata":{},"sourceType":"module"}
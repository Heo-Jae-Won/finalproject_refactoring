{"ast":null,"code":"var _jsxFileName = \"C:\\\\data\\\\project\\\\chatting_progress\\\\src\\\\my\\\\MyChatList.jsx\",\n  _s = $RefreshSig$();\nimport { collection, getFirestore, limit, onSnapshot, orderBy, query } from 'firebase/firestore';\nimport React, { useEffect, useState } from 'react';\nimport { app } from '../fireStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyChatList = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const db = getFirestore(app);\n  const getMessages = () => {\n    const q = query(collection(db, `${sessionStorage.getItem('uid')}`), orderBy('date', 'asc'), limit(100));\n\n    //field의 data만 가져올 수 있음.\n    onSnapshot(q, snapshot => {\n      let rows = [];\n      snapshot.forEach(doc => {\n        rows.push({\n          id: doc.data()\n        });\n      });\n      setMessages(rows);\n    });\n  };\n  useEffect(() => {\n    getMessages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: 100\n    },\n    children: messages\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(MyChatList, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n_c = MyChatList;\nexport default MyChatList;\nvar _c;\n$RefreshReg$(_c, \"MyChatList\");","map":{"version":3,"names":["collection","getFirestore","limit","onSnapshot","orderBy","query","React","useEffect","useState","app","MyChatList","messages","setMessages","db","getMessages","q","sessionStorage","getItem","snapshot","rows","forEach","doc","push","id","data","marginTop"],"sources":["C:/data/project/chatting_progress/src/my/MyChatList.jsx"],"sourcesContent":["import { collection, getFirestore, limit, onSnapshot, orderBy, query } from 'firebase/firestore';\r\nimport React, { useEffect,useState } from 'react';\r\nimport { app } from '../fireStore';\r\n\r\nconst MyChatList = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const db = getFirestore(app);\r\n    \r\n    const getMessages = () => {\r\n        const q = query(\r\n            collection(db, `${sessionStorage.getItem('uid')}`),\r\n            orderBy('date', 'asc'),\r\n            limit(100)\r\n        );\r\n\r\n            //field의 data만 가져올 수 있음.\r\n        onSnapshot(q, (snapshot) => {\r\n            let rows = [];\r\n            snapshot.forEach((doc) => {\r\n                rows.push({\r\n                    id: doc.data()\r\n                });\r\n            });\r\n            setMessages(rows);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getMessages();\r\n    }, [])\r\n\r\n    return (\r\n        <div style={{ marginTop: 100 }}>\r\n            {messages}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyChatList"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,YAAY,EAAEC,KAAK,EAAEC,UAAU,EAAEC,OAAO,EAAEC,KAAK,QAAQ,oBAAoB;AAChG,OAAOC,KAAK,IAAIC,SAAS,EAACC,QAAQ,QAAQ,OAAO;AACjD,SAASC,GAAG,QAAQ,cAAc;AAAC;AAEnC,MAAMC,UAAU,GAAG,MAAM;EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMK,EAAE,GAAGZ,YAAY,CAACQ,GAAG,CAAC;EAE5B,MAAMK,WAAW,GAAG,MAAM;IACtB,MAAMC,CAAC,GAAGV,KAAK,CACXL,UAAU,CAACa,EAAE,EAAG,GAAEG,cAAc,CAACC,OAAO,CAAC,KAAK,CAAE,EAAC,CAAC,EAClDb,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,EACtBF,KAAK,CAAC,GAAG,CAAC,CACb;;IAEG;IACJC,UAAU,CAACY,CAAC,EAAGG,QAAQ,IAAK;MACxB,IAAIC,IAAI,GAAG,EAAE;MACbD,QAAQ,CAACE,OAAO,CAAEC,GAAG,IAAK;QACtBF,IAAI,CAACG,IAAI,CAAC;UACNC,EAAE,EAAEF,GAAG,CAACG,IAAI;QAChB,CAAC,CAAC;MACN,CAAC,CAAC;MACFZ,WAAW,CAACO,IAAI,CAAC;IACrB,CAAC,CAAC;EACN,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACZO,WAAW,EAAE;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI;IAAK,KAAK,EAAE;MAAEW,SAAS,EAAE;IAAI,CAAE;IAAA,UAC1Bd;EAAQ;IAAA;IAAA;IAAA;EAAA,QACP;AAEd,CAAC;AAAA,GAhCKD,UAAU;AAAA,KAAVA,UAAU;AAkChB,eAAeA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module"}
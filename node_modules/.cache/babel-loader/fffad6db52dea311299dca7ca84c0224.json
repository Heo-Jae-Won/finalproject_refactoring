{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module enter/enter\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport EnterCommand from './entercommand';\nimport EnterObserver from './enterobserver';\n\n/**\n * This plugin handles the <kbd>Enter</kbd> key (hard line break) in the editor.\n *\n * See also the {@link module:enter/shiftenter~ShiftEnter} plugin.\n *\n * For more information about this feature see the {@glink api/enter package page}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Enter extends Plugin {\n  /**\n   * @inheritDoc\n   */\n  static get pluginName() {\n    return 'Enter';\n  }\n  init() {\n    const editor = this.editor;\n    const view = editor.editing.view;\n    const viewDocument = view.document;\n    view.addObserver(EnterObserver);\n    editor.commands.add('enter', new EnterCommand(editor));\n    this.listenTo(viewDocument, 'enter', (evt, data) => {\n      data.preventDefault();\n\n      // The soft enter key is handled by the ShiftEnter plugin.\n      if (data.isSoft) {\n        return;\n      }\n      editor.execute('enter');\n      view.scrollToTheSelection();\n    }, {\n      priority: 'low'\n    });\n  }\n}","map":{"version":3,"names":["Plugin","EnterCommand","EnterObserver","Enter","pluginName","init","editor","view","editing","viewDocument","document","addObserver","commands","add","listenTo","evt","data","preventDefault","isSoft","execute","scrollToTheSelection","priority"],"sources":["C:/data/project/realproject/node_modules/@ckeditor/ckeditor5-enter/src/enter.js"],"sourcesContent":["/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module enter/enter\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport EnterCommand from './entercommand';\nimport EnterObserver from './enterobserver';\n\n/**\n * This plugin handles the <kbd>Enter</kbd> key (hard line break) in the editor.\n *\n * See also the {@link module:enter/shiftenter~ShiftEnter} plugin.\n *\n * For more information about this feature see the {@glink api/enter package page}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Enter extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Enter';\n\t}\n\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst view = editor.editing.view;\n\t\tconst viewDocument = view.document;\n\n\t\tview.addObserver( EnterObserver );\n\n\t\teditor.commands.add( 'enter', new EnterCommand( editor ) );\n\n\t\tthis.listenTo( viewDocument, 'enter', ( evt, data ) => {\n\t\t\tdata.preventDefault();\n\n\t\t\t// The soft enter key is handled by the ShiftEnter plugin.\n\t\t\tif ( data.isSoft ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\teditor.execute( 'enter' );\n\n\t\t\tview.scrollToTheSelection();\n\t\t}, { priority: 'low' } );\n\t}\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,OAAOA,MAAM,MAAM,qCAAqC;AACxD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,aAAa,MAAM,iBAAiB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAMC,KAAK,SAASH,MAAM,CAAC;EACzC;AACD;AACA;EACC,WAAWI,UAAU,GAAG;IACvB,OAAO,OAAO;EACf;EAEAC,IAAI,GAAG;IACN,MAAMC,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B,MAAMC,IAAI,GAAGD,MAAM,CAACE,OAAO,CAACD,IAAI;IAChC,MAAME,YAAY,GAAGF,IAAI,CAACG,QAAQ;IAElCH,IAAI,CAACI,WAAW,CAAET,aAAa,CAAE;IAEjCI,MAAM,CAACM,QAAQ,CAACC,GAAG,CAAE,OAAO,EAAE,IAAIZ,YAAY,CAAEK,MAAM,CAAE,CAAE;IAE1D,IAAI,CAACQ,QAAQ,CAAEL,YAAY,EAAE,OAAO,EAAE,CAAEM,GAAG,EAAEC,IAAI,KAAM;MACtDA,IAAI,CAACC,cAAc,EAAE;;MAErB;MACA,IAAKD,IAAI,CAACE,MAAM,EAAG;QAClB;MACD;MAEAZ,MAAM,CAACa,OAAO,CAAE,OAAO,CAAE;MAEzBZ,IAAI,CAACa,oBAAoB,EAAE;IAC5B,CAAC,EAAE;MAAEC,QAAQ,EAAE;IAAM,CAAC,CAAE;EACzB;AACD"},"metadata":{},"sourceType":"module"}
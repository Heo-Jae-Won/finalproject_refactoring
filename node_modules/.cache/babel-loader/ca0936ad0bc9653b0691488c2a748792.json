{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/dom/getborderwidths\n */\n/**\n * Returns an object containing CSS border widths of a specified HTML element.\n *\n * @param {HTMLElement} element An element which has CSS borders.\n * @returns {module:utils/dom/getborderwidths~BorderWidths} An object containing `top`, `left`, `right` and `bottom` properties\n * with numerical values of the `border-[top,left,right,bottom]-width` CSS styles.\n */\nexport default function getBorderWidths(element) {\n  // Call getComputedStyle on the window the element document belongs to.\n  const style = element.ownerDocument.defaultView.getComputedStyle(element);\n  return {\n    top: parseInt(style.borderTopWidth, 10),\n    right: parseInt(style.borderRightWidth, 10),\n    bottom: parseInt(style.borderBottomWidth, 10),\n    left: parseInt(style.borderLeftWidth, 10)\n  };\n}","map":{"version":3,"names":["getBorderWidths","element","style","ownerDocument","defaultView","getComputedStyle","top","parseInt","borderTopWidth","right","borderRightWidth","bottom","borderBottomWidth","left","borderLeftWidth"],"sources":["C:/data/project/realproject/node_modules/@ckeditor/ckeditor5-utils/src/dom/getborderwidths.js"],"sourcesContent":["/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/dom/getborderwidths\n */\n/**\n * Returns an object containing CSS border widths of a specified HTML element.\n *\n * @param {HTMLElement} element An element which has CSS borders.\n * @returns {module:utils/dom/getborderwidths~BorderWidths} An object containing `top`, `left`, `right` and `bottom` properties\n * with numerical values of the `border-[top,left,right,bottom]-width` CSS styles.\n */\nexport default function getBorderWidths(element) {\n    // Call getComputedStyle on the window the element document belongs to.\n    const style = element.ownerDocument.defaultView.getComputedStyle(element);\n    return {\n        top: parseInt(style.borderTopWidth, 10),\n        right: parseInt(style.borderRightWidth, 10),\n        bottom: parseInt(style.borderBottomWidth, 10),\n        left: parseInt(style.borderLeftWidth, 10)\n    };\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,eAAe,CAACC,OAAO,EAAE;EAC7C;EACA,MAAMC,KAAK,GAAGD,OAAO,CAACE,aAAa,CAACC,WAAW,CAACC,gBAAgB,CAACJ,OAAO,CAAC;EACzE,OAAO;IACHK,GAAG,EAAEC,QAAQ,CAACL,KAAK,CAACM,cAAc,EAAE,EAAE,CAAC;IACvCC,KAAK,EAAEF,QAAQ,CAACL,KAAK,CAACQ,gBAAgB,EAAE,EAAE,CAAC;IAC3CC,MAAM,EAAEJ,QAAQ,CAACL,KAAK,CAACU,iBAAiB,EAAE,EAAE,CAAC;IAC7CC,IAAI,EAAEN,QAAQ,CAACL,KAAK,CAACY,eAAe,EAAE,EAAE;EAC5C,CAAC;AACL"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/inputnumber/inputnumberview\n */\n\nimport InputView from '../input/inputview';\n\n/**\n * The number input view class.\n *\n * @extends module:ui/input/inputview~InputView\n */\nexport default class InputNumberView extends InputView {\n  /**\n   * Creates an instance of the input number view.\n   *\n   * @param {module:utils/locale~Locale} locale The {@link module:core/editor/editor~Editor#locale} instance.\n   * @param {Object} [options] The options of the input.\n   * @param {Number} [options.min] The value of the `min` DOM attribute (the lowest accepted value).\n   * @param {Number} [options.max] The value of the `max` DOM attribute (the highest accepted value).\n   * @param {Number} [options.step] The value of the `step` DOM attribute.\n   */\n  constructor(locale) {\n    let {\n      min,\n      max,\n      step\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super(locale);\n    const bind = this.bindTemplate;\n\n    /**\n     * The value of the `min` DOM attribute (the lowest accepted value) set on the {@link #element}.\n     *\n     * @observable\n     * @default undefined\n     * @member {Number} #min\n     */\n    this.set('min', min);\n\n    /**\n     * The value of the `max` DOM attribute (the highest accepted value) set on the {@link #element}.\n     *\n     * @observable\n     * @default undefined\n     * @member {Number} #max\n     */\n    this.set('max', max);\n\n    /**\n     * The value of the `step` DOM attribute set on the {@link #element}.\n     *\n     * @observable\n     * @default undefined\n     * @member {Number} #step\n     */\n    this.set('step', step);\n    this.extendTemplate({\n      attributes: {\n        type: 'number',\n        class: ['ck-input-number'],\n        min: bind.to('min'),\n        max: bind.to('max'),\n        step: bind.to('step')\n      }\n    });\n  }\n}","map":{"version":3,"names":["InputView","InputNumberView","constructor","locale","min","max","step","bind","bindTemplate","set","extendTemplate","attributes","type","class","to"],"sources":["C:/data/project/realproject/node_modules/@ckeditor/ckeditor5-ui/src/inputnumber/inputnumberview.js"],"sourcesContent":["/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/inputnumber/inputnumberview\n */\n\nimport InputView from '../input/inputview';\n\n/**\n * The number input view class.\n *\n * @extends module:ui/input/inputview~InputView\n */\nexport default class InputNumberView extends InputView {\n\t/**\n\t * Creates an instance of the input number view.\n\t *\n\t * @param {module:utils/locale~Locale} locale The {@link module:core/editor/editor~Editor#locale} instance.\n\t * @param {Object} [options] The options of the input.\n\t * @param {Number} [options.min] The value of the `min` DOM attribute (the lowest accepted value).\n\t * @param {Number} [options.max] The value of the `max` DOM attribute (the highest accepted value).\n\t * @param {Number} [options.step] The value of the `step` DOM attribute.\n\t */\n\tconstructor( locale, { min, max, step } = {} ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t/**\n\t\t * The value of the `min` DOM attribute (the lowest accepted value) set on the {@link #element}.\n\t\t *\n\t\t * @observable\n\t\t * @default undefined\n\t\t * @member {Number} #min\n\t\t */\n\t\tthis.set( 'min', min );\n\n\t\t/**\n\t\t * The value of the `max` DOM attribute (the highest accepted value) set on the {@link #element}.\n\t\t *\n\t\t * @observable\n\t\t * @default undefined\n\t\t * @member {Number} #max\n\t\t */\n\t\tthis.set( 'max', max );\n\n\t\t/**\n\t\t * The value of the `step` DOM attribute set on the {@link #element}.\n\t\t *\n\t\t * @observable\n\t\t * @default undefined\n\t\t * @member {Number} #step\n\t\t */\n\t\tthis.set( 'step', step );\n\n\t\tthis.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\ttype: 'number',\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-input-number'\n\t\t\t\t],\n\t\t\t\tmin: bind.to( 'min' ),\n\t\t\t\tmax: bind.to( 'max' ),\n\t\t\t\tstep: bind.to( 'step' )\n\t\t\t}\n\t\t} );\n\t}\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,OAAOA,SAAS,MAAM,oBAAoB;;AAE1C;AACA;AACA;AACA;AACA;AACA,eAAe,MAAMC,eAAe,SAASD,SAAS,CAAC;EACtD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCE,WAAW,CAAEC,MAAM,EAA4B;IAAA,IAA1B;MAAEC,GAAG;MAAEC,GAAG;MAAEC;IAAK,CAAC,uEAAG,CAAC,CAAC;IAC3C,KAAK,CAAEH,MAAM,CAAE;IAEf,MAAMI,IAAI,GAAG,IAAI,CAACC,YAAY;;IAE9B;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,GAAG,CAAE,KAAK,EAAEL,GAAG,CAAE;;IAEtB;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACK,GAAG,CAAE,KAAK,EAAEJ,GAAG,CAAE;;IAEtB;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACI,GAAG,CAAE,MAAM,EAAEH,IAAI,CAAE;IAExB,IAAI,CAACI,cAAc,CAAE;MACpBC,UAAU,EAAE;QACXC,IAAI,EAAE,QAAQ;QACdC,KAAK,EAAE,CACN,iBAAiB,CACjB;QACDT,GAAG,EAAEG,IAAI,CAACO,EAAE,CAAE,KAAK,CAAE;QACrBT,GAAG,EAAEE,IAAI,CAACO,EAAE,CAAE,KAAK,CAAE;QACrBR,IAAI,EAAEC,IAAI,CAACO,EAAE,CAAE,MAAM;MACtB;IACD,CAAC,CAAE;EACJ;AACD"},"metadata":{},"sourceType":"module"}
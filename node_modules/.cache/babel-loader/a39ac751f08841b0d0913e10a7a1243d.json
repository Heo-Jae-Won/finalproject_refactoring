{"ast":null,"code":"var _jsxFileName = \"C:\\\\data\\\\project\\\\realproject\\\\src\\\\my\\\\MyPay.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect } from 'react';\nimport { useContext } from 'react';\nimport { UserContext } from '../context/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MyPay = () => {\n  _s();\n  const {\n    loginUser\n  } = useContext(UserContext);\n\n  //pname하고 pprice,pcode를 받아와야 함. ㅡㅡ>pcode만 받기.\n  const onClickPayment = () => {\n    const {\n      IMP\n    } = window;\n    IMP.init('imp37385705'); // 결제 데이터 정의\n    const data = {\n      pg: 'html5_inicis',\n      // PG사 (필수항목)\n      pay_method: 'card',\n      // 결제수단 (필수항목)\n      merchant_uid: `pay_${new Date().getTime()}`,\n      // 주문번호 (필수항목)\n      name: '결제 테스트',\n      // 주문명 (필수항목)\n      amount: '10',\n      // 금액이고 반드시 숫자로 써야함. (필수항목)\n      custom_data: {\n        name: '부가정보',\n        desc: '세부 부가정보'\n      },\n      buyer_name: loginUser.uname,\n      // 구매자 이름\n      buyer_tel: loginUser.utel,\n      // 구매자 전화번호 (필수항목)\n      buyer_email: loginUser.uemail,\n      // 구매자 이메일\n      buyer_addr: loginUser.uaddress\n    };\n    IMP.request_pay(data, callback);\n  };\n  const callback = async response => {\n    const {\n      success,\n      error_msg,\n      imp_uid,\n      merchant_uid,\n      buyer_email,\n      buyer_addr,\n      pay_method,\n      paid_amount,\n      status\n    } = response;\n    try {\n      const result = await axios.post(`/pay/complete/${imp_uid}`);\n\n      //위변조 검증\n      if (result.data.response.amount === paid_amount) {\n        console.log('검증 완료');\n      } else {\n        console.log('검증 실패');\n        return;\n      }\n    } catch (e) {\n      if (e) console.log(e);\n      return;\n    }\n    if (success) {\n      const formData = new FormData();\n      formData.append(\"payprice\", paid_amount);\n      formData.append(\"uid\", loginUser.uid);\n      formData.append(\"paytype\", pay_method);\n      formData.append(\"payaddress\", buyer_addr);\n      formData.append(\"payemail\", buyer_email);\n      formData.append(\"paycode\", merchant_uid);\n\n      //DB insert\n      try {\n        await axios.post('/pay/insert', formData);\n        //이동하는 페이지는 review작성페이지. review작성페이지에 가져갈 값은 paycode, uid\n      } catch (e) {\n        if (e) console.log(e);\n        return;\n      }\n      alert('결제 성공');\n    } else {\n      alert(`결제 실패 : ${error_msg}`);\n    }\n  };\n  useEffect(() => {\n    const jquery = document.createElement(\"script\");\n    jquery.src = \"https://code.jquery.com/jquery-1.12.4.min.js\";\n    const iamport = document.createElement(\"script\");\n    iamport.src = \"https://cdn.iamport.kr/js/iamport.payment-1.1.7.js\";\n    document.head.appendChild(jquery);\n    document.head.appendChild(iamport);\n    return () => {\n      document.head.removeChild(jquery);\n      document.head.removeChild(iamport);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClickPayment,\n      children: \"\\uACB0\\uC81C\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(MyPay, \"Ux0benWqXHpsv8c+sqd+BBYod3Y=\");\n_c = MyPay;\nexport default MyPay;\nvar _c;\n$RefreshReg$(_c, \"MyPay\");","map":{"version":3,"names":["axios","React","useEffect","useContext","UserContext","MyPay","loginUser","onClickPayment","IMP","window","init","data","pg","pay_method","merchant_uid","Date","getTime","name","amount","custom_data","desc","buyer_name","uname","buyer_tel","utel","buyer_email","uemail","buyer_addr","uaddress","request_pay","callback","response","success","error_msg","imp_uid","paid_amount","status","result","post","console","log","e","formData","FormData","append","uid","alert","jquery","document","createElement","src","iamport","head","appendChild","removeChild"],"sources":["C:/data/project/realproject/src/my/MyPay.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect } from 'react';\r\nimport { useContext } from 'react';\r\nimport { UserContext } from '../context/UserContext';\r\n\r\nconst MyPay = () => {\r\n  const { loginUser } = useContext(UserContext);\r\n\r\n\r\n  //pname하고 pprice,pcode를 받아와야 함. ㅡㅡ>pcode만 받기.\r\n  const onClickPayment = () => {\r\n    const { IMP } = window;\r\n    IMP.init('imp37385705'); // 결제 데이터 정의\r\n    const data = {\r\n      pg: 'html5_inicis', // PG사 (필수항목)\r\n      pay_method: 'card', // 결제수단 (필수항목)\r\n      merchant_uid: `pay_${new Date().getTime()}`, // 주문번호 (필수항목)\r\n      name: '결제 테스트', // 주문명 (필수항목)\r\n      amount: '10', // 금액이고 반드시 숫자로 써야함. (필수항목)\r\n      custom_data: { name: '부가정보', desc: '세부 부가정보' },\r\n      buyer_name: loginUser.uname, // 구매자 이름\r\n      buyer_tel: loginUser.utel, // 구매자 전화번호 (필수항목)\r\n      buyer_email: loginUser.uemail, // 구매자 이메일\r\n      buyer_addr: loginUser.uaddress,\r\n    };\r\n    IMP.request_pay(data, callback);\r\n  }\r\n\r\n  const callback = async (response) => {\r\n    const { success, error_msg, imp_uid, merchant_uid, buyer_email, buyer_addr, pay_method, paid_amount, status } = response;\r\n    try {\r\n      const result = await axios.post(`/pay/complete/${imp_uid}`);\r\n\r\n      //위변조 검증\r\n      if (result.data.response.amount === paid_amount) {\r\n        console.log('검증 완료')\r\n      } else {\r\n        console.log('검증 실패')\r\n        return;\r\n      }\r\n\r\n    } catch (e) {\r\n      if (e) console.log(e);\r\n      return;\r\n    }\r\n\r\n\r\n \r\n\r\n    if (success) {\r\n      const formData = new FormData();\r\n      formData.append(\"payprice\", paid_amount);\r\n      formData.append(\"uid\", loginUser.uid);\r\n      formData.append(\"paytype\", pay_method);\r\n      formData.append(\"payaddress\", buyer_addr);\r\n      formData.append(\"payemail\", buyer_email);\r\n      formData.append(\"paycode\", merchant_uid);\r\n\r\n     //DB insert\r\n      try {\r\n        await axios.post('/pay/insert', formData);\r\n        //이동하는 페이지는 review작성페이지. review작성페이지에 가져갈 값은 paycode, uid\r\n      } catch (e) {\r\n        if (e) console.log(e);\r\n        return;\r\n      }\r\n    \r\n      alert('결제 성공');\r\n    } else {\r\n      alert(`결제 실패 : ${error_msg}`);\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    const jquery = document.createElement(\"script\");\r\n    jquery.src = \"https://code.jquery.com/jquery-1.12.4.min.js\";\r\n    const iamport = document.createElement(\"script\");\r\n    iamport.src = \"https://cdn.iamport.kr/js/iamport.payment-1.1.7.js\";\r\n    document.head.appendChild(jquery);\r\n    document.head.appendChild(iamport);\r\n    return () => {\r\n      document.head.removeChild(jquery); document.head.removeChild(iamport);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <button onClick={onClickPayment}>결제하기</button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MyPay;"],"mappings":"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"},"metadata":{},"sourceType":"module"}
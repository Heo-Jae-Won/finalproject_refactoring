{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\nimport Command from './command';\nimport insertToPriorityArray from '@ckeditor/ckeditor5-utils/src/inserttopriorityarray';\n\n/**\n * @module core/multicommand\n */\n\n/**\n * A CKEditor command that aggregates other commands.\n *\n * This command is used to proxy multiple commands. The multi-command is enabled when\n * at least one of its registered child commands is enabled.\n * When executing a multi-command the first enabled command with highest priority will be executed.\n *\n *\t\tconst multiCommand = new MultiCommand( editor );\n *\n *\t\tconst commandFoo = new Command( editor );\n *\t\tconst commandBar = new Command( editor );\n *\n *\t\t// Register a child command.\n *\t\tmultiCommand.registerChildCommand( commandFoo );\n *\t\t// Register a child command with a low priority.\n *\t\tmultiCommand.registerChildCommand( commandBar, { priority: 'low' } );\n *\n *\t\t// Enable one of the commands.\n *\t\tcommandBar.isEnabled = true;\n *\n *\t\tmultiCommand.execute(); // Will execute commandBar.\n *\n * @extends module:core/command~Command\n */\nexport default class MultiCommand extends Command {\n  /**\n   * @inheritDoc\n   */\n  constructor(editor) {\n    super(editor);\n\n    /**\n     * Registered child commands definitions.\n     *\n     * @type {Array.<Object>}\n     * @private\n     */\n    this._childCommandsDefinitions = [];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  refresh() {\n    // Override base command refresh(): the command's state is changed when one of child commands changes states.\n  }\n\n  /**\n   * Executes the first enabled command which has the highest priority of all registered child commands.\n   *\n   * @returns {*} The value returned by the {@link module:core/command~Command#execute `command.execute()`}.\n   */\n  execute() {\n    const command = this._getFirstEnabledCommand();\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return !!command && command.execute(args);\n  }\n\n  /**\n   * Registers a child command.\n   *\n   * @param {module:core/command~Command} command\n   * @param {Object} options An object with configuration options.\n   * @param {module:utils/priorities~PriorityString} [options.priority='normal'] Priority of a command to register.\n   */\n  registerChildCommand(command) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      priority: 'normal'\n    };\n    insertToPriorityArray(this._childCommandsDefinitions, {\n      command,\n      priority: options.priority\n    });\n\n    // Change multi command enabled state when one of registered commands changes state.\n    command.on('change:isEnabled', () => this._checkEnabled());\n    this._checkEnabled();\n  }\n\n  /**\n   * Checks if any of child commands is enabled.\n   *\n   * @private\n   */\n  _checkEnabled() {\n    this.isEnabled = !!this._getFirstEnabledCommand();\n  }\n\n  /**\n   * Returns a first enabled command with the highest priority or `undefined` if none of them is enabled.\n   *\n   * @returns {module:core/command~Command|undefined}\n   * @private\n   */\n  _getFirstEnabledCommand() {\n    const commandDefinition = this._childCommandsDefinitions.find(_ref => {\n      let {\n        command\n      } = _ref;\n      return command.isEnabled;\n    });\n    return commandDefinition && commandDefinition.command;\n  }\n}","map":{"version":3,"names":["Command","insertToPriorityArray","MultiCommand","constructor","editor","_childCommandsDefinitions","refresh","execute","command","_getFirstEnabledCommand","args","registerChildCommand","options","priority","on","_checkEnabled","isEnabled","commandDefinition","find"],"sources":["C:/data/project/realproject/node_modules/@ckeditor/ckeditor5-core/src/multicommand.js"],"sourcesContent":["/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\nimport Command from './command';\n\nimport insertToPriorityArray from '@ckeditor/ckeditor5-utils/src/inserttopriorityarray';\n\n/**\n * @module core/multicommand\n */\n\n/**\n * A CKEditor command that aggregates other commands.\n *\n * This command is used to proxy multiple commands. The multi-command is enabled when\n * at least one of its registered child commands is enabled.\n * When executing a multi-command the first enabled command with highest priority will be executed.\n *\n *\t\tconst multiCommand = new MultiCommand( editor );\n *\n *\t\tconst commandFoo = new Command( editor );\n *\t\tconst commandBar = new Command( editor );\n *\n *\t\t// Register a child command.\n *\t\tmultiCommand.registerChildCommand( commandFoo );\n *\t\t// Register a child command with a low priority.\n *\t\tmultiCommand.registerChildCommand( commandBar, { priority: 'low' } );\n *\n *\t\t// Enable one of the commands.\n *\t\tcommandBar.isEnabled = true;\n *\n *\t\tmultiCommand.execute(); // Will execute commandBar.\n *\n * @extends module:core/command~Command\n */\nexport default class MultiCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * Registered child commands definitions.\n\t\t *\n\t\t * @type {Array.<Object>}\n\t\t * @private\n\t\t */\n\t\tthis._childCommandsDefinitions = [];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\t// Override base command refresh(): the command's state is changed when one of child commands changes states.\n\t}\n\n\t/**\n\t * Executes the first enabled command which has the highest priority of all registered child commands.\n\t *\n\t * @returns {*} The value returned by the {@link module:core/command~Command#execute `command.execute()`}.\n\t */\n\texecute( ...args ) {\n\t\tconst command = this._getFirstEnabledCommand();\n\n\t\treturn !!command && command.execute( args );\n\t}\n\n\t/**\n\t * Registers a child command.\n\t *\n\t * @param {module:core/command~Command} command\n\t * @param {Object} options An object with configuration options.\n\t * @param {module:utils/priorities~PriorityString} [options.priority='normal'] Priority of a command to register.\n\t */\n\tregisterChildCommand( command, options = { priority: 'normal' } ) {\n\t\tinsertToPriorityArray( this._childCommandsDefinitions, { command, priority: options.priority } );\n\n\t\t// Change multi command enabled state when one of registered commands changes state.\n\t\tcommand.on( 'change:isEnabled', () => this._checkEnabled() );\n\n\t\tthis._checkEnabled();\n\t}\n\n\t/**\n\t * Checks if any of child commands is enabled.\n\t *\n\t * @private\n\t */\n\t_checkEnabled() {\n\t\tthis.isEnabled = !!this._getFirstEnabledCommand();\n\t}\n\n\t/**\n\t * Returns a first enabled command with the highest priority or `undefined` if none of them is enabled.\n\t *\n\t * @returns {module:core/command~Command|undefined}\n\t * @private\n\t */\n\t_getFirstEnabledCommand() {\n\t\tconst commandDefinition = this._childCommandsDefinitions.find( ( { command } ) => command.isEnabled );\n\n\t\treturn commandDefinition && commandDefinition.command;\n\t}\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,OAAOA,OAAO,MAAM,WAAW;AAE/B,OAAOC,qBAAqB,MAAM,qDAAqD;;AAEvF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAMC,YAAY,SAASF,OAAO,CAAC;EACjD;AACD;AACA;EACCG,WAAW,CAAEC,MAAM,EAAG;IACrB,KAAK,CAAEA,MAAM,CAAE;;IAEf;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,yBAAyB,GAAG,EAAE;EACpC;;EAEA;AACD;AACA;EACCC,OAAO,GAAG;IACT;EACD;;EAEA;AACD;AACA;AACA;AACA;EACCC,OAAO,GAAY;IAClB,MAAMC,OAAO,GAAG,IAAI,CAACC,uBAAuB,EAAE;IAAC,kCADpCC,IAAI;MAAJA,IAAI;IAAA;IAGf,OAAO,CAAC,CAACF,OAAO,IAAIA,OAAO,CAACD,OAAO,CAAEG,IAAI,CAAE;EAC5C;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;EACCC,oBAAoB,CAAEH,OAAO,EAAqC;IAAA,IAAnCI,OAAO,uEAAG;MAAEC,QAAQ,EAAE;IAAS,CAAC;IAC9DZ,qBAAqB,CAAE,IAAI,CAACI,yBAAyB,EAAE;MAAEG,OAAO;MAAEK,QAAQ,EAAED,OAAO,CAACC;IAAS,CAAC,CAAE;;IAEhG;IACAL,OAAO,CAACM,EAAE,CAAE,kBAAkB,EAAE,MAAM,IAAI,CAACC,aAAa,EAAE,CAAE;IAE5D,IAAI,CAACA,aAAa,EAAE;EACrB;;EAEA;AACD;AACA;AACA;AACA;EACCA,aAAa,GAAG;IACf,IAAI,CAACC,SAAS,GAAG,CAAC,CAAC,IAAI,CAACP,uBAAuB,EAAE;EAClD;;EAEA;AACD;AACA;AACA;AACA;AACA;EACCA,uBAAuB,GAAG;IACzB,MAAMQ,iBAAiB,GAAG,IAAI,CAACZ,yBAAyB,CAACa,IAAI,CAAE;MAAA,IAAE;QAAEV;MAAQ,CAAC;MAAA,OAAMA,OAAO,CAACQ,SAAS;IAAA,EAAE;IAErG,OAAOC,iBAAiB,IAAIA,iBAAiB,CAACT,OAAO;EACtD;AACD"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\finalproject\\\\finalproject_refactoring\\\\front\\\\src\\\\my\\\\MyUpdatePass.jsx\",\n  _s = $RefreshSig$();\nimport { Grid, TextField } from '@material-ui/core';\nimport axios from 'axios';\nimport React, { useContext, useState } from 'react';\nimport { Button, Card, Row } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport { UserContext } from '../context/UserContext';\nimport { onCheckPassword } from '../util/regex/regex';\nimport { swalError, swalQueryUpdate, swalSuccessUpdate } from '../util/swal/swal.basic.util';\nimport { swalWarnPasswordInput, swalWarnPasswordForm, swalWarnNotEqualPassword, swalSuccessEqualPassword, swalWarnConfirmPassword } from '../util/swal/swal.my.util';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyUpdatePass = () => {\n  _s();\n  const navigate = useNavigate();\n  const [pass1, setPass1] = useState('');\n  const {\n    loginUser\n  } = useContext(UserContext);\n  const [isChecked, setIsChecked] = useState(false);\n\n  //  8 ~ 10 char combination of number + alaphabet\n\n  const onPasswordAlert = () => {\n    swalWarnConfirmPassword();\n  };\n  const [form, setForm] = useState({\n    uid: loginUser.uid,\n    upass: ''\n  });\n  const {\n    uid,\n    upass\n  } = form;\n  const onChangeForm = e => {\n    setForm(prev => ({\n      ...prev,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  //validate password\n  const onValidatePass = async e => {\n    e.preventDefault();\n    if (pass1 === '') {\n      swalWarnPasswordInput();\n    } else if (onCheckPassword(upass) === false) {\n      swalWarnPasswordForm();\n    } else if (upass !== pass1) {\n      swalWarnNotEqualPassword();\n    } else if (upass === pass1) {\n      swalSuccessEqualPassword();\n      setIsChecked(true);\n    }\n  };\n  const onUpdate = e => {\n    e.preventDefault();\n    swalQueryUpdate().then(async result => {\n      if (result.isConfirmed) {\n        const data = {\n          uid: uid,\n          upass: upass\n        };\n        try {\n          await axios.patch('/api/user/password', data);\n          swalSuccessUpdate();\n          navigate(`/my/info/${sessionStorage.getItem('uid')}`);\n        } catch (e) {\n          swalError();\n        }\n      }\n      //취소 click.\n      else if (result.isDismissed) {\n        setIsChecked(false);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex justify-content-center mt-5\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-3\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: '30rem'\n        },\n        className: \"p-3\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n            helperText: \"8-10\\uC790 \\uC601\\uBB38\\uB300\\uC18C\\uBB38\\uC790\\uC640 \\uC22B\\uC790\\uB97C \\uC870\\uD569\",\n            FormHelperTextProps: {\n              style: {\n                fontSize: 15\n              }\n            },\n            value: form.upass,\n            name: \"upass\",\n            type: \"password\",\n            onChange: onChangeForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            id: \"upass\",\n            label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n            value: pass1,\n            name: \"upass\",\n            autoComplete: \"upass\",\n            type: \"password\",\n            onChange: e => setPass1(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onValidatePass,\n          className: \"mt-3\",\n          children: \"\\uD328\\uC2A4\\uC6CC\\uB4DC \\uC77C\\uCE58 \\uD655\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: isChecked === true ? onUpdate : onPasswordAlert,\n          className: \"mt-3\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uBCC0\\uACBD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_s(MyUpdatePass, \"pQu7BIVb+conSHh/+qk6uzbBb80=\", false, function () {\n  return [useNavigate];\n});\n_c = MyUpdatePass;\nexport default MyUpdatePass;\nvar _c;\n$RefreshReg$(_c, \"MyUpdatePass\");","map":{"version":3,"names":["Grid","TextField","axios","React","useContext","useState","Button","Card","Row","useNavigate","Swal","UserContext","onCheckPassword","swalError","swalQueryUpdate","swalSuccessUpdate","swalWarnPasswordInput","swalWarnPasswordForm","swalWarnNotEqualPassword","swalSuccessEqualPassword","swalWarnConfirmPassword","MyUpdatePass","navigate","pass1","setPass1","loginUser","isChecked","setIsChecked","onPasswordAlert","form","setForm","uid","upass","onChangeForm","e","prev","target","name","value","onValidatePass","preventDefault","onUpdate","then","result","isConfirmed","data","patch","sessionStorage","getItem","isDismissed","width","style","fontSize"],"sources":["C:/Users/user/Desktop/finalproject/finalproject_refactoring/front/src/my/MyUpdatePass.jsx"],"sourcesContent":["import { Grid, TextField } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport React, { useContext, useState } from 'react';\r\nimport { Button, Card, Row } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport { UserContext } from '../context/UserContext';\r\nimport { onCheckPassword } from '../util/regex/regex';\r\nimport { swalError, swalQueryUpdate, swalSuccessUpdate } from '../util/swal/swal.basic.util';\r\nimport { swalWarnPasswordInput, swalWarnPasswordForm, swalWarnNotEqualPassword, swalSuccessEqualPassword, swalWarnConfirmPassword } from '../util/swal/swal.my.util';\r\n\r\nconst MyUpdatePass = () => {\r\n    const navigate = useNavigate();\r\n    const [pass1, setPass1] = useState('')\r\n    const { loginUser } = useContext(UserContext);\r\n    const [isChecked, setIsChecked] = useState(false);\r\n\r\n    //  8 ~ 10 char combination of number + alaphabet\r\n \r\n\r\n    const onPasswordAlert = () => {\r\n        swalWarnConfirmPassword();\r\n    }\r\n\r\n    const [form, setForm] = useState({\r\n        uid: loginUser.uid,\r\n        upass: ''\r\n    })\r\n\r\n    const { uid, upass } = form;\r\n\r\n    const onChangeForm = (e) => {\r\n        setForm(prev => ({\r\n            ...prev,\r\n            [e.target.name]: e.target.value\r\n        }))\r\n    }\r\n\r\n    //validate password\r\n    const onValidatePass = async (e) => {\r\n        e.preventDefault();\r\n        if (pass1 === '') {\r\n            swalWarnPasswordInput();\r\n        }\r\n\r\n        else if (onCheckPassword(upass) === false) {\r\n            swalWarnPasswordForm();\r\n        }\r\n\r\n        else if (upass !== pass1) {\r\n            swalWarnNotEqualPassword();\r\n        }\r\n\r\n        else if (upass === pass1) {\r\n            swalSuccessEqualPassword();\r\n            setIsChecked(true);\r\n        }\r\n    }\r\n\r\n    const onUpdate = (e) => {\r\n        e.preventDefault();\r\n\r\n        swalQueryUpdate().then(async (result) => {\r\n\r\n            if (result.isConfirmed) {\r\n                const data = {\r\n                    uid: uid,\r\n                    upass: upass\r\n                };\r\n\r\n                try {\r\n                    await axios.patch('/api/user/password', data);\r\n                    swalSuccessUpdate();\r\n                    navigate(`/my/info/${sessionStorage.getItem('uid')}`)\r\n                } catch (e) {\r\n                    swalError();\r\n                }\r\n\r\n            }\r\n            //취소 click.\r\n            else if (result.isDismissed) {\r\n                setIsChecked(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='d-flex justify-content-center mt-5'>\r\n            <Row className='mt-3'>\r\n                <Card style={{ width: '30rem' }} className=\"p-3\">\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            label=\"비밀번호\"\r\n                            helperText=\"8-10자 영문대소문자와 숫자를 조합\"\r\n                            FormHelperTextProps={{ style: { fontSize: 15 } }}\r\n                            value={form.upass}\r\n                            name=\"upass\"\r\n                            type=\"password\"\r\n                            onChange={onChangeForm}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <hr />\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"upass\"\r\n                            label=\"비밀번호 확인\"\r\n                            value={pass1}\r\n                            name=\"upass\"\r\n                            autoComplete=\"upass\"\r\n                            type=\"password\"\r\n                            onChange={(e) => setPass1(e.target.value)}\r\n                        />\r\n                    </Grid>\r\n                    <Button onClick={onValidatePass} className='mt-3'>패스워드 일치 확인</Button>\r\n\r\n                    <Button onClick={isChecked === true ? onUpdate :\r\n                        onPasswordAlert} className='mt-3'>비밀번호 변경</Button>\r\n                </Card>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyUpdatePass"],"mappings":"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"},"metadata":{},"sourceType":"module"}
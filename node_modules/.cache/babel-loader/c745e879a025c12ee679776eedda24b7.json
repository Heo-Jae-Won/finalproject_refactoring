{"ast":null,"code":"var _jsxFileName = \"C:\\\\data\\\\project\\\\chatting_progress\\\\src\\\\my\\\\MySellListChart.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useContext, useRef } from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport Chart from 'react-google-charts';\nimport { UserContext } from '../context/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const options = {\n  chart: {\n    title: \"Company Performance\",\n    subtitle: \"Sales, Expenses, and Profit: 2014-2017\"\n  }\n};\nconst MySellListChart = () => {\n  _s();\n  const {\n    loginUser\n  } = useContext(UserContext);\n  const [data, setData] = useState('');\n  const chartType = useRef('Bar');\n  const title = useRef('직업별인원수');\n  const options = {\n    chart: {\n      title: title.current\n    },\n    title: title.current\n  };\n  var barChartOption = {\n    bars: 'vertical',\n    height: 260,\n    width: '100%',\n    legend: {\n      position: \"top\"\n    },\n    isStacked: false,\n    tooltip: {\n      textStyle: {\n        fontSize: 12\n      },\n      showColorCode: true\n    },\n    animation: {\n      //차트가 뿌려질때 실행될 애니메이션 효과\n      startup: true,\n      duration: 1000,\n      easing: 'linear'\n    },\n    annotations: {\n      textStyle: {\n        fontSize: 15,\n        bold: true,\n        italic: true,\n        color: '#871b47',\n        auraColor: '#d799ae',\n        opacity: 0.8\n      }\n    }\n  };\n  const callChart = async () => {\n    //fetch data from db + put it in state variable\n    let result = await axios.get(`/api/tradeinfo/sell/chart?seller=${loginUser.unickname}`);\n    let array = chageData(result.data);\n    setData(array);\n  };\n  const chageData = result => {\n    title.current = '2022 월별 판매 총액';\n    chartType.current = 'Line';\n    let array = [];\n    array.push(['월', '총액']);\n    result.forEach(item => {\n      array.push([item.month, item.payprice]);\n    });\n    return array;\n  };\n  console.log(data);\n  useEffect(() => {\n    callChart();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: 100\n    },\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      chartType: chartType.current,\n      width: \"100%\",\n      height: \"400px\",\n      data: data,\n      options: barChartOption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(MySellListChart, \"hEZ41Oh5MFT0uZZ290Qvtuo1WWM=\");\n_c = MySellListChart;\nexport default MySellListChart;\nvar _c;\n$RefreshReg$(_c, \"MySellListChart\");","map":{"version":3,"names":["axios","React","useContext","useRef","useState","useEffect","Chart","UserContext","options","chart","title","subtitle","MySellListChart","loginUser","data","setData","chartType","current","barChartOption","bars","height","width","legend","position","isStacked","tooltip","textStyle","fontSize","showColorCode","animation","startup","duration","easing","annotations","bold","italic","color","auraColor","opacity","callChart","result","get","unickname","array","chageData","push","forEach","item","month","payprice","console","log","marginTop"],"sources":["C:/data/project/chatting_progress/src/my/MySellListChart.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useContext, useRef } from 'react'\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport Chart from 'react-google-charts';\r\nimport {UserContext} from '../context/UserContext'\r\n\r\n\r\nexport const options = {\r\n    chart: {\r\n        title: \"Company Performance\",\r\n        subtitle: \"Sales, Expenses, and Profit: 2014-2017\",\r\n    },\r\n};\r\n\r\nconst MySellListChart = () => {\r\n    const { loginUser } = useContext(UserContext);\r\n    const [data, setData] = useState('');\r\n    const chartType = useRef('Bar');\r\n    const title = useRef('직업별인원수');\r\n\r\n    const options = {\r\n        chart: {\r\n            title: title.current,\r\n        },\r\n        title: title.current\r\n    };\r\n\r\n    var barChartOption = {\r\n        bars: 'vertical',\r\n        height :260,\r\n        width :'100%',\r\n        legend: { position: \"top\" },\r\n        isStacked: false,\r\n        tooltip:{textStyle : {fontSize:12}, showColorCode : true},\r\n        animation: { //차트가 뿌려질때 실행될 애니메이션 효과\r\n          startup: true,\r\n          duration: 1000,\r\n          easing: 'linear' },\r\n        annotations: {\r\n            textStyle: {\r\n              fontSize: 15,\r\n              bold: true,\r\n              italic: true,\r\n              color: '#871b47',\r\n              auraColor: '#d799ae',\r\n              opacity: 0.8\r\n            }\r\n       }\r\n };\r\n\r\n    const callChart = async () => {\r\n        //fetch data from db + put it in state variable\r\n        let result = await axios.get(`/api/tradeinfo/sell/chart?seller=${loginUser.unickname}`);\r\n        let array = chageData(result.data);\r\n        setData(array);\r\n    }\r\n\r\n    const chageData = (result) => {\r\n        title.current = '2022 월별 판매 총액';\r\n        chartType.current = 'Line';\r\n\r\n        let array = [];\r\n        array.push(['월', '총액']);\r\n        result.forEach(item => {\r\n            array.push([item.month, item.payprice]);\r\n        });\r\n        return array;\r\n    }\r\n\r\n  console.log(data);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        callChart();\r\n    },[])\r\n\r\n    return (\r\n        <div style={{marginTop:100}}>\r\n            <Chart\r\n                chartType={chartType.current}\r\n                width=\"100%\"\r\n                height=\"400px\"\r\n                data={data}\r\n                options={barChartOption} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MySellListChart"],"mappings":"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"},"metadata":{},"sourceType":"module"}
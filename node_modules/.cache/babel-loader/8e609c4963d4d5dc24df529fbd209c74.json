{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module engine/model/operation/nooperation\n */\nimport Operation from './operation';\n/**\n * Operation which is doing nothing (\"empty operation\", \"do-nothing operation\", \"noop\"). This is an operation,\n * which when executed does not change the tree model. It still has some parameters defined for transformation purposes.\n *\n * In most cases this operation is a result of transforming operations. When transformation returns\n * {@link module:engine/model/operation/nooperation~NoOperation} it means that changes done by the transformed operation\n * have already been applied.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class NoOperation extends Operation {\n  get type() {\n    return 'noop';\n  }\n  /**\n   * Creates and returns an operation that has the same parameters as this operation.\n   *\n   * @returns {module:engine/model/operation/nooperation~NoOperation} Clone of this operation.\n   */\n  clone() {\n    return new NoOperation(this.baseVersion);\n  }\n  /**\n   * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n   *\n   * @returns {module:engine/model/operation/nooperation~NoOperation}\n   */\n  getReversed() {\n    return new NoOperation(this.baseVersion + 1);\n  }\n  /** @internal */\n  _execute() {}\n  /**\n   * @inheritDoc\n   */\n  static get className() {\n    return 'NoOperation';\n  }\n}","map":{"version":3,"names":["Operation","NoOperation","type","clone","baseVersion","getReversed","_execute","className"],"sources":["C:/data/project/realproject/node_modules/@ckeditor/ckeditor5-engine/src/model/operation/nooperation.js"],"sourcesContent":["/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module engine/model/operation/nooperation\n */\nimport Operation from './operation';\n/**\n * Operation which is doing nothing (\"empty operation\", \"do-nothing operation\", \"noop\"). This is an operation,\n * which when executed does not change the tree model. It still has some parameters defined for transformation purposes.\n *\n * In most cases this operation is a result of transforming operations. When transformation returns\n * {@link module:engine/model/operation/nooperation~NoOperation} it means that changes done by the transformed operation\n * have already been applied.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class NoOperation extends Operation {\n    get type() {\n        return 'noop';\n    }\n    /**\n     * Creates and returns an operation that has the same parameters as this operation.\n     *\n     * @returns {module:engine/model/operation/nooperation~NoOperation} Clone of this operation.\n     */\n    clone() {\n        return new NoOperation(this.baseVersion);\n    }\n    /**\n     * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n     *\n     * @returns {module:engine/model/operation/nooperation~NoOperation}\n     */\n    getReversed() {\n        return new NoOperation(this.baseVersion + 1);\n    }\n    /** @internal */\n    _execute() {\n    }\n    /**\n     * @inheritDoc\n     */\n    static get className() {\n        return 'NoOperation';\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,SAAS,MAAM,aAAa;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAMC,WAAW,SAASD,SAAS,CAAC;EAC/C,IAAIE,IAAI,GAAG;IACP,OAAO,MAAM;EACjB;EACA;AACJ;AACA;AACA;AACA;EACIC,KAAK,GAAG;IACJ,OAAO,IAAIF,WAAW,CAAC,IAAI,CAACG,WAAW,CAAC;EAC5C;EACA;AACJ;AACA;AACA;AACA;EACIC,WAAW,GAAG;IACV,OAAO,IAAIJ,WAAW,CAAC,IAAI,CAACG,WAAW,GAAG,CAAC,CAAC;EAChD;EACA;EACAE,QAAQ,GAAG,CACX;EACA;AACJ;AACA;EACI,WAAWC,SAAS,GAAG;IACnB,OAAO,aAAa;EACxB;AACJ"},"metadata":{},"sourceType":"module"}
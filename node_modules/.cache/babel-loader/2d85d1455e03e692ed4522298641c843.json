{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/mix\n */\n/**\n * Copies enumerable properties and symbols from the objects given as 2nd+ parameters to the\n * prototype of first object (a constructor).\n *\n *\t\tclass Editor {\n *\t\t\t...\n *\t\t}\n *\n *\t\tconst SomeMixin = {\n *\t\t\ta() {\n *\t\t\t\treturn 'a';\n *\t\t\t}\n *\t\t};\n *\n *\t\tmix( Editor, SomeMixin, ... );\n *\n *\t\tnew Editor().a(); // -> 'a'\n *\n * Note: Properties which already exist in the base class will not be overriden.\n *\n * @depreciated Use mixin pattern, see: https://www.typescriptlang.org/docs/handbook/mixins.html.\n * @param {Function} [baseClass] Class which prototype will be extended.\n * @param {Object} [...mixins] Objects from which to get properties.\n */\nexport default function mix(baseClass) {\n  for (var _len = arguments.length, mixins = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    mixins[_key - 1] = arguments[_key];\n  }\n  mixins.forEach(mixin => {\n    const propertyNames = Object.getOwnPropertyNames(mixin);\n    const propertySymbols = Object.getOwnPropertySymbols(mixin);\n    propertyNames.concat(propertySymbols).forEach(key => {\n      if (key in baseClass.prototype) {\n        return;\n      }\n      if (typeof mixin == 'function' && (key == 'length' || key == 'name' || key == 'prototype')) {\n        return;\n      }\n      const sourceDescriptor = Object.getOwnPropertyDescriptor(mixin, key);\n      sourceDescriptor.enumerable = false;\n      Object.defineProperty(baseClass.prototype, key, sourceDescriptor);\n    });\n  });\n}","map":{"version":3,"names":["mix","baseClass","mixins","forEach","mixin","propertyNames","Object","getOwnPropertyNames","propertySymbols","getOwnPropertySymbols","concat","key","prototype","sourceDescriptor","getOwnPropertyDescriptor","enumerable","defineProperty"],"sources":["C:/data/project/realproject/node_modules/@ckeditor/ckeditor5-utils/src/mix.js"],"sourcesContent":["/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/mix\n */\n/**\n * Copies enumerable properties and symbols from the objects given as 2nd+ parameters to the\n * prototype of first object (a constructor).\n *\n *\t\tclass Editor {\n *\t\t\t...\n *\t\t}\n *\n *\t\tconst SomeMixin = {\n *\t\t\ta() {\n *\t\t\t\treturn 'a';\n *\t\t\t}\n *\t\t};\n *\n *\t\tmix( Editor, SomeMixin, ... );\n *\n *\t\tnew Editor().a(); // -> 'a'\n *\n * Note: Properties which already exist in the base class will not be overriden.\n *\n * @depreciated Use mixin pattern, see: https://www.typescriptlang.org/docs/handbook/mixins.html.\n * @param {Function} [baseClass] Class which prototype will be extended.\n * @param {Object} [...mixins] Objects from which to get properties.\n */\nexport default function mix(baseClass, ...mixins) {\n    mixins.forEach(mixin => {\n        const propertyNames = Object.getOwnPropertyNames(mixin);\n        const propertySymbols = Object.getOwnPropertySymbols(mixin);\n        propertyNames.concat(propertySymbols).forEach(key => {\n            if (key in baseClass.prototype) {\n                return;\n            }\n            if (typeof mixin == 'function' && (key == 'length' || key == 'name' || key == 'prototype')) {\n                return;\n            }\n            const sourceDescriptor = Object.getOwnPropertyDescriptor(mixin, key);\n            sourceDescriptor.enumerable = false;\n            Object.defineProperty(baseClass.prototype, key, sourceDescriptor);\n        });\n    });\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,GAAG,CAACC,SAAS,EAAa;EAAA,kCAARC,MAAM;IAANA,MAAM;EAAA;EAC5CA,MAAM,CAACC,OAAO,CAACC,KAAK,IAAI;IACpB,MAAMC,aAAa,GAAGC,MAAM,CAACC,mBAAmB,CAACH,KAAK,CAAC;IACvD,MAAMI,eAAe,GAAGF,MAAM,CAACG,qBAAqB,CAACL,KAAK,CAAC;IAC3DC,aAAa,CAACK,MAAM,CAACF,eAAe,CAAC,CAACL,OAAO,CAACQ,GAAG,IAAI;MACjD,IAAIA,GAAG,IAAIV,SAAS,CAACW,SAAS,EAAE;QAC5B;MACJ;MACA,IAAI,OAAOR,KAAK,IAAI,UAAU,KAAKO,GAAG,IAAI,QAAQ,IAAIA,GAAG,IAAI,MAAM,IAAIA,GAAG,IAAI,WAAW,CAAC,EAAE;QACxF;MACJ;MACA,MAAME,gBAAgB,GAAGP,MAAM,CAACQ,wBAAwB,CAACV,KAAK,EAAEO,GAAG,CAAC;MACpEE,gBAAgB,CAACE,UAAU,GAAG,KAAK;MACnCT,MAAM,CAACU,cAAc,CAACf,SAAS,CAACW,SAAS,EAAED,GAAG,EAAEE,gBAAgB,CAAC;IACrE,CAAC,CAAC;EACN,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module"}
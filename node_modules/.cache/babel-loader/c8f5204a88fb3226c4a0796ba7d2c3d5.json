{"ast":null,"code":"var _jsxFileName = \"C:\\\\data\\\\project\\\\realproject\\\\src\\\\my\\\\MyChatItem.jsx\",\n  _s = $RefreshSig$();\nimport { doc, getDoc, getFirestore, updateDoc } from 'firebase/firestore';\nimport React, { useContext, useState } from 'react';\nimport { Badge, Button, Form, Modal } from 'react-bootstrap';\nimport { UserContext } from '../context/UserContext';\nimport { app } from '../fireStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MyChatItem = _ref => {\n  _s();\n  let {\n    message,\n    onClickDelete\n  } = _ref;\n  const db = getFirestore(app);\n  const {\n    loginUser\n  } = useContext(UserContext);\n  const {\n    id,\n    text,\n    date,\n    uid,\n    uprofile,\n    unickname\n  } = message;\n  const [show, setShow] = useState(false);\n  const [msg, setMsg] = useState({\n    date: date,\n    text: text,\n    unickname: unickname\n  });\n  const handleClose = () => setShow(false);\n\n  /*     updateDoc을 할 때 update할 message를 read해옴.\r\n      const handleShow = async () => {\r\n          const docRef = doc(db, 'messages', id);\r\n          const docsnap = await getDoc(docRef);\r\n          setMsg({\r\n              ...msg,\r\n              text: docsnap.data().text\r\n          })\r\n          setShow(true);\r\n      } */\n\n  /*     //수정하기\r\n      const onClickSave = async () => {\r\n          const docRef = doc(db, 'messages', id);\r\n          if (!window.confirm(`내용을 '${msg.text}'로 수정하실래요?`)) return;\r\n          await updateDoc(docRef, msg);\r\n          setMsg(text);\r\n          handleClose();\r\n      } */\n\n  /*   //텍스트 변경\r\n    const onChange = (e) => {\r\n        setMsg({\r\n            ...msg,\r\n            text: e.target.value\r\n        });\r\n    } */\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: 20\n        },\n        children: unickname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), loginUser.uid !== uid && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"icon\",\n        src: uprofile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 43\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"date\",\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"textbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'left'\n        },\n        children: [date > loginUser.notice_read_date && /*#__PURE__*/_jsxDEV(Badge, {\n          children: \"new\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 59\n        }, this), \"\\xA0\", text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => onClickDelete(id),\n        children: \"\\uC0AD\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true)\n  /* ************************ 알림 수정을 위한 모달창 *****************************\r\n    <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n            <Modal.Title>알림내용을 수정합니다.</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <Form.Control onChange={onChange} value={msg.text} />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\r\n            <Button variant=\"primary\" onClick={onClickSave}>Save</Button>\r\n        </Modal.Footer>\r\n    </Modal> */;\n};\n_s(MyChatItem, \"L1azCSWKk150YFF1aJUPi4NXV/M=\");\n_c = MyChatItem;\nexport default MyChatItem;\nvar _c;\n$RefreshReg$(_c, \"MyChatItem\");","map":{"version":3,"names":["doc","getDoc","getFirestore","updateDoc","React","useContext","useState","Badge","Button","Form","Modal","UserContext","app","MyChatItem","message","onClickDelete","db","loginUser","id","text","date","uid","uprofile","unickname","show","setShow","msg","setMsg","handleClose","fontSize","textAlign","notice_read_date"],"sources":["C:/data/project/realproject/src/my/MyChatItem.jsx"],"sourcesContent":["import { doc, getDoc, getFirestore, updateDoc } from 'firebase/firestore';\r\nimport React, { useContext, useState } from 'react';\r\nimport { Badge, Button, Form, Modal } from 'react-bootstrap';\r\nimport { UserContext } from '../context/UserContext';\r\nimport { app } from '../fireStore';\r\n\r\nconst MyChatItem = ({ message, onClickDelete }) => {\r\n    const db = getFirestore(app);\r\n    const { loginUser } = useContext(UserContext);\r\n    const { id, text, date, uid, uprofile,unickname } = message;\r\n    const [show, setShow] = useState(false);\r\n    const [msg, setMsg] = useState({\r\n        date: date,\r\n        text: text,\r\n        unickname:unickname\r\n    });\r\n\r\n    const handleClose = () => setShow(false);\r\n\r\n    /*     updateDoc을 할 때 update할 message를 read해옴.\r\n        const handleShow = async () => {\r\n            const docRef = doc(db, 'messages', id);\r\n            const docsnap = await getDoc(docRef);\r\n            setMsg({\r\n                ...msg,\r\n                text: docsnap.data().text\r\n            })\r\n            setShow(true);\r\n        } */\r\n\r\n    /*     //수정하기\r\n        const onClickSave = async () => {\r\n            const docRef = doc(db, 'messages', id);\r\n            if (!window.confirm(`내용을 '${msg.text}'로 수정하실래요?`)) return;\r\n            await updateDoc(docRef, msg);\r\n            setMsg(text);\r\n            handleClose();\r\n        } */\r\n\r\n    /*   //텍스트 변경\r\n      const onChange = (e) => {\r\n          setMsg({\r\n              ...msg,\r\n              text: e.target.value\r\n          });\r\n      } */\r\n\r\n    return (\r\n        <>\r\n\r\n            <div>\r\n                <p style={{ fontSize: 20 }}>{unickname}</p>\r\n                {loginUser.uid !== uid && <img className='icon' src={uprofile} />}\r\n                <p className='date'>{date}</p>\r\n            </div>\r\n            <div className=\"textbox\">\r\n                <p style={{ textAlign: 'left' }}>\r\n                    {date > loginUser.notice_read_date && <Badge>new</Badge>}&nbsp;{text}\r\n                </p>\r\n                <Button onClick={() => onClickDelete(id)}>삭제</Button>\r\n                {/*     <Button onClick={handleShow}>수정</Button> */}\r\n            </div>\r\n        \r\n        </>\r\n        /* ************************ 알림 수정을 위한 모달창 *****************************\r\n          <Modal show={show} onHide={handleClose}>\r\n              <Modal.Header closeButton>\r\n                  <Modal.Title>알림내용을 수정합니다.</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                  <Form.Control onChange={onChange} value={msg.text} />\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                  <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\r\n                  <Button variant=\"primary\" onClick={onClickSave}>Save</Button>\r\n              </Modal.Footer>\r\n          </Modal> */\r\n\r\n    )\r\n}\r\n\r\nexport default MyChatItem"],"mappings":";;AAAA,SAASA,GAAG,EAAEC,MAAM,EAAEC,YAAY,EAAEC,SAAS,QAAQ,oBAAoB;AACzE,OAAOC,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SAASC,KAAK,EAAEC,MAAM,EAAEC,IAAI,EAAEC,KAAK,QAAQ,iBAAiB;AAC5D,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,GAAG,QAAQ,cAAc;AAAC;AAAA;AAEnC,MAAMC,UAAU,GAAG,QAAgC;EAAA;EAAA,IAA/B;IAAEC,OAAO;IAAEC;EAAc,CAAC;EAC1C,MAAMC,EAAE,GAAGd,YAAY,CAACU,GAAG,CAAC;EAC5B,MAAM;IAAEK;EAAU,CAAC,GAAGZ,UAAU,CAACM,WAAW,CAAC;EAC7C,MAAM;IAAEO,EAAE;IAAEC,IAAI;IAAEC,IAAI;IAAEC,GAAG;IAAEC,QAAQ;IAACC;EAAU,CAAC,GAAGT,OAAO;EAC3D,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM,CAACoB,GAAG,EAAEC,MAAM,CAAC,GAAGrB,QAAQ,CAAC;IAC3Bc,IAAI,EAAEA,IAAI;IACVD,IAAI,EAAEA,IAAI;IACVI,SAAS,EAACA;EACd,CAAC,CAAC;EAEF,MAAMK,WAAW,GAAG,MAAMH,OAAO,CAAC,KAAK,CAAC;;EAExC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;EAEI;AACJ;AACA;AACA;AACA;AACA;AACA;;EAEI,oBACI;IAAA,wBAEI;MAAA,wBACI;QAAG,KAAK,EAAE;UAAEI,QAAQ,EAAE;QAAG,CAAE;QAAA,UAAEN;MAAS;QAAA;QAAA;QAAA;MAAA,QAAK,EAC1CN,SAAS,CAACI,GAAG,KAAKA,GAAG,iBAAI;QAAK,SAAS,EAAC,MAAM;QAAC,GAAG,EAAEC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG,eACjE;QAAG,SAAS,EAAC,MAAM;QAAA,UAAEF;MAAI;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAC5B,eACN;MAAK,SAAS,EAAC,SAAS;MAAA,wBACpB;QAAG,KAAK,EAAE;UAAEU,SAAS,EAAE;QAAO,CAAE;QAAA,WAC3BV,IAAI,GAAGH,SAAS,CAACc,gBAAgB,iBAAI,QAAC,KAAK;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAY,UAAQZ,IAAI;MAAA;QAAA;QAAA;QAAA;MAAA,QACpE,eACJ,QAAC,MAAM;QAAC,OAAO,EAAE,MAAMJ,aAAa,CAACG,EAAE,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAY;IAAA;MAAA;MAAA;MAAA;IAAA,QAEnD;EAAA;EAGV;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAZQ;AAeR,CAAC;AAAA,GAzEKL,UAAU;AAAA,KAAVA,UAAU;AA2EhB,eAAeA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module"}
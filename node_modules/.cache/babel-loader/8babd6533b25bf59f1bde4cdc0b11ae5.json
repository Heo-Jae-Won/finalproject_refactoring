{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/button/buttonview\n */\n\nimport View from '../view';\nimport IconView from '../icon/iconview';\nimport uid from '@ckeditor/ckeditor5-utils/src/uid';\nimport { getEnvKeystrokeText } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport env from '@ckeditor/ckeditor5-utils/src/env';\nimport '../../theme/components/button/button.css';\n\n/**\n * The button view class.\n *\n *\t\tconst view = new ButtonView();\n *\n *\t\tview.set( {\n *\t\t\tlabel: 'A button',\n *\t\t\tkeystroke: 'Ctrl+B',\n *\t\t\ttooltip: true,\n *\t\t\twithText: true\n *\t\t} );\n *\n *\t\tview.render();\n *\n *\t\tdocument.body.append( view.element );\n *\n * @extends module:ui/view~View\n * @implements module:ui/button/button~Button\n */\nexport default class ButtonView extends View {\n  /**\n   * @inheritDoc\n   */\n  constructor(locale) {\n    super(locale);\n    const bind = this.bindTemplate;\n    const ariaLabelUid = uid();\n\n    // Implement the Button interface.\n    this.set('class');\n    this.set('labelStyle');\n    this.set('icon');\n    this.set('isEnabled', true);\n    this.set('isOn', false);\n    this.set('isVisible', true);\n    this.set('isToggleable', false);\n    this.set('keystroke');\n    this.set('label');\n    this.set('tabindex', -1);\n    this.set('tooltip');\n    this.set('tooltipPosition', 's');\n    this.set('type', 'button');\n    this.set('withText', false);\n    this.set('withKeystroke', false);\n\n    /**\n     * Collection of the child views inside of the button {@link #element}.\n     *\n     * @readonly\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n    this.children = this.createCollection();\n\n    /**\n     * Label of the button view. It is configurable using the {@link #label label attribute}.\n     *\n     * @readonly\n     * @member {module:ui/view~View} #labelView\n     */\n    this.labelView = this._createLabelView(ariaLabelUid);\n\n    /**\n     * The icon view of the button. Will be added to {@link #children} when the\n     * {@link #icon icon attribute} is defined.\n     *\n     * @readonly\n     * @member {module:ui/icon/iconview~IconView} #iconView\n     */\n    this.iconView = new IconView();\n    this.iconView.extendTemplate({\n      attributes: {\n        class: 'ck-button__icon'\n      }\n    });\n\n    /**\n     * A view displaying the keystroke of the button next to the {@link #labelView label}.\n     * Added to {@link #children} when the {@link #withKeystroke `withKeystroke` attribute}\n     * is defined.\n     *\n     * @readonly\n     * @member {module:ui/view/view~View} #keystrokeView\n     */\n    this.keystrokeView = this._createKeystrokeView();\n\n    /**\n     * Tooltip of the button bound to the template.\n     *\n     * @see #tooltip\n     * @see #_getTooltipString\n     * @private\n     * @observable\n     * @member {String|undefined} #_tooltipString\n     */\n    this.bind('_tooltipString').to(this, 'tooltip', this, 'label', this, 'keystroke', this._getTooltipString.bind(this));\n    const template = {\n      tag: 'button',\n      attributes: {\n        class: ['ck', 'ck-button', bind.to('class'), bind.if('isEnabled', 'ck-disabled', value => !value), bind.if('isVisible', 'ck-hidden', value => !value), bind.to('isOn', value => value ? 'ck-on' : 'ck-off'), bind.if('withText', 'ck-button_with-text'), bind.if('withKeystroke', 'ck-button_with-keystroke')],\n        type: bind.to('type', value => value ? value : 'button'),\n        tabindex: bind.to('tabindex'),\n        'aria-labelledby': `ck-editor__aria-label_${ariaLabelUid}`,\n        'aria-disabled': bind.if('isEnabled', true, value => !value),\n        'aria-pressed': bind.to('isOn', value => this.isToggleable ? String(!!value) : false),\n        'data-cke-tooltip-text': bind.to('_tooltipString'),\n        'data-cke-tooltip-position': bind.to('tooltipPosition')\n      },\n      children: this.children,\n      on: {\n        click: bind.to(evt => {\n          // We can't make the button disabled using the disabled attribute, because it won't be focusable.\n          // Though, shouldn't this condition be moved to the button controller?\n          if (this.isEnabled) {\n            this.fire('execute');\n          } else {\n            // Prevent the default when button is disabled, to block e.g.\n            // automatic form submitting. See ckeditor/ckeditor5-link#74.\n            evt.preventDefault();\n          }\n        })\n      }\n    };\n\n    // On Safari we have to force the focus on a button on click as it's the only browser\n    // that doesn't do that automatically. See #12115.\n    if (env.isSafari) {\n      template.on.mousedown = bind.to(evt => {\n        this.focus();\n        evt.preventDefault();\n      });\n    }\n    this.setTemplate(template);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  render() {\n    super.render();\n    if (this.icon) {\n      this.iconView.bind('content').to(this, 'icon');\n      this.children.add(this.iconView);\n    }\n    this.children.add(this.labelView);\n    if (this.withKeystroke && this.keystroke) {\n      this.children.add(this.keystrokeView);\n    }\n  }\n\n  /**\n   * Focuses the {@link #element} of the button.\n   */\n  focus() {\n    this.element.focus();\n  }\n\n  /**\n   * Creates a label view instance and binds it with button attributes.\n   *\n   * @private\n   * @param {String} ariaLabelUid The aria label UID.\n   * @returns {module:ui/view~View}\n   */\n  _createLabelView(ariaLabelUid) {\n    const labelView = new View();\n    const bind = this.bindTemplate;\n    labelView.setTemplate({\n      tag: 'span',\n      attributes: {\n        class: ['ck', 'ck-button__label'],\n        style: bind.to('labelStyle'),\n        id: `ck-editor__aria-label_${ariaLabelUid}`\n      },\n      children: [{\n        text: this.bindTemplate.to('label')\n      }]\n    });\n    return labelView;\n  }\n\n  /**\n   * Creates a view that displays a keystroke next to a {@link #labelView label }\n   * and binds it with button attributes.\n   *\n   * @private\n   * @returns {module:ui/view~View}\n   */\n  _createKeystrokeView() {\n    const keystrokeView = new View();\n    keystrokeView.setTemplate({\n      tag: 'span',\n      attributes: {\n        class: ['ck', 'ck-button__keystroke']\n      },\n      children: [{\n        text: this.bindTemplate.to('keystroke', text => getEnvKeystrokeText(text))\n      }]\n    });\n    return keystrokeView;\n  }\n\n  /**\n   * Gets the text for the tooltip from the combination of\n   * {@link #tooltip}, {@link #label} and {@link #keystroke} attributes.\n   *\n   * @private\n   * @see #tooltip\n   * @see #_tooltipString\n   * @param {Boolean|String|Function} tooltip Button tooltip.\n   * @param {String} label Button label.\n   * @param {String} keystroke Button keystroke.\n   * @returns {String}\n   */\n  _getTooltipString(tooltip, label, keystroke) {\n    if (tooltip) {\n      if (typeof tooltip == 'string') {\n        return tooltip;\n      } else {\n        if (keystroke) {\n          keystroke = getEnvKeystrokeText(keystroke);\n        }\n        if (tooltip instanceof Function) {\n          return tooltip(label, keystroke);\n        } else {\n          return `${label}${keystroke ? ` (${keystroke})` : ''}`;\n        }\n      }\n    }\n    return '';\n  }\n}","map":{"version":3,"names":["View","IconView","uid","getEnvKeystrokeText","env","ButtonView","constructor","locale","bind","bindTemplate","ariaLabelUid","set","children","createCollection","labelView","_createLabelView","iconView","extendTemplate","attributes","class","keystrokeView","_createKeystrokeView","to","_getTooltipString","template","tag","if","value","type","tabindex","isToggleable","String","on","click","evt","isEnabled","fire","preventDefault","isSafari","mousedown","focus","setTemplate","render","icon","add","withKeystroke","keystroke","element","style","id","text","tooltip","label","Function"],"sources":["C:/data/project/realproject/node_modules/@ckeditor/ckeditor5-ui/src/button/buttonview.js"],"sourcesContent":["/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/button/buttonview\n */\n\nimport View from '../view';\nimport IconView from '../icon/iconview';\n\nimport uid from '@ckeditor/ckeditor5-utils/src/uid';\nimport { getEnvKeystrokeText } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport env from '@ckeditor/ckeditor5-utils/src/env';\n\nimport '../../theme/components/button/button.css';\n\n/**\n * The button view class.\n *\n *\t\tconst view = new ButtonView();\n *\n *\t\tview.set( {\n *\t\t\tlabel: 'A button',\n *\t\t\tkeystroke: 'Ctrl+B',\n *\t\t\ttooltip: true,\n *\t\t\twithText: true\n *\t\t} );\n *\n *\t\tview.render();\n *\n *\t\tdocument.body.append( view.element );\n *\n * @extends module:ui/view~View\n * @implements module:ui/button/button~Button\n */\nexport default class ButtonView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\t\tconst ariaLabelUid = uid();\n\n\t\t// Implement the Button interface.\n\t\tthis.set( 'class' );\n\t\tthis.set( 'labelStyle' );\n\t\tthis.set( 'icon' );\n\t\tthis.set( 'isEnabled', true );\n\t\tthis.set( 'isOn', false );\n\t\tthis.set( 'isVisible', true );\n\t\tthis.set( 'isToggleable', false );\n\t\tthis.set( 'keystroke' );\n\t\tthis.set( 'label' );\n\t\tthis.set( 'tabindex', -1 );\n\t\tthis.set( 'tooltip' );\n\t\tthis.set( 'tooltipPosition', 's' );\n\t\tthis.set( 'type', 'button' );\n\t\tthis.set( 'withText', false );\n\t\tthis.set( 'withKeystroke', false );\n\n\t\t/**\n\t\t * Collection of the child views inside of the button {@link #element}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.children = this.createCollection();\n\n\t\t/**\n\t\t * Label of the button view. It is configurable using the {@link #label label attribute}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/view~View} #labelView\n\t\t */\n\t\tthis.labelView = this._createLabelView( ariaLabelUid );\n\n\t\t/**\n\t\t * The icon view of the button. Will be added to {@link #children} when the\n\t\t * {@link #icon icon attribute} is defined.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/icon/iconview~IconView} #iconView\n\t\t */\n\t\tthis.iconView = new IconView();\n\n\t\tthis.iconView.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck-button__icon'\n\t\t\t}\n\t\t} );\n\n\t\t/**\n\t\t * A view displaying the keystroke of the button next to the {@link #labelView label}.\n\t\t * Added to {@link #children} when the {@link #withKeystroke `withKeystroke` attribute}\n\t\t * is defined.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/view/view~View} #keystrokeView\n\t\t */\n\t\tthis.keystrokeView = this._createKeystrokeView();\n\n\t\t/**\n\t\t * Tooltip of the button bound to the template.\n\t\t *\n\t\t * @see #tooltip\n\t\t * @see #_getTooltipString\n\t\t * @private\n\t\t * @observable\n\t\t * @member {String|undefined} #_tooltipString\n\t\t */\n\t\tthis.bind( '_tooltipString' ).to(\n\t\t\tthis, 'tooltip',\n\t\t\tthis, 'label',\n\t\t\tthis, 'keystroke',\n\t\t\tthis._getTooltipString.bind( this )\n\t\t);\n\n\t\tconst template = {\n\t\t\ttag: 'button',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-button',\n\t\t\t\t\tbind.to( 'class' ),\n\t\t\t\t\tbind.if( 'isEnabled', 'ck-disabled', value => !value ),\n\t\t\t\t\tbind.if( 'isVisible', 'ck-hidden', value => !value ),\n\t\t\t\t\tbind.to( 'isOn', value => value ? 'ck-on' : 'ck-off' ),\n\t\t\t\t\tbind.if( 'withText', 'ck-button_with-text' ),\n\t\t\t\t\tbind.if( 'withKeystroke', 'ck-button_with-keystroke' )\n\t\t\t\t],\n\t\t\t\ttype: bind.to( 'type', value => value ? value : 'button' ),\n\t\t\t\ttabindex: bind.to( 'tabindex' ),\n\t\t\t\t'aria-labelledby': `ck-editor__aria-label_${ ariaLabelUid }`,\n\t\t\t\t'aria-disabled': bind.if( 'isEnabled', true, value => !value ),\n\t\t\t\t'aria-pressed': bind.to( 'isOn', value => this.isToggleable ? String( !!value ) : false ),\n\t\t\t\t'data-cke-tooltip-text': bind.to( '_tooltipString' ),\n\t\t\t\t'data-cke-tooltip-position': bind.to( 'tooltipPosition' )\n\t\t\t},\n\n\t\t\tchildren: this.children,\n\n\t\t\ton: {\n\t\t\t\tclick: bind.to( evt => {\n\t\t\t\t\t// We can't make the button disabled using the disabled attribute, because it won't be focusable.\n\t\t\t\t\t// Though, shouldn't this condition be moved to the button controller?\n\t\t\t\t\tif ( this.isEnabled ) {\n\t\t\t\t\t\tthis.fire( 'execute' );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Prevent the default when button is disabled, to block e.g.\n\t\t\t\t\t\t// automatic form submitting. See ckeditor/ckeditor5-link#74.\n\t\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t}\n\t\t};\n\n\t\t// On Safari we have to force the focus on a button on click as it's the only browser\n\t\t// that doesn't do that automatically. See #12115.\n\t\tif ( env.isSafari ) {\n\t\t\ttemplate.on.mousedown = bind.to( evt => {\n\t\t\t\tthis.focus();\n\t\t\t\tevt.preventDefault();\n\t\t\t} );\n\t\t}\n\n\t\tthis.setTemplate( template );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tif ( this.icon ) {\n\t\t\tthis.iconView.bind( 'content' ).to( this, 'icon' );\n\t\t\tthis.children.add( this.iconView );\n\t\t}\n\n\t\tthis.children.add( this.labelView );\n\n\t\tif ( this.withKeystroke && this.keystroke ) {\n\t\t\tthis.children.add( this.keystrokeView );\n\t\t}\n\t}\n\n\t/**\n\t * Focuses the {@link #element} of the button.\n\t */\n\tfocus() {\n\t\tthis.element.focus();\n\t}\n\n\t/**\n\t * Creates a label view instance and binds it with button attributes.\n\t *\n\t * @private\n\t * @param {String} ariaLabelUid The aria label UID.\n\t * @returns {module:ui/view~View}\n\t */\n\t_createLabelView( ariaLabelUid ) {\n\t\tconst labelView = new View();\n\t\tconst bind = this.bindTemplate;\n\n\t\tlabelView.setTemplate( {\n\t\t\ttag: 'span',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-button__label'\n\t\t\t\t],\n\t\t\t\tstyle: bind.to( 'labelStyle' ),\n\t\t\t\tid: `ck-editor__aria-label_${ ariaLabelUid }`\n\t\t\t},\n\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttext: this.bindTemplate.to( 'label' )\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\n\t\treturn labelView;\n\t}\n\n\t/**\n\t * Creates a view that displays a keystroke next to a {@link #labelView label }\n\t * and binds it with button attributes.\n\t *\n\t * @private\n\t * @returns {module:ui/view~View}\n\t */\n\t_createKeystrokeView() {\n\t\tconst keystrokeView = new View();\n\n\t\tkeystrokeView.setTemplate( {\n\t\t\ttag: 'span',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-button__keystroke'\n\t\t\t\t]\n\t\t\t},\n\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttext: this.bindTemplate.to( 'keystroke', text => getEnvKeystrokeText( text ) )\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\n\t\treturn keystrokeView;\n\t}\n\n\t/**\n\t * Gets the text for the tooltip from the combination of\n\t * {@link #tooltip}, {@link #label} and {@link #keystroke} attributes.\n\t *\n\t * @private\n\t * @see #tooltip\n\t * @see #_tooltipString\n\t * @param {Boolean|String|Function} tooltip Button tooltip.\n\t * @param {String} label Button label.\n\t * @param {String} keystroke Button keystroke.\n\t * @returns {String}\n\t */\n\t_getTooltipString( tooltip, label, keystroke ) {\n\t\tif ( tooltip ) {\n\t\t\tif ( typeof tooltip == 'string' ) {\n\t\t\t\treturn tooltip;\n\t\t\t} else {\n\t\t\t\tif ( keystroke ) {\n\t\t\t\t\tkeystroke = getEnvKeystrokeText( keystroke );\n\t\t\t\t}\n\n\t\t\t\tif ( tooltip instanceof Function ) {\n\t\t\t\t\treturn tooltip( label, keystroke );\n\t\t\t\t} else {\n\t\t\t\t\treturn `${ label }${ keystroke ? ` (${ keystroke })` : '' }`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn '';\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/editableui/inline/inlineeditableuiview\n */\n\nimport EditableUIView from '../../editableui/editableuiview';\n\n/**\n * The inline editable UI class implementing an inline {@link module:ui/editableui/editableuiview~EditableUIView}.\n *\n * @extends module:ui/editableui/editableuiview~EditableUIView\n */\nexport default class InlineEditableUIView extends EditableUIView {\n  /**\n   * Creates an instance of the InlineEditableUIView class.\n   *\n   * @param {module:utils/locale~Locale} [locale] The locale instance.\n   * @param {module:engine/view/view~View} editingView The editing view instance the editable is related to.\n   * @param {HTMLElement} [editableElement] The editable element. If not specified, the\n   * {@link module:ui/editableui/editableuiview~EditableUIView}\n   * will create it. Otherwise, the existing element will be used.\n   * @param {Object} [options] Additional configuration of the view.\n   * @param {Function} [options.label] A function that gets called with the instance of this view as an argument\n   * and should return a string that represents the label of the editable for assistive technologies. If not provided,\n   * a default label generator is used.\n   */\n  constructor(locale, editingView, editableElement) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    super(locale, editingView, editableElement);\n    const t = locale.t;\n    this.extendTemplate({\n      attributes: {\n        role: 'textbox',\n        class: 'ck-editor__editable_inline'\n      }\n    });\n\n    /**\n     * A function that gets called with the instance of this view as an argument and should return a string that\n     * represents the label of the editable for assistive technologies.\n     *\n     * @private\n     * @readonly\n     * @param {Function}\n     */\n    this._generateLabel = options.label || (() => t('Editor editing area: %0', this.name));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  render() {\n    super.render();\n    const editingView = this._editingView;\n    editingView.change(writer => {\n      const viewRoot = editingView.document.getRoot(this.name);\n      writer.setAttribute('aria-label', this._generateLabel(this), viewRoot);\n    });\n  }\n}","map":{"version":3,"names":["EditableUIView","InlineEditableUIView","constructor","locale","editingView","editableElement","options","t","extendTemplate","attributes","role","class","_generateLabel","label","name","render","_editingView","change","writer","viewRoot","document","getRoot","setAttribute"],"sources":["C:/data/project/realproject/node_modules/@ckeditor/ckeditor5-ui/src/editableui/inline/inlineeditableuiview.js"],"sourcesContent":["/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/editableui/inline/inlineeditableuiview\n */\n\nimport EditableUIView from '../../editableui/editableuiview';\n\n/**\n * The inline editable UI class implementing an inline {@link module:ui/editableui/editableuiview~EditableUIView}.\n *\n * @extends module:ui/editableui/editableuiview~EditableUIView\n */\nexport default class InlineEditableUIView extends EditableUIView {\n\t/**\n\t * Creates an instance of the InlineEditableUIView class.\n\t *\n\t * @param {module:utils/locale~Locale} [locale] The locale instance.\n\t * @param {module:engine/view/view~View} editingView The editing view instance the editable is related to.\n\t * @param {HTMLElement} [editableElement] The editable element. If not specified, the\n\t * {@link module:ui/editableui/editableuiview~EditableUIView}\n\t * will create it. Otherwise, the existing element will be used.\n\t * @param {Object} [options] Additional configuration of the view.\n\t * @param {Function} [options.label] A function that gets called with the instance of this view as an argument\n\t * and should return a string that represents the label of the editable for assistive technologies. If not provided,\n\t * a default label generator is used.\n\t */\n\tconstructor( locale, editingView, editableElement, options = {} ) {\n\t\tsuper( locale, editingView, editableElement );\n\n\t\tconst t = locale.t;\n\n\t\tthis.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\trole: 'textbox',\n\t\t\t\tclass: 'ck-editor__editable_inline'\n\t\t\t}\n\t\t} );\n\n\t\t/**\n\t\t * A function that gets called with the instance of this view as an argument and should return a string that\n\t\t * represents the label of the editable for assistive technologies.\n\t\t *\n\t\t * @private\n\t\t * @readonly\n\t\t * @param {Function}\n\t\t */\n\t\tthis._generateLabel = options.label || ( () => t( 'Editor editing area: %0', this.name ) );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tconst editingView = this._editingView;\n\n\t\teditingView.change( writer => {\n\t\t\tconst viewRoot = editingView.document.getRoot( this.name );\n\n\t\t\twriter.setAttribute( 'aria-label', this._generateLabel( this ), viewRoot );\n\t\t} );\n\t}\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,OAAOA,cAAc,MAAM,iCAAiC;;AAE5D;AACA;AACA;AACA;AACA;AACA,eAAe,MAAMC,oBAAoB,SAASD,cAAc,CAAC;EAChE;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCE,WAAW,CAAEC,MAAM,EAAEC,WAAW,EAAEC,eAAe,EAAiB;IAAA,IAAfC,OAAO,uEAAG,CAAC,CAAC;IAC9D,KAAK,CAAEH,MAAM,EAAEC,WAAW,EAAEC,eAAe,CAAE;IAE7C,MAAME,CAAC,GAAGJ,MAAM,CAACI,CAAC;IAElB,IAAI,CAACC,cAAc,CAAE;MACpBC,UAAU,EAAE;QACXC,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE;MACR;IACD,CAAC,CAAE;;IAEH;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,cAAc,GAAGN,OAAO,CAACO,KAAK,KAAM,MAAMN,CAAC,CAAE,yBAAyB,EAAE,IAAI,CAACO,IAAI,CAAE,CAAE;EAC3F;;EAEA;AACD;AACA;EACCC,MAAM,GAAG;IACR,KAAK,CAACA,MAAM,EAAE;IAEd,MAAMX,WAAW,GAAG,IAAI,CAACY,YAAY;IAErCZ,WAAW,CAACa,MAAM,CAAEC,MAAM,IAAI;MAC7B,MAAMC,QAAQ,GAAGf,WAAW,CAACgB,QAAQ,CAACC,OAAO,CAAE,IAAI,CAACP,IAAI,CAAE;MAE1DI,MAAM,CAACI,YAAY,CAAE,YAAY,EAAE,IAAI,CAACV,cAAc,CAAE,IAAI,CAAE,EAAEO,QAAQ,CAAE;IAC3E,CAAC,CAAE;EACJ;AACD"},"metadata":{},"sourceType":"module"}
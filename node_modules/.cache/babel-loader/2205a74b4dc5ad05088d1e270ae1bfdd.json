{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/* globals navigator:false */\n/**\n * @module utils/env\n */\n/**\n * Safely returns `userAgent` from browser's navigator API in a lower case.\n * If navigator API is not available it will return an empty string.\n *\n * @returns {String}\n */\nexport function getUserAgent() {\n  // In some environments navigator API might not be available.\n  try {\n    return navigator.userAgent.toLowerCase();\n  } catch (e) {\n    return '';\n  }\n}\nconst userAgent = getUserAgent();\n/**\n * A namespace containing environment and browser information.\n *\n * @namespace\n */\nconst env = {\n  /**\n   * Indicates that the application is running on Macintosh.\n   *\n   * @static\n   * @type {Boolean}\n   */\n  isMac: isMac(userAgent),\n  /**\n   * Indicates that the application is running on Windows.\n   *\n   * @static\n   * @type {Boolean}\n   */\n  isWindows: isWindows(userAgent),\n  /**\n   * Indicates that the application is running in Firefox (Gecko).\n   *\n   * @static\n   * @type {Boolean}\n   */\n  isGecko: isGecko(userAgent),\n  /**\n   * Indicates that the application is running in Safari.\n   *\n   * @static\n   * @type {Boolean}\n   */\n  isSafari: isSafari(userAgent),\n  /**\n   * Indicates the the application is running in iOS.\n   *\n   * @static\n   * @type {Boolean}\n   */\n  isiOS: isiOS(userAgent),\n  /**\n   * Indicates that the application is running on Android mobile device.\n   *\n   * @static\n   * @type {Boolean}\n   */\n  isAndroid: isAndroid(userAgent),\n  /**\n   * Indicates that the application is running in a browser using the Blink engine.\n   *\n   * @static\n   * @type {Boolean}\n   */\n  isBlink: isBlink(userAgent),\n  /**\n   * Environment features information.\n   *\n   * @memberOf module:utils/env~env\n   * @namespace\n   */\n  features: {\n    /**\n     * Indicates that the environment supports ES2018 Unicode property escapes — like `\\p{P}` or `\\p{L}`.\n     * More information about unicode properties might be found\n     * [in Unicode Standard Annex #44](https://www.unicode.org/reports/tr44/#GC_Values_Table).\n     *\n     * @type {Boolean}\n     */\n    isRegExpUnicodePropertySupported: isRegExpUnicodePropertySupported()\n  }\n};\nexport default env;\n/**\n * Checks if User Agent represented by the string is running on Macintosh.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is running on Macintosh or not.\n */\nexport function isMac(userAgent) {\n  return userAgent.indexOf('macintosh') > -1;\n}\n/**\n * Checks if User Agent represented by the string is running on Windows.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is running on Windows or not.\n */\nexport function isWindows(userAgent) {\n  return userAgent.indexOf('windows') > -1;\n}\n/**\n * Checks if User Agent represented by the string is Firefox (Gecko).\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is Firefox or not.\n */\nexport function isGecko(userAgent) {\n  return !!userAgent.match(/gecko\\/\\d+/);\n}\n/**\n * Checks if User Agent represented by the string is Safari.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is Safari or not.\n */\nexport function isSafari(userAgent) {\n  return userAgent.indexOf(' applewebkit/') > -1 && userAgent.indexOf('chrome') === -1;\n}\n/**\n * Checks if User Agent represented by the string is running in iOS.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is running in iOS or not.\n */\nexport function isiOS(userAgent) {\n  // \"Request mobile site\" || \"Request desktop site\".\n  return !!userAgent.match(/iphone|ipad/i) || isMac(userAgent) && navigator.maxTouchPoints > 0;\n}\n/**\n * Checks if User Agent represented by the string is Android mobile device.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is Safari or not.\n */\nexport function isAndroid(userAgent) {\n  return userAgent.indexOf('android') > -1;\n}\n/**\n * Checks if User Agent represented by the string is Blink engine.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is Blink engine or not.\n */\nexport function isBlink(userAgent) {\n  // The Edge browser before switching to the Blink engine used to report itself as Chrome (and \"Edge/\")\n  // but after switching to the Blink it replaced \"Edge/\" with \"Edg/\".\n  return userAgent.indexOf('chrome/') > -1 && userAgent.indexOf('edge/') < 0;\n}\n/**\n * Checks if the current environment supports ES2018 Unicode properties like `\\p{P}` or `\\p{L}`.\n * More information about unicode properties might be found\n * [in Unicode Standard Annex #44](https://www.unicode.org/reports/tr44/#GC_Values_Table).\n *\n * @returns {Boolean}\n */\nexport function isRegExpUnicodePropertySupported() {\n  let isSupported = false;\n  // Feature detection for Unicode properties. Added in ES2018. Currently Firefox does not support it.\n  // See https://github.com/ckeditor/ckeditor5-mention/issues/44#issuecomment-487002174.\n  try {\n    // Usage of regular expression literal cause error during build (ckeditor/ckeditor5-dev#534).\n    isSupported = 'ć'.search(new RegExp('[\\\\p{L}]', 'u')) === 0;\n  } catch (error) {\n    // Firefox throws a SyntaxError when the group is unsupported.\n  }\n  return isSupported;\n}","map":{"version":3,"names":["getUserAgent","navigator","userAgent","toLowerCase","e","env","isMac","isWindows","isGecko","isSafari","isiOS","isAndroid","isBlink","features","isRegExpUnicodePropertySupported","indexOf","match","maxTouchPoints","isSupported","search","RegExp","error"],"sources":["C:/data/project/realproject/node_modules/@ckeditor/ckeditor5-utils/src/env.js"],"sourcesContent":["/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/* globals navigator:false */\n/**\n * @module utils/env\n */\n/**\n * Safely returns `userAgent` from browser's navigator API in a lower case.\n * If navigator API is not available it will return an empty string.\n *\n * @returns {String}\n */\nexport function getUserAgent() {\n    // In some environments navigator API might not be available.\n    try {\n        return navigator.userAgent.toLowerCase();\n    }\n    catch (e) {\n        return '';\n    }\n}\nconst userAgent = getUserAgent();\n/**\n * A namespace containing environment and browser information.\n *\n * @namespace\n */\nconst env = {\n    /**\n     * Indicates that the application is running on Macintosh.\n     *\n     * @static\n     * @type {Boolean}\n     */\n    isMac: isMac(userAgent),\n    /**\n     * Indicates that the application is running on Windows.\n     *\n     * @static\n     * @type {Boolean}\n     */\n    isWindows: isWindows(userAgent),\n    /**\n     * Indicates that the application is running in Firefox (Gecko).\n     *\n     * @static\n     * @type {Boolean}\n     */\n    isGecko: isGecko(userAgent),\n    /**\n     * Indicates that the application is running in Safari.\n     *\n     * @static\n     * @type {Boolean}\n     */\n    isSafari: isSafari(userAgent),\n    /**\n     * Indicates the the application is running in iOS.\n     *\n     * @static\n     * @type {Boolean}\n     */\n    isiOS: isiOS(userAgent),\n    /**\n     * Indicates that the application is running on Android mobile device.\n     *\n     * @static\n     * @type {Boolean}\n     */\n    isAndroid: isAndroid(userAgent),\n    /**\n     * Indicates that the application is running in a browser using the Blink engine.\n     *\n     * @static\n     * @type {Boolean}\n     */\n    isBlink: isBlink(userAgent),\n    /**\n     * Environment features information.\n     *\n     * @memberOf module:utils/env~env\n     * @namespace\n     */\n    features: {\n        /**\n         * Indicates that the environment supports ES2018 Unicode property escapes — like `\\p{P}` or `\\p{L}`.\n         * More information about unicode properties might be found\n         * [in Unicode Standard Annex #44](https://www.unicode.org/reports/tr44/#GC_Values_Table).\n         *\n         * @type {Boolean}\n         */\n        isRegExpUnicodePropertySupported: isRegExpUnicodePropertySupported()\n    }\n};\nexport default env;\n/**\n * Checks if User Agent represented by the string is running on Macintosh.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is running on Macintosh or not.\n */\nexport function isMac(userAgent) {\n    return userAgent.indexOf('macintosh') > -1;\n}\n/**\n * Checks if User Agent represented by the string is running on Windows.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is running on Windows or not.\n */\nexport function isWindows(userAgent) {\n    return userAgent.indexOf('windows') > -1;\n}\n/**\n * Checks if User Agent represented by the string is Firefox (Gecko).\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is Firefox or not.\n */\nexport function isGecko(userAgent) {\n    return !!userAgent.match(/gecko\\/\\d+/);\n}\n/**\n * Checks if User Agent represented by the string is Safari.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is Safari or not.\n */\nexport function isSafari(userAgent) {\n    return userAgent.indexOf(' applewebkit/') > -1 && userAgent.indexOf('chrome') === -1;\n}\n/**\n * Checks if User Agent represented by the string is running in iOS.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is running in iOS or not.\n */\nexport function isiOS(userAgent) {\n    // \"Request mobile site\" || \"Request desktop site\".\n    return !!userAgent.match(/iphone|ipad/i) || (isMac(userAgent) && navigator.maxTouchPoints > 0);\n}\n/**\n * Checks if User Agent represented by the string is Android mobile device.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is Safari or not.\n */\nexport function isAndroid(userAgent) {\n    return userAgent.indexOf('android') > -1;\n}\n/**\n * Checks if User Agent represented by the string is Blink engine.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is Blink engine or not.\n */\nexport function isBlink(userAgent) {\n    // The Edge browser before switching to the Blink engine used to report itself as Chrome (and \"Edge/\")\n    // but after switching to the Blink it replaced \"Edge/\" with \"Edg/\".\n    return userAgent.indexOf('chrome/') > -1 && userAgent.indexOf('edge/') < 0;\n}\n/**\n * Checks if the current environment supports ES2018 Unicode properties like `\\p{P}` or `\\p{L}`.\n * More information about unicode properties might be found\n * [in Unicode Standard Annex #44](https://www.unicode.org/reports/tr44/#GC_Values_Table).\n *\n * @returns {Boolean}\n */\nexport function isRegExpUnicodePropertySupported() {\n    let isSupported = false;\n    // Feature detection for Unicode properties. Added in ES2018. Currently Firefox does not support it.\n    // See https://github.com/ckeditor/ckeditor5-mention/issues/44#issuecomment-487002174.\n    try {\n        // Usage of regular expression literal cause error during build (ckeditor/ckeditor5-dev#534).\n        isSupported = 'ć'.search(new RegExp('[\\\\p{L}]', 'u')) === 0;\n    }\n    catch (error) {\n        // Firefox throws a SyntaxError when the group is unsupported.\n    }\n    return isSupported;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\nimport { getShorthandValues, isAttachment, isColor, isPosition, isRepeat, isURL } from './utils';\n/**\n * Adds a background CSS styles processing rules.\n *\n *\t\teditor.data.addStyleProcessorRules( addBackgroundRules );\n *\n * The normalized value is stored as:\n *\n *\t\tconst styles = {\n *\t\t\tbackground: {\n *\t\t\t\tcolor,\n *\t\t\t\trepeat,\n *\t\t\t\tposition,\n *\t\t\t\tattachment,\n *\t\t\t\timage\n *\t\t\t}\n *\t\t};\n *\n * **Note**: Currently only `'background-color'` longhand value is parsed besides `'background'` shorthand. The reducer also supports only\n * `'background-color'` value.\n *\n * @param {module:engine/view/stylesmap~StylesProcessor} stylesProcessor\n */\nexport function addBackgroundRules(stylesProcessor) {\n  stylesProcessor.setNormalizer('background', getBackgroundNormalizer());\n  stylesProcessor.setNormalizer('background-color', getBackgroundColorNormalizer());\n  stylesProcessor.setReducer('background', getBackgroundReducer());\n  stylesProcessor.setStyleRelation('background', ['background-color']);\n}\nfunction getBackgroundNormalizer() {\n  return value => {\n    const background = {};\n    const parts = getShorthandValues(value);\n    for (const part of parts) {\n      if (isRepeat(part)) {\n        background.repeat = background.repeat || [];\n        background.repeat.push(part);\n      } else if (isPosition(part)) {\n        background.position = background.position || [];\n        background.position.push(part);\n      } else if (isAttachment(part)) {\n        background.attachment = part;\n      } else if (isColor(part)) {\n        background.color = part;\n      } else if (isURL(part)) {\n        background.image = part;\n      }\n    }\n    return {\n      path: 'background',\n      value: background\n    };\n  };\n}\nfunction getBackgroundColorNormalizer() {\n  return value => ({\n    path: 'background.color',\n    value\n  });\n}\nfunction getBackgroundReducer() {\n  return value => {\n    const ret = [];\n    ret.push(['background-color', value.color]);\n    return ret;\n  };\n}","map":{"version":3,"names":["getShorthandValues","isAttachment","isColor","isPosition","isRepeat","isURL","addBackgroundRules","stylesProcessor","setNormalizer","getBackgroundNormalizer","getBackgroundColorNormalizer","setReducer","getBackgroundReducer","setStyleRelation","value","background","parts","part","repeat","push","position","attachment","color","image","path","ret"],"sources":["C:/data/project/realproject/node_modules/@ckeditor/ckeditor5-engine/src/view/styles/background.js"],"sourcesContent":["/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\nimport { getShorthandValues, isAttachment, isColor, isPosition, isRepeat, isURL } from './utils';\n/**\n * Adds a background CSS styles processing rules.\n *\n *\t\teditor.data.addStyleProcessorRules( addBackgroundRules );\n *\n * The normalized value is stored as:\n *\n *\t\tconst styles = {\n *\t\t\tbackground: {\n *\t\t\t\tcolor,\n *\t\t\t\trepeat,\n *\t\t\t\tposition,\n *\t\t\t\tattachment,\n *\t\t\t\timage\n *\t\t\t}\n *\t\t};\n *\n * **Note**: Currently only `'background-color'` longhand value is parsed besides `'background'` shorthand. The reducer also supports only\n * `'background-color'` value.\n *\n * @param {module:engine/view/stylesmap~StylesProcessor} stylesProcessor\n */\nexport function addBackgroundRules(stylesProcessor) {\n    stylesProcessor.setNormalizer('background', getBackgroundNormalizer());\n    stylesProcessor.setNormalizer('background-color', getBackgroundColorNormalizer());\n    stylesProcessor.setReducer('background', getBackgroundReducer());\n    stylesProcessor.setStyleRelation('background', ['background-color']);\n}\nfunction getBackgroundNormalizer() {\n    return value => {\n        const background = {};\n        const parts = getShorthandValues(value);\n        for (const part of parts) {\n            if (isRepeat(part)) {\n                background.repeat = background.repeat || [];\n                background.repeat.push(part);\n            }\n            else if (isPosition(part)) {\n                background.position = background.position || [];\n                background.position.push(part);\n            }\n            else if (isAttachment(part)) {\n                background.attachment = part;\n            }\n            else if (isColor(part)) {\n                background.color = part;\n            }\n            else if (isURL(part)) {\n                background.image = part;\n            }\n        }\n        return {\n            path: 'background',\n            value: background\n        };\n    };\n}\nfunction getBackgroundColorNormalizer() {\n    return value => ({ path: 'background.color', value });\n}\nfunction getBackgroundReducer() {\n    return value => {\n        const ret = [];\n        ret.push(['background-color', value.color]);\n        return ret;\n    };\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,kBAAkB,EAAEC,YAAY,EAAEC,OAAO,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,KAAK,QAAQ,SAAS;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,kBAAkB,CAACC,eAAe,EAAE;EAChDA,eAAe,CAACC,aAAa,CAAC,YAAY,EAAEC,uBAAuB,EAAE,CAAC;EACtEF,eAAe,CAACC,aAAa,CAAC,kBAAkB,EAAEE,4BAA4B,EAAE,CAAC;EACjFH,eAAe,CAACI,UAAU,CAAC,YAAY,EAAEC,oBAAoB,EAAE,CAAC;EAChEL,eAAe,CAACM,gBAAgB,CAAC,YAAY,EAAE,CAAC,kBAAkB,CAAC,CAAC;AACxE;AACA,SAASJ,uBAAuB,GAAG;EAC/B,OAAOK,KAAK,IAAI;IACZ,MAAMC,UAAU,GAAG,CAAC,CAAC;IACrB,MAAMC,KAAK,GAAGhB,kBAAkB,CAACc,KAAK,CAAC;IACvC,KAAK,MAAMG,IAAI,IAAID,KAAK,EAAE;MACtB,IAAIZ,QAAQ,CAACa,IAAI,CAAC,EAAE;QAChBF,UAAU,CAACG,MAAM,GAAGH,UAAU,CAACG,MAAM,IAAI,EAAE;QAC3CH,UAAU,CAACG,MAAM,CAACC,IAAI,CAACF,IAAI,CAAC;MAChC,CAAC,MACI,IAAId,UAAU,CAACc,IAAI,CAAC,EAAE;QACvBF,UAAU,CAACK,QAAQ,GAAGL,UAAU,CAACK,QAAQ,IAAI,EAAE;QAC/CL,UAAU,CAACK,QAAQ,CAACD,IAAI,CAACF,IAAI,CAAC;MAClC,CAAC,MACI,IAAIhB,YAAY,CAACgB,IAAI,CAAC,EAAE;QACzBF,UAAU,CAACM,UAAU,GAAGJ,IAAI;MAChC,CAAC,MACI,IAAIf,OAAO,CAACe,IAAI,CAAC,EAAE;QACpBF,UAAU,CAACO,KAAK,GAAGL,IAAI;MAC3B,CAAC,MACI,IAAIZ,KAAK,CAACY,IAAI,CAAC,EAAE;QAClBF,UAAU,CAACQ,KAAK,GAAGN,IAAI;MAC3B;IACJ;IACA,OAAO;MACHO,IAAI,EAAE,YAAY;MAClBV,KAAK,EAAEC;IACX,CAAC;EACL,CAAC;AACL;AACA,SAASL,4BAA4B,GAAG;EACpC,OAAOI,KAAK,KAAK;IAAEU,IAAI,EAAE,kBAAkB;IAAEV;EAAM,CAAC,CAAC;AACzD;AACA,SAASF,oBAAoB,GAAG;EAC5B,OAAOE,KAAK,IAAI;IACZ,MAAMW,GAAG,GAAG,EAAE;IACdA,GAAG,CAACN,IAAI,CAAC,CAAC,kBAAkB,EAAEL,KAAK,CAACQ,KAAK,CAAC,CAAC;IAC3C,OAAOG,GAAG;EACd,CAAC;AACL"},"metadata":{},"sourceType":"module"}
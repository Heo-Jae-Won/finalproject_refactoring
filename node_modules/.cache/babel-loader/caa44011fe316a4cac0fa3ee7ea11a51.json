{"ast":null,"code":"var _jsxFileName = \"C:\\\\data\\\\project\\\\chatting_progress\\\\src\\\\my\\\\MyChatList.jsx\",\n  _s = $RefreshSig$();\nimport { addDoc, collection, deleteDoc, doc, getFirestore, limit, onSnapshot, orderBy, query, where } from 'firebase/firestore';\nimport qs from 'qs';\nimport { default as React, useContext, useEffect, useRef, useState } from 'react';\nimport { Button, Form, Row } from 'react-bootstrap';\nimport { UserContext } from '../context/UserContext';\nimport { app } from '../fireStore';\nimport MyChatItem from './MyChatItem';\nimport './MyChatList.css';\nimport { Line } from \"rc-progress\";\nimport { getStorage, ref as sRef, uploadBytesResumable, getDownloadURL, deleteObject, ref } from \"firebase/storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyChatList = _ref => {\n  _s();\n  let {\n    location,\n    history\n  } = _ref;\n  const db = getFirestore(app);\n  const storage = getStorage();\n  const search = qs.parse(location.search, {\n    ignoreQueryPrefix: true\n  });\n  const pwriter_id = search.pwriter_id;\n  const pcode = search.pcode;\n  const [Message, setMessage] = useState('');\n  const [messageList, setMessageList] = useState([]);\n  const [chatId, setChatId] = useState('unde');\n  const {\n    loginUser\n  } = useContext(UserContext);\n  const [file, setFile] = useState(\"\");\n  const [previewURL, setPreviewURL] = useState(\"\");\n  const [preview, setPreview] = useState(null);\n  const fileRef = useRef();\n  useEffect(() => {\n    if (file !== \"\") {\n      setPreview( /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"img_preview\",\n        src: previewURL,\n        alt: \"previewImage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this));\n    }\n    return () => {};\n  }, [file, previewURL]);\n  const handleFileOnChange = event => {\n    event.preventDefault();\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      setFile(file);\n      setPreviewURL(reader.result);\n      saveToFirebaseStorage(file);\n    };\n    if (file) reader.readAsDataURL(file);\n  };\n  const handleFileButtonClick = e => {\n    e.preventDefault();\n    fileRef.current.click();\n  };\n\n  // 여기가 upload 함수입니다.\n  const saveToFirebaseStorage = file => {\n    const uniqueKey = new Date().getTime();\n    const newName = file.name.replace(/[~`!#$%^&*+=\\-[\\]\\\\';,/{}()|\\\\\":<>?]/g, \"\").split(\" \").join(\"\");\n    const metaData = {\n      contentType: file.type\n    };\n    const storageRef = sRef(storage, \"Images/\" + newName + uniqueKey);\n    const UploadTask = uploadBytesResumable(storageRef, file, metaData);\n    UploadTask.on(\"state_changed\", snapshot => {\n      const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      console.log(`Upload is ${progress}% done`);\n    }, error => {\n      alert(`error: image upload error ${JSON.stringify(error)}`);\n    }, () => {\n      getDownloadURL(UploadTask.snapshot.ref).then(downloadUrl => {\n        console.log(`완료 url: ${downloadUrl}`);\n      });\n    });\n  };\n\n  // 여기가 delete 코드입니다.\n  const deleteFile = () => {\n    const desertRef = sRef(storage, \"Images/파일이름을넣어주세요\");\n    deleteObject(desertRef).then(() => {\n      console.log(`delete success`);\n    }).catch(error => {\n      console.log(`delete ${error}`);\n    });\n  };\n  const getRoomList = () => {\n    const q = query(collection(db, `chatroom`), where('who', 'array-contains', sessionStorage.getItem('uid')), limit(100));\n\n    //chatroom fetch\n    onSnapshot(q, snapshot => {\n      snapshot.forEach(doc => {\n        const li = document.createElement('li');\n        li.className = 'list-group-item';\n        li.innerHTML = `\n                <h6>${sessionStorage.getItem('uid') === doc.data().who[0] ? doc.data().who[1] : doc.data().who[0]}</h6>\n                        <p class='text-small'>${doc.id}</p>\n                `;\n\n        //same chatId onclick ㅡ> duplicate x\n        if (doc.id !== chatId && chatId.includes('unde')) {\n          document.getElementsByClassName('list-group chat-list')[0].append(li);\n        }\n      });\n      for (let i = 0; i < document.getElementsByClassName('list-group-item').length; ++i) {\n        document.getElementsByClassName('list-group-item')[i].addEventListener(\"click\", function (e) {\n          setChatId(document.getElementsByClassName(\"text-small\")[i].innerHTML);\n        });\n      }\n      //if no chatroom\n      const li = document.createElement('div');\n      li.innerHTML = `\n            <h1 class='no-chatroom'>개설된 채팅방이 없습니다</h1>`;\n\n      //no chatId ㅡ>  guidance\n      if (!document.querySelector(\".list-group-item\")) document.getElementsByClassName('row')[0].append(li);\n    });\n  };\n\n  //Doc element를 최초 생성\n  const sendMessage = async e => {\n    if (e.keyCode === 13) {\n      if (Message === '') {\n        alert('보낼 내용을 입력하세요');\n        return;\n      }\n      if (e.ctrlKey) {\n        let val = e.target.value;\n        let start = e.target.selectionStart;\n        let end = e.target.selectionEnd;\n        e.target.value = val.substring(0, start) + \"\\n\" + val.substring(end);\n        setMessage(e.target.value);\n        return false; //  prevent focus\n      }\n\n      const docRef = doc(db, 'chatroom', `${chatId}`);\n      const colRef = collection(docRef, 'messagelist');\n      await addDoc(colRef, {\n        text: Message,\n        date: new Date().getTime(),\n        uid: sessionStorage.getItem('uid'),\n        unickname: loginUser.unickname,\n        uprofile: loginUser.uprofile\n      });\n      setMessage('');\n    }\n  };\n  const getMessageList = () => {\n    const q = query(collection(db, `chatroom/${chatId}/messagelist`), orderBy('date', 'asc'), limit(100));\n    onSnapshot(q, snapshot => {\n      let rows = [];\n      snapshot.forEach(doc => {\n        rows.push({\n          id: doc.id,\n          uid: doc.data().uid,\n          text: doc.data().text,\n          date: doc.data().date,\n          unickname: doc.data().unickname,\n          uprofile: doc.data().uprofile\n        });\n      });\n      setMessageList(rows);\n    });\n  };\n  const onDelete = async id => {\n    if (!window.confirm(`메세지를 삭제하시겠습니까?`)) return;\n    await deleteDoc(doc(db, `chatroom/${chatId}/messagelist`, id));\n  };\n  useEffect(() => {\n    getRoomList();\n    getMessageList();\n  }, [chatId]);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"container\",\n    style: {\n      marginTop: 100\n    },\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"row\",\n      style: {\n        margin: '150px 0px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"col-3 p-0\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group chat-list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"col-9 p-0\",\n        children: chatId.length > 5 && /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"chat-room\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wrap\",\n            children: messageList.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: message.uid === sessionStorage.uid ? 'chat ch2' : 'chat ch1',\n              children: /*#__PURE__*/_jsxDEV(MyChatItem, {\n                message: message,\n                onDelete: onDelete\n              }, message.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"mt-5 justify-content-center\",\n            children: [/*#__PURE__*/_jsxDEV(Form, {\n              className: \"d-flex my-3\",\n              style: {\n                width: '52rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"textarea\",\n                value: Message,\n                onChange: e => setMessage(e.target.value),\n                onKeyDown: sendMessage,\n                placeholder: \"enter\\uB97C \\uB204\\uB974\\uC138\\uC694\",\n                className: \"mx-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"priveiw-rapping\",\n                  children: preview\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    padding: 10\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    ref: fileRef,\n                    hidden: true,\n                    id: \"file\",\n                    type: \"file\",\n                    onChange: handleFileOnChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleFileButtonClick,\n                    children: \"UPLOAD\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: deleteFile,\n                    children: \"DELETE\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"../image/attach.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [sessionStorage.getItem('uid') !== pwriter_id && /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => history.push(`/my/pay/${pcode}`),\n                children: \"\\uACB0\\uC81C\\uCC3D \\uC774\\uB3D9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  marginLeft: 80\n                },\n                onClick: () => history.go(-1),\n                children: \"\\uB4A4\\uB85C\\uAC00\\uAE30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 9\n  }, this);\n};\n_s(MyChatList, \"1nu+YoS6VdcRvVUPAUUMzo9UqYo=\");\n_c = MyChatList;\nexport default MyChatList;\nvar _c;\n$RefreshReg$(_c, \"MyChatList\");","map":{"version":3,"names":["addDoc","collection","deleteDoc","doc","getFirestore","limit","onSnapshot","orderBy","query","where","qs","default","React","useContext","useEffect","useRef","useState","Button","Form","Row","UserContext","app","MyChatItem","Line","getStorage","ref","sRef","uploadBytesResumable","getDownloadURL","deleteObject","MyChatList","location","history","db","storage","search","parse","ignoreQueryPrefix","pwriter_id","pcode","Message","setMessage","messageList","setMessageList","chatId","setChatId","loginUser","file","setFile","previewURL","setPreviewURL","preview","setPreview","fileRef","handleFileOnChange","event","preventDefault","target","files","reader","FileReader","onloadend","result","saveToFirebaseStorage","readAsDataURL","handleFileButtonClick","e","current","click","uniqueKey","Date","getTime","newName","name","replace","split","join","metaData","contentType","type","storageRef","UploadTask","on","snapshot","progress","bytesTransferred","totalBytes","console","log","error","alert","JSON","stringify","then","downloadUrl","deleteFile","desertRef","catch","getRoomList","q","sessionStorage","getItem","forEach","li","document","createElement","className","innerHTML","data","who","id","includes","getElementsByClassName","append","i","length","addEventListener","querySelector","sendMessage","keyCode","ctrlKey","val","value","start","selectionStart","end","selectionEnd","substring","docRef","colRef","text","date","uid","unickname","uprofile","getMessageList","rows","push","onDelete","window","confirm","marginTop","margin","map","message","width","padding","marginLeft","go"],"sources":["C:/data/project/chatting_progress/src/my/MyChatList.jsx"],"sourcesContent":["import { addDoc, collection, deleteDoc, doc, getFirestore, limit, onSnapshot, orderBy, query, where } from 'firebase/firestore';\r\nimport qs from 'qs';\r\nimport { default as React, useContext, useEffect, useRef, useState } from 'react';\r\nimport { Button, Form, Row } from 'react-bootstrap';\r\nimport { UserContext } from '../context/UserContext';\r\nimport { app } from '../fireStore';\r\nimport MyChatItem from './MyChatItem';\r\nimport './MyChatList.css';\r\nimport { Line } from \"rc-progress\";\r\nimport {\r\n    getStorage,\r\n    ref as sRef,\r\n    uploadBytesResumable,\r\n    getDownloadURL,\r\n    deleteObject,\r\n    ref\r\n} from \"firebase/storage\";\r\n\r\nconst MyChatList = ({ location, history }) => {\r\n\r\n    const db = getFirestore(app);\r\n    const storage = getStorage();\r\n    const search = qs.parse(location.search, { ignoreQueryPrefix: true });\r\n    const pwriter_id = search.pwriter_id;\r\n    const pcode = search.pcode;\r\n    const [Message, setMessage] = useState('');\r\n    const [messageList, setMessageList] = useState([]);\r\n    const [chatId, setChatId] = useState('unde');\r\n    const { loginUser } = useContext(UserContext);\r\n    const [file, setFile] = useState(\"\");\r\n    const [previewURL, setPreviewURL] = useState(\"\");\r\n    const [preview, setPreview] = useState(null);\r\n    const fileRef = useRef();\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (file !== \"\") {\r\n            setPreview(\r\n                <img className=\"img_preview\" src={previewURL} alt=\"previewImage\" />\r\n            );\r\n        }\r\n        return () => { };\r\n    }, [file, previewURL]);\r\n\r\n    const handleFileOnChange = event => {\r\n        event.preventDefault();\r\n        const file = event.target.files[0];\r\n        const reader = new FileReader();\r\n\r\n        reader.onloadend = () => {\r\n            setFile(file);\r\n            setPreviewURL(reader.result);\r\n\r\n            saveToFirebaseStorage(file);\r\n        };\r\n        if (file) reader.readAsDataURL(file);\r\n    };\r\n\r\n    const handleFileButtonClick = e => {\r\n        e.preventDefault();\r\n        fileRef.current.click();\r\n    };\r\n\r\n    // 여기가 upload 함수입니다.\r\n    const saveToFirebaseStorage = file => {\r\n        const uniqueKey = new Date().getTime();\r\n        const newName = file.name\r\n            .replace(/[~`!#$%^&*+=\\-[\\]\\\\';,/{}()|\\\\\":<>?]/g, \"\")\r\n            .split(\" \")\r\n            .join(\"\");\r\n\r\n        const metaData = {\r\n            contentType: file.type\r\n        };\r\n\r\n        const storageRef = sRef(storage, \"Images/\" + newName + uniqueKey);\r\n        const UploadTask = uploadBytesResumable(storageRef, file, metaData);\r\n        UploadTask.on(\r\n            \"state_changed\",\r\n            snapshot => {\r\n                const progress =\r\n                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                console.log(`Upload is ${progress}% done`);\r\n            },\r\n            error => {\r\n                alert(`error: image upload error ${JSON.stringify(error)}`);\r\n            },\r\n            () => {\r\n                getDownloadURL(UploadTask.snapshot.ref).then(downloadUrl => {\r\n                    console.log(`완료 url: ${downloadUrl}`);\r\n                });\r\n            }\r\n        );\r\n    };\r\n\r\n    // 여기가 delete 코드입니다.\r\n    const deleteFile = () => {\r\n        const desertRef = sRef(storage, \"Images/파일이름을넣어주세요\");\r\n\r\n        deleteObject(desertRef)\r\n            .then(() => {\r\n                console.log(`delete success`);\r\n            })\r\n            .catch(error => {\r\n                console.log(`delete ${error}`);\r\n            });\r\n    };\r\n\r\n    const getRoomList = () => {\r\n        const q = query(\r\n            collection(db, `chatroom`),\r\n            where('who', 'array-contains', sessionStorage.getItem('uid')),\r\n            limit(100)\r\n        );\r\n\r\n        //chatroom fetch\r\n        onSnapshot(q, (snapshot) => {\r\n\r\n            snapshot.forEach((doc) => {\r\n                const li = document.createElement('li');\r\n\r\n                li.className = 'list-group-item';\r\n\r\n                li.innerHTML = `\r\n                <h6>${sessionStorage.getItem('uid') === doc.data().who[0] ?\r\n                        doc.data().who[1]\r\n                        :\r\n                        doc.data().who[0]}</h6>\r\n                        <p class='text-small'>${doc.id}</p>\r\n                `;\r\n\r\n                //same chatId onclick ㅡ> duplicate x\r\n                if ((doc.id !== chatId) && (chatId.includes('unde'))) {\r\n                    document.getElementsByClassName('list-group chat-list')[0].append(li);\r\n                }\r\n            });\r\n\r\n\r\n            for (let i = 0; i < document.getElementsByClassName('list-group-item').length; ++i) {\r\n                document.getElementsByClassName('list-group-item')[i].addEventListener(\"click\", function (e) {\r\n                    setChatId(document.getElementsByClassName(\"text-small\")[i].innerHTML)\r\n                })\r\n            }\r\n            //if no chatroom\r\n            const li = document.createElement('div');\r\n\r\n            li.innerHTML = `\r\n            <h1 class='no-chatroom'>개설된 채팅방이 없습니다</h1>`\r\n                ;\r\n\r\n            //no chatId ㅡ>  guidance\r\n            if (!document.querySelector(\".list-group-item\"))\r\n                document.getElementsByClassName('row')[0].append(li);\r\n\r\n\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    //Doc element를 최초 생성\r\n    const sendMessage = async (e) => {\r\n        if (e.keyCode === 13) {\r\n            if (Message === '') {\r\n                alert('보낼 내용을 입력하세요')\r\n                return;\r\n            }\r\n            if (e.ctrlKey) {\r\n                let val = e.target.value;\r\n                let start = e.target.selectionStart;\r\n                let end = e.target.selectionEnd;\r\n                e.target.value = val.substring(0, start) + \"\\n\" + val.substring(end);\r\n                setMessage(e.target.value);\r\n                return false; //  prevent focus\r\n            }\r\n\r\n            const docRef = doc(db, 'chatroom', `${chatId}`);\r\n            const colRef = collection(docRef, 'messagelist')\r\n            await addDoc(colRef, {\r\n                text: Message,\r\n                date: new Date().getTime(),\r\n                uid: sessionStorage.getItem('uid'),\r\n                unickname: loginUser.unickname,\r\n                uprofile: loginUser.uprofile\r\n            });\r\n            setMessage('');\r\n        }\r\n    }\r\n\r\n    const getMessageList = () => {\r\n        const q = query(\r\n            collection(db, `chatroom/${chatId}/messagelist`),\r\n            orderBy('date', 'asc'),\r\n            limit(100)\r\n        );\r\n\r\n        onSnapshot(q, (snapshot) => {\r\n            let rows = [];\r\n            snapshot.forEach((doc) => {\r\n                rows.push({\r\n                    id: doc.id,\r\n                    uid: doc.data().uid,\r\n                    text: doc.data().text,\r\n                    date: doc.data().date,\r\n                    unickname: doc.data().unickname,\r\n                    uprofile: doc.data().uprofile\r\n                });\r\n            });\r\n            setMessageList(rows);\r\n        });\r\n    }\r\n\r\n    const onDelete = async (id) => {\r\n        if (!window.confirm(`메세지를 삭제하시겠습니까?`)) return;\r\n        await deleteDoc(doc(db, `chatroom/${chatId}/messagelist`, id));\r\n    }\r\n\r\n    useEffect(() => {\r\n        getRoomList();\r\n        getMessageList();\r\n    }, [chatId]);\r\n\r\n\r\n    return (\r\n        <li className=\"container\" style={{ marginTop: 100 }}>\r\n            <li className=\"row\" style={{ margin: '150px 0px' }}>\r\n\r\n                <li className=\"col-3 p-0\">\r\n\r\n                    <ul className=\"list-group chat-list\">\r\n                    </ul>\r\n\r\n                </li>\r\n                <li className=\"col-9 p-0\">\r\n\r\n                    {chatId.length > 5 && <li className=\"chat-room\">\r\n                        <div className=\"wrap\">\r\n                            {messageList.map(message =>\r\n                                <div className={message.uid === sessionStorage.uid ? 'chat ch2' : 'chat ch1'}>\r\n                                    <MyChatItem key={message.id}\r\n                                        message={message}\r\n                                        onDelete={onDelete} />\r\n                                </div>\r\n                            )}\r\n\r\n                        </div>\r\n                        <Row className=\"mt-5 justify-content-center\">\r\n                            <Form className=\"d-flex my-3\" style={{ width: '52rem' }}>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    value={Message}\r\n                                    onChange={(e) => setMessage(e.target.value)}\r\n                                    onKeyDown={sendMessage}\r\n                                    placeholder='enter를 누르세요' className=\"mx-2\" />\r\n                                <div>\r\n                                    <div className=\"priveiw-rapping\">{preview}</div>\r\n                                    <div style={{ padding: 10 }}>\r\n                                        <input\r\n                                            ref={fileRef}\r\n                                            hidden={true}\r\n                                            id=\"file\"\r\n                                            type=\"file\"\r\n                                            onChange={handleFileOnChange}\r\n                                        >\r\n                                        </input>\r\n\r\n                                        <button onClick={handleFileButtonClick}>UPLOAD</button>\r\n                                        <button onClick={deleteFile}>DELETE</button>\r\n                                    </div>\r\n                                </div>\r\n                                <img src=\"../image/attach.png\" />\r\n                            </Form>\r\n                            <div>\r\n                                {sessionStorage.getItem('uid') !== pwriter_id &&\r\n                                    <Button onClick={() => history.push(`/my/pay/${pcode}`)}>결제창 이동</Button>}\r\n                                <Button style={{ marginLeft: 80 }} onClick={() => history.go(-1)}>뒤로가기</Button>\r\n                            </div>\r\n                        </Row>\r\n                    </li>}\r\n                </li>\r\n            </li>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default MyChatList"],"mappings":"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"},"metadata":{},"sourceType":"module"}
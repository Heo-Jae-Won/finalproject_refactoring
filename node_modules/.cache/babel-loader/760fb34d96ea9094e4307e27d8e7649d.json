{"ast":null,"code":"var _jsxFileName = \"C:\\\\data\\\\project\\\\realproject\\\\src\\\\my\\\\MyPay.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useContext } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { UserContext } from '../context/UserContext';\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MyPay = _ref => {\n  _s();\n  let {\n    history\n  } = _ref;\n  const {\n    loginUser\n  } = useContext(UserContext);\n  const [paycode, setPaycode] = useState('');\n\n  //pcode 받기.\n  const onClickPayment = () => {\n    const {\n      IMP\n    } = window;\n    IMP.init('imp37385705'); // 결제 데이터 정의\n    const data = {\n      pg: 'html5_inicis',\n      // PG사 (필수항목)\n      pay_method: 'card',\n      // 결제수단 (필수항목)\n      merchant_uid: `pay_${new Date().getTime()}`,\n      // 주문번호 (필수항목)\n      name: '결제 테스트',\n      // 주문명 (필수항목)\n      amount: '100',\n      // 금액이고 반드시 숫자로 써야함. (필수항목)\n      custom_data: {\n        name: '부가정보',\n        desc: '세부 부가정보'\n      },\n      buyer_name: loginUser.uname,\n      // 구매자 이름\n      buyer_tel: loginUser.utel,\n      // 구매자 전화번호 (필수항목)\n      buyer_email: loginUser.uemail,\n      // 구매자 이메일\n      buyer_addr: loginUser.uaddress\n    };\n    IMP.request_pay(data, callback);\n  };\n  const callback = async response => {\n    const {\n      success,\n      error_msg,\n      imp_uid,\n      merchant_uid,\n      buyer_email,\n      pay_method,\n      paid_amount\n    } = response;\n    try {\n      const result = await axios.post(`/pay/complete/${imp_uid}`);\n\n      //위변조 검증\n      if (result.data.response.amount === paid_amount) {\n        console.log('검증 완료');\n      } else {\n        Swal.fire({\n          text: \"위변조 검증이 성공적으로 이뤄지지 않았습니다. 다시 결제를 시도해주세요\",\n          icon: 'error',\n          confirmButtonColor: '#3085d6',\n          cancelButtonColor: '#d33'\n        });\n      }\n    } catch (e) {\n      if (e) {\n        Swal.fire({\n          text: \"예상치 못한 오류가 발생하였습니다.\",\n          icon: 'error',\n          confirmButtonColor: '#3085d6',\n          cancelButtonColor: '#d33'\n        });\n      }\n    }\n    if (success) {\n      const formData = new FormData();\n      formData.append(\"payprice\", paid_amount);\n      formData.append(\"uid\", loginUser.uid);\n      formData.append(\"paytype\", pay_method);\n      formData.append(\"payemail\", buyer_email);\n      formData.append(\"paycode\", merchant_uid);\n\n      //DB insert\n      try {\n        await axios.post('/pay/insert', formData);\n        Swal.fire({\n          title: '결제 완료!',\n          text: \"리뷰를 쓰러 가시겠습니까?\",\n          icon: 'info',\n          showCancelButton: true,\n          confirmButtonColor: '#3085d6',\n          cancelButtonColor: '#d33',\n          confirmButtonText: '이동',\n          cancelButtonText: '취소'\n        }).then(async result => {\n          if (result.isConfirmed) {\n            history.push(`/my/review/insert/${merchant_uid}`);\n          } else if (result.isDismissed) {\n            setPaycode(merchant_uid);\n          }\n        });\n\n        //review insert 페이지의 url에 paycode,pcode parameter를 달고가자.\n        //자바스크립트로 이동을 처리하지말고, component로 처리하는 대신에, pay가 이뤄지지 않으면\n        //버튼을 누를 수 없게끔 처리하자.\n        //이동하는 페이지는 review작성페이지. review작성페이지에 가져갈 값은 paycode, pcode\n        //pcode로 axios.get(read) 호출해서 판매자의 id를 알아내야 함. 그거로 unickname가져옴.\n      } catch (e) {\n        if (e) {\n          Swal.fire({\n            text: \"예상치 못한 오류가 발생하였습니다.\",\n            icon: 'error',\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33'\n          });\n        }\n      }\n    } else {\n      Swal.fire({\n        text: `결제가 실패하였습니다 : ${error_msg}`,\n        icon: 'error',\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33'\n      });\n    }\n  };\n  useEffect(() => {\n    const jquery = document.createElement(\"script\");\n    jquery.src = \"https://code.jquery.com/jquery-1.12.4.min.js\";\n    const iamport = document.createElement(\"script\");\n    iamport.src = \"https://cdn.iamport.kr/js/iamport.payment-1.1.7.js\";\n    document.head.appendChild(jquery);\n    document.head.appendChild(iamport);\n    return () => {\n      document.head.removeChild(jquery);\n      document.head.removeChild(iamport);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClickPayment,\n      children: \"\\uACB0\\uC81C\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), paycode && /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        marginTop: 200\n      },\n      onClick: () => history.push(`/my/review/insert/${paycode}`),\n      children: \"\\uB9AC\\uBDF0 \\uC4F0\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(MyPay, \"I3v008CMLDNeliVSJq2oX/pFsnU=\");\n_c = MyPay;\nexport default MyPay;\nvar _c;\n$RefreshReg$(_c, \"MyPay\");","map":{"version":3,"names":["axios","React","useEffect","useState","useContext","Button","UserContext","Swal","MyPay","history","loginUser","paycode","setPaycode","onClickPayment","IMP","window","init","data","pg","pay_method","merchant_uid","Date","getTime","name","amount","custom_data","desc","buyer_name","uname","buyer_tel","utel","buyer_email","uemail","buyer_addr","uaddress","request_pay","callback","response","success","error_msg","imp_uid","paid_amount","result","post","console","log","fire","text","icon","confirmButtonColor","cancelButtonColor","e","formData","FormData","append","uid","title","showCancelButton","confirmButtonText","cancelButtonText","then","isConfirmed","push","isDismissed","jquery","document","createElement","src","iamport","head","appendChild","removeChild","marginTop"],"sources":["C:/data/project/realproject/src/my/MyPay.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useContext } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { UserContext } from '../context/UserContext';\r\nimport Swal from 'sweetalert2'\r\n\r\nconst MyPay = ({ history }) => {\r\n  const { loginUser } = useContext(UserContext);\r\n  const [paycode, setPaycode] = useState('');\r\n\r\n\r\n  //pcode 받기.\r\n  const onClickPayment = () => {\r\n    const { IMP } = window;\r\n    IMP.init('imp37385705'); // 결제 데이터 정의\r\n    const data = {\r\n      pg: 'html5_inicis', // PG사 (필수항목)\r\n      pay_method: 'card', // 결제수단 (필수항목)\r\n      merchant_uid: `pay_${new Date().getTime()}`, // 주문번호 (필수항목)\r\n      name: '결제 테스트', // 주문명 (필수항목)\r\n      amount: '100', // 금액이고 반드시 숫자로 써야함. (필수항목)\r\n      custom_data: { name: '부가정보', desc: '세부 부가정보' },\r\n      buyer_name: loginUser.uname, // 구매자 이름\r\n      buyer_tel: loginUser.utel, // 구매자 전화번호 (필수항목)\r\n      buyer_email: loginUser.uemail, // 구매자 이메일\r\n      buyer_addr: loginUser.uaddress,\r\n    };\r\n    IMP.request_pay(data, callback);\r\n  }\r\n\r\n  const callback = async (response) => {\r\n    const { success, error_msg, imp_uid, merchant_uid, buyer_email, pay_method, paid_amount } = response;\r\n    try {\r\n      const result = await axios.post(`/pay/complete/${imp_uid}`);\r\n\r\n      //위변조 검증\r\n      if (result.data.response.amount === paid_amount) {\r\n        console.log('검증 완료')\r\n      } else {\r\n        Swal.fire({\r\n          text: \"위변조 검증이 성공적으로 이뤄지지 않았습니다. 다시 결제를 시도해주세요\",\r\n          icon: 'error',\r\n          confirmButtonColor: '#3085d6',\r\n          cancelButtonColor: '#d33',\r\n        })\r\n      }\r\n\r\n    } catch (e) {\r\n      if (e) {\r\n        Swal.fire({\r\n          text: \"예상치 못한 오류가 발생하였습니다.\",\r\n          icon: 'error',\r\n          confirmButtonColor: '#3085d6',\r\n          cancelButtonColor: '#d33',\r\n        })\r\n      }\r\n    }\r\n\r\n    if (success) {\r\n      const formData = new FormData();\r\n      formData.append(\"payprice\", paid_amount);\r\n      formData.append(\"uid\", loginUser.uid);\r\n      formData.append(\"paytype\", pay_method);\r\n      formData.append(\"payemail\", buyer_email);\r\n      formData.append(\"paycode\", merchant_uid);\r\n\r\n      //DB insert\r\n      try {\r\n        await axios.post('/pay/insert', formData);\r\n\r\n        Swal.fire({\r\n          title:'결제 완료!',\r\n          text: \"리뷰를 쓰러 가시겠습니까?\",\r\n          icon: 'info',\r\n          showCancelButton: true,\r\n          confirmButtonColor: '#3085d6',\r\n          cancelButtonColor: '#d33',\r\n          confirmButtonText: '이동',\r\n          cancelButtonText: '취소'\r\n        }).then(async (result) => {\r\n          if (result.isConfirmed) {\r\n            history.push(`/my/review/insert/${merchant_uid}`)\r\n          }\r\n          else if (result.isDismissed) {\r\n            setPaycode(merchant_uid);\r\n          }\r\n        })\r\n\r\n\r\n\r\n\r\n        //review insert 페이지의 url에 paycode,pcode parameter를 달고가자.\r\n        //자바스크립트로 이동을 처리하지말고, component로 처리하는 대신에, pay가 이뤄지지 않으면\r\n        //버튼을 누를 수 없게끔 처리하자.\r\n        //이동하는 페이지는 review작성페이지. review작성페이지에 가져갈 값은 paycode, pcode\r\n        //pcode로 axios.get(read) 호출해서 판매자의 id를 알아내야 함. 그거로 unickname가져옴.\r\n      } catch (e) {\r\n        if (e) {\r\n          Swal.fire({\r\n            text: \"예상치 못한 오류가 발생하였습니다.\",\r\n            icon: 'error',\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n          })\r\n        }\r\n      }\r\n\r\n\r\n    } else {\r\n        Swal.fire({\r\n          text:`결제가 실패하였습니다 : ${error_msg}`,\r\n          icon: 'error',\r\n          confirmButtonColor: '#3085d6',\r\n          cancelButtonColor: '#d33',\r\n        })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const jquery = document.createElement(\"script\");\r\n    jquery.src = \"https://code.jquery.com/jquery-1.12.4.min.js\";\r\n    const iamport = document.createElement(\"script\");\r\n    iamport.src = \"https://cdn.iamport.kr/js/iamport.payment-1.1.7.js\";\r\n    document.head.appendChild(jquery);\r\n    document.head.appendChild(iamport);\r\n    return () => {\r\n      document.head.removeChild(jquery); document.head.removeChild(iamport);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <button onClick={onClickPayment}>결제하기</button>\r\n\r\n      {paycode &&\r\n        <Button style={{ marginTop: 200 }}\r\n          onClick={() => history.push(`/my/review/insert/${paycode}`)}>리뷰 쓰기</Button>}\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MyPay;"],"mappings":"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"},"metadata":{},"sourceType":"module"}
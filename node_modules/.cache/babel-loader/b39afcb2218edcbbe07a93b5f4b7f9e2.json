{"ast":null,"code":"var _jsxFileName = \"C:\\\\data\\\\project\\\\realproject\\\\src\\\\pboard\\\\PboardItem.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Button, ButtonGroup, Card, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { UserContext } from '../context/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PboardItem = _ref => {\n  _s();\n  let {\n    postList\n  } = _ref;\n  const {\n    pcode,\n    plike,\n    ptitle,\n    pcontent,\n    pwriter,\n    pimage,\n    viewcnt\n  } = postList;\n  const [isLike, setIsLike] = useState(false);\n  const {\n    loginUser\n  } = useContext(UserContext);\n\n  //useContext에서 규정해버리니까 페이지 넘나들어도 false true 값은 유지하지만, \n  // 전 목록이 다 좋아요 눌려버림.\n\n  const onToggleLike = async (unickname, pcode) => {\n    await axios.post(`/api/pboard/like`);\n    setIsLike(!isLike);\n    //axios로 보내서 db를 갱신해야할듯.uid별로 like 상태를 다르게 구현하는 방법이 뭘까?\n  };\n\n  useEffect(() => {}, [isLike]);\n  return /*#__PURE__*/_jsxDEV(Col, {\n    style: {\n      marginTop: 60\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '30rem',\n        height: 700,\n        padding: 20,\n        margin: '15px 0px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n          src: pimage,\n          height: \"300\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n          children: ptitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: pcontent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        children: [sessionStorage.getItem('uid') && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onClickLike,\n          variant: \"primary\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: isLike ? \"../image/heart.png\" : \"../image/emptyheart.png\",\n            width: 30\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), plike]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/pboard/read/${pcode}`,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              marginLeft: 270\n            },\n            variant: \"secondary\",\n            children: \"\\uC790\\uC138\\uD788\\uBCF4\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(PboardItem, \"3XJ1Lc2hJMTMtwmoIUWPEyuX7qw=\");\n_c = PboardItem;\nexport default PboardItem;\nvar _c;\n$RefreshReg$(_c, \"PboardItem\");","map":{"version":3,"names":["axios","React","useContext","useEffect","useState","Button","ButtonGroup","Card","Col","Link","UserContext","PboardItem","postList","pcode","plike","ptitle","pcontent","pwriter","pimage","viewcnt","isLike","setIsLike","loginUser","onToggleLike","unickname","post","marginTop","width","height","padding","margin","sessionStorage","getItem","onClickLike","marginLeft"],"sources":["C:/data/project/realproject/src/pboard/PboardItem.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { Button, ButtonGroup, Card, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserContext } from '../context/UserContext';\r\n\r\nconst PboardItem = ({ postList }) => {\r\n  const { pcode, plike, ptitle, pcontent, pwriter, pimage, viewcnt, } = postList;\r\n  const [isLike,setIsLike]=useState(false);\r\nconst {loginUser}=useContext(UserContext);\r\n\r\n//useContext에서 규정해버리니까 페이지 넘나들어도 false true 값은 유지하지만, \r\n// 전 목록이 다 좋아요 눌려버림.\r\n\r\n  const onToggleLike = async (unickname, pcode) => {\r\n    await axios.post(`/api/pboard/like`)\r\n    setIsLike(!isLike);\r\n    //axios로 보내서 db를 갱신해야할듯.uid별로 like 상태를 다르게 구현하는 방법이 뭘까?\r\n\r\n  }\r\n\r\n  useEffect(()=>{\r\n\r\n  },[isLike])\r\n\r\n  return (\r\n    <Col style={{ marginTop: 60 }}>\r\n      <Card style={{ width: '30rem', height: 700, padding: 20, margin: '15px 0px' }}>\r\n        <Card.Body>\r\n          <Card.Img src={pimage} height='300' />\r\n          <Card.Title>{ptitle}</Card.Title>\r\n          <Card.Text>{pcontent}</Card.Text>\r\n        </Card.Body>\r\n        <ButtonGroup>\r\n          {sessionStorage.getItem('uid') &&\r\n            <Button onClick={onClickLike} variant=\"primary\">\r\n              <img src={isLike ? \"../image/heart.png\" : \"../image/emptyheart.png\"} width={30} />\r\n              {plike}\r\n            </Button>\r\n          }\r\n          <Link to={`/pboard/read/${pcode}`}><Button style={{ marginLeft: 270 }} variant='secondary'>자세히보기</Button></Link>\r\n        </ButtonGroup>\r\n      </Card>\r\n\r\n    </Col>\r\n\r\n  )\r\n}\r\n\r\nexport default PboardItem"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,SAASC,MAAM,EAAEC,WAAW,EAAEC,IAAI,EAAEC,GAAG,QAAQ,iBAAiB;AAChE,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,WAAW,QAAQ,wBAAwB;AAAC;AAErD,MAAMC,UAAU,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAC9B,MAAM;IAAEC,KAAK;IAAEC,KAAK;IAAEC,MAAM;IAAEC,QAAQ;IAAEC,OAAO;IAAEC,MAAM;IAAEC;EAAS,CAAC,GAAGP,QAAQ;EAC9E,MAAM,CAACQ,MAAM,EAACC,SAAS,CAAC,GAACjB,QAAQ,CAAC,KAAK,CAAC;EAC1C,MAAM;IAACkB;EAAS,CAAC,GAACpB,UAAU,CAACQ,WAAW,CAAC;;EAEzC;EACA;;EAEE,MAAMa,YAAY,GAAG,OAAOC,SAAS,EAAEX,KAAK,KAAK;IAC/C,MAAMb,KAAK,CAACyB,IAAI,CAAE,kBAAiB,CAAC;IACpCJ,SAAS,CAAC,CAACD,MAAM,CAAC;IAClB;EAEF,CAAC;;EAEDjB,SAAS,CAAC,MAAI,CAEd,CAAC,EAAC,CAACiB,MAAM,CAAC,CAAC;EAEX,oBACE,QAAC,GAAG;IAAC,KAAK,EAAE;MAAEM,SAAS,EAAE;IAAG,CAAE;IAAA,uBAC5B,QAAC,IAAI;MAAC,KAAK,EAAE;QAAEC,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE,GAAG;QAAEC,OAAO,EAAE,EAAE;QAAEC,MAAM,EAAE;MAAW,CAAE;MAAA,wBAC5E,QAAC,IAAI,CAAC,IAAI;QAAA,wBACR,QAAC,IAAI,CAAC,GAAG;UAAC,GAAG,EAAEZ,MAAO;UAAC,MAAM,EAAC;QAAK;UAAA;UAAA;UAAA;QAAA,QAAG,eACtC,QAAC,IAAI,CAAC,KAAK;UAAA,UAAEH;QAAM;UAAA;UAAA;UAAA;QAAA,QAAc,eACjC,QAAC,IAAI,CAAC,IAAI;UAAA,UAAEC;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAa;MAAA;QAAA;QAAA;QAAA;MAAA,QACvB,eACZ,QAAC,WAAW;QAAA,WACTe,cAAc,CAACC,OAAO,CAAC,KAAK,CAAC,iBAC5B,QAAC,MAAM;UAAC,OAAO,EAAEC,WAAY;UAAC,OAAO,EAAC,SAAS;UAAA,wBAC7C;YAAK,GAAG,EAAEb,MAAM,GAAG,oBAAoB,GAAG,yBAA0B;YAAC,KAAK,EAAE;UAAG;YAAA;YAAA;YAAA;UAAA,QAAG,EACjFN,KAAK;QAAA;UAAA;UAAA;UAAA;QAAA,QACC,eAEX,QAAC,IAAI;UAAC,EAAE,EAAG,gBAAeD,KAAM,EAAE;UAAA,uBAAC,QAAC,MAAM;YAAC,KAAK,EAAE;cAAEqB,UAAU,EAAE;YAAI,CAAE;YAAC,OAAO,EAAC,WAAW;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAe;UAAA;UAAA;UAAA;QAAA,QAAO;MAAA;QAAA;QAAA;QAAA;MAAA,QACpG;IAAA;MAAA;MAAA;MAAA;IAAA;EACT;IAAA;IAAA;IAAA;EAAA,QAEH;AAGV,CAAC;AAAA,GAzCKvB,UAAU;AAAA,KAAVA,UAAU;AA2ChB,eAAeA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module"}
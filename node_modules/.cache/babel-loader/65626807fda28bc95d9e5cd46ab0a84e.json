{"ast":null,"code":"var _jsxFileName = \"C:\\\\data\\\\project\\\\realproject\\\\src\\\\my\\\\MyChatList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport { AttachFile, MoreVert, SearchOutlined } from \"@material-ui/icons\";\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport \"./OChat.css\";\nimport { useParams } from \"react-router-dom\";\nimport { app } from \"../fireStore\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../context/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyChatList() {\n  _s();\n  var _messages, _messages$timestamp;\n  const [seed, setSeed] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  const {\n    roomId\n  } = useParams();\n  const [roomName, setRoomName] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const {\n    loginuser\n  } = useContext(UserContext);\n  useEffect(() => {\n    if (roomId) {\n      app.collection(\"rooms\").doc(roomId).onSnapshot(snapshot => setRoomName(snapshot.data().name));\n      app.collection(\"rooms\").doc(roomId).collection(\"messages\").orderBy(\"timestamp\", \"asc\").onSnapshot(snapshot => setMessages(snapshot.docs.map(doc => doc.data())));\n    }\n  }, [roomId]);\n  useEffect(() => {\n    setSeed(Math.floor(Math.random() * 5000));\n  }, [roomId]);\n  const sendMessage = event => {\n    event.preventDefault();\n    console.log(\"You type >>>\", input);\n    app.collection(\"rooms\").doc(roomId).collection(\"messages\").add({\n      name: loginuser.unickanme,\n      message: input,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__header\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: `https://avatars.dicebear.com/api/human/${seed}.svg`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__headerInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: roomName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"last seen\", \" \", new Date((_messages = messages[messages.length - 1]) === null || _messages === void 0 ? void 0 : (_messages$timestamp = _messages.timestamp) === null || _messages$timestamp === void 0 ? void 0 : _messages$timestamp.toDate()).toUTCString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__headerRight\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(AttachFile, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(MoreVert, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__body\",\n      children: messages.map(message => {\n        var _message$timestamp;\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `chat__message ${message.name === loginuser.unickanme && \"chat__reciever\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chat__name\",\n            children: message.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), message.message, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chat__timestamp\",\n            children: new Date((_message$timestamp = message.timestamp) === null || _message$timestamp === void 0 ? void 0 : _message$timestamp.toDate()).toUTCString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__footer\",\n      children: [/*#__PURE__*/_jsxDEV(InsertEmoticonIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sendMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Type a message\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          type: \"submit\",\n          children: \"Send a message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MicIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(MyChatList, \"HmGPYMLatjW3gjzBng8v+Lz7H24=\", false, function () {\n  return [useParams];\n});\n_c = MyChatList;\nexport default MyChatList;\nvar _c;\n$RefreshReg$(_c, \"MyChatList\");","map":{"version":3,"names":["React","useState","useEffect","Avatar","IconButton","AttachFile","MoreVert","SearchOutlined","InsertEmoticonIcon","MicIcon","useParams","app","useContext","UserContext","MyChatList","seed","setSeed","input","setInput","roomId","roomName","setRoomName","messages","setMessages","loginuser","collection","doc","onSnapshot","snapshot","data","name","orderBy","docs","map","Math","floor","random","sendMessage","event","preventDefault","console","log","add","unickanme","message","timestamp","firebase","firestore","FieldValue","serverTimestamp","Date","length","toDate","toUTCString","e","target","value"],"sources":["C:/data/project/realproject/src/my/MyChatList.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport { AttachFile, MoreVert, SearchOutlined } from \"@material-ui/icons\";\r\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport \"./OChat.css\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {app} from \"../fireStore\";\r\nimport { useContext } from \"react\";\r\nimport { UserContext } from \"../context/UserContext\";\r\n\r\nfunction MyChatList() {\r\n  const [seed, setSeed] = useState(\"\");\r\n  const [input, setInput] = useState(\"\");\r\n  const { roomId } = useParams();\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const { loginuser } = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    if (roomId) {\r\n        app.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .onSnapshot((snapshot) => setRoomName(snapshot.data().name));\r\n\r\n        app.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"asc\")\r\n        .onSnapshot((snapshot) =>\r\n          setMessages(snapshot.docs.map((doc) => doc.data()))\r\n        );\r\n    }\r\n  }, [roomId]);\r\n\r\n  useEffect(() => {\r\n    setSeed(Math.floor(Math.random() * 5000));\r\n  }, [roomId]);\r\n\r\n  const sendMessage = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"You type >>>\", input);\r\n    app.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .collection(\"messages\")\r\n        .add({\r\n            name: loginuser.unickanme,\r\n            message: input,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n        })\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      <div className=\"chat__header\">\r\n        <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n        <div className=\"chat__headerInfo\">\r\n          <h3>{roomName}</h3>\r\n          <p>\r\n          last seen{\" \"}\r\n          {new Date(\r\n              messages[messages.length - 1]?.\r\n              timestamp?.toDate()\r\n          ).toUTCString()}\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"chat__headerRight\">\r\n          <IconButton>\r\n            <SearchOutlined />\r\n          </IconButton>\r\n\r\n          <IconButton>\r\n            <AttachFile />\r\n          </IconButton>\r\n\r\n          <IconButton>\r\n            <MoreVert />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chat__body\">\r\n        {messages.map((message) => (\r\n          <p className={`chat__message ${message.name === loginuser.unickanme\r\n           && \"chat__reciever\"}`}>\r\n            <span className=\"chat__name\">{message.name}</span>\r\n            {message.message}\r\n            <span className=\"chat__timestamp\">\r\n              {new Date(message.timestamp?.toDate()).toUTCString()}\r\n            </span>\r\n          </p>\r\n        ))}\r\n      </div>\r\n      <div className=\"chat__footer\">\r\n        <InsertEmoticonIcon />\r\n        <form onSubmit={sendMessage}>\r\n          <input\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            placeholder=\"Type a message\"\r\n            type=\"text\"\r\n          />\r\n          <button onClick={sendMessage} type=\"submit\">\r\n            Send a message\r\n          </button>\r\n        </form>\r\n        <MicIcon />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyChatList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}
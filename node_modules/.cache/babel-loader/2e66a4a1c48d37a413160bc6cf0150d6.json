{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module enter/entercommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport { getCopyOnEnterAttributes } from './utils';\n\n/**\n * Enter command. It is used by the {@link module:enter/enter~Enter Enter feature} to handle the <kbd>Enter</kbd> key.\n *\n * @extends module:core/command~Command\n */\nexport default class EnterCommand extends Command {\n  /**\n   * @inheritDoc\n   */\n  execute() {\n    const model = this.editor.model;\n    const doc = model.document;\n    model.change(writer => {\n      enterBlock(this.editor.model, writer, doc.selection, model.schema);\n      this.fire('afterExecute', {\n        writer\n      });\n    });\n  }\n}\n\n// Creates a new block in the way that the <kbd>Enter</kbd> key is expected to work.\n//\n// @param {module:engine/model~Model} model\n// @param {module:engine/model/writer~Writer} writer\n// @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n// Selection on which the action should be performed.\n// @param {module:engine/model/schema~Schema} schema\nfunction enterBlock(model, writer, selection, schema) {\n  const isSelectionEmpty = selection.isCollapsed;\n  const range = selection.getFirstRange();\n  const startElement = range.start.parent;\n  const endElement = range.end.parent;\n\n  // Don't touch the roots and other limit elements.\n  if (schema.isLimit(startElement) || schema.isLimit(endElement)) {\n    // Delete the selected content but only if inside a single limit element.\n    // Abort, when crossing limit elements boundary (e.g. <limit1>x[x</limit1>donttouchme<limit2>y]y</limit2>).\n    // This is an edge case and it's hard to tell what should actually happen because such a selection\n    // is not entirely valid.\n    if (!isSelectionEmpty && startElement == endElement) {\n      model.deleteContent(selection);\n    }\n    return;\n  }\n  if (isSelectionEmpty) {\n    const attributesToCopy = getCopyOnEnterAttributes(writer.model.schema, selection.getAttributes());\n    splitBlock(writer, range.start);\n    writer.setSelectionAttribute(attributesToCopy);\n  } else {\n    const leaveUnmerged = !(range.start.isAtStart && range.end.isAtEnd);\n    const isContainedWithinOneElement = startElement == endElement;\n    model.deleteContent(selection, {\n      leaveUnmerged\n    });\n    if (leaveUnmerged) {\n      // Partially selected elements.\n      //\n      // <h>x[xx]x</h>\t\t-> <h>x^x</h>\t\t\t-> <h>x</h><h>^x</h>\n      if (isContainedWithinOneElement) {\n        splitBlock(writer, selection.focus);\n      }\n      // Selection over multiple elements.\n      //\n      // <h>x[x</h><p>y]y<p>\t-> <h>x^</h><p>y</p>\t-> <h>x</h><p>^y</p>\n      else {\n        writer.setSelection(endElement, 0);\n      }\n    }\n  }\n}\nfunction splitBlock(writer, splitPos) {\n  writer.split(splitPos);\n  writer.setSelection(splitPos.parent.nextSibling, 0);\n}","map":{"version":3,"names":["Command","getCopyOnEnterAttributes","EnterCommand","execute","model","editor","doc","document","change","writer","enterBlock","selection","schema","fire","isSelectionEmpty","isCollapsed","range","getFirstRange","startElement","start","parent","endElement","end","isLimit","deleteContent","attributesToCopy","getAttributes","splitBlock","setSelectionAttribute","leaveUnmerged","isAtStart","isAtEnd","isContainedWithinOneElement","focus","setSelection","splitPos","split","nextSibling"],"sources":["C:/data/project/realproject/node_modules/@ckeditor/ckeditor5-enter/src/entercommand.js"],"sourcesContent":["/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module enter/entercommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport { getCopyOnEnterAttributes } from './utils';\n\n/**\n * Enter command. It is used by the {@link module:enter/enter~Enter Enter feature} to handle the <kbd>Enter</kbd> key.\n *\n * @extends module:core/command~Command\n */\nexport default class EnterCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\texecute() {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\n\t\tmodel.change( writer => {\n\t\t\tenterBlock( this.editor.model, writer, doc.selection, model.schema );\n\t\t\tthis.fire( 'afterExecute', { writer } );\n\t\t} );\n\t}\n}\n\n// Creates a new block in the way that the <kbd>Enter</kbd> key is expected to work.\n//\n// @param {module:engine/model~Model} model\n// @param {module:engine/model/writer~Writer} writer\n// @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n// Selection on which the action should be performed.\n// @param {module:engine/model/schema~Schema} schema\nfunction enterBlock( model, writer, selection, schema ) {\n\tconst isSelectionEmpty = selection.isCollapsed;\n\tconst range = selection.getFirstRange();\n\tconst startElement = range.start.parent;\n\tconst endElement = range.end.parent;\n\n\t// Don't touch the roots and other limit elements.\n\tif ( schema.isLimit( startElement ) || schema.isLimit( endElement ) ) {\n\t\t// Delete the selected content but only if inside a single limit element.\n\t\t// Abort, when crossing limit elements boundary (e.g. <limit1>x[x</limit1>donttouchme<limit2>y]y</limit2>).\n\t\t// This is an edge case and it's hard to tell what should actually happen because such a selection\n\t\t// is not entirely valid.\n\t\tif ( !isSelectionEmpty && startElement == endElement ) {\n\t\t\tmodel.deleteContent( selection );\n\t\t}\n\n\t\treturn;\n\t}\n\n\tif ( isSelectionEmpty ) {\n\t\tconst attributesToCopy = getCopyOnEnterAttributes( writer.model.schema, selection.getAttributes() );\n\t\tsplitBlock( writer, range.start );\n\t\twriter.setSelectionAttribute( attributesToCopy );\n\t} else {\n\t\tconst leaveUnmerged = !( range.start.isAtStart && range.end.isAtEnd );\n\t\tconst isContainedWithinOneElement = ( startElement == endElement );\n\n\t\tmodel.deleteContent( selection, { leaveUnmerged } );\n\n\t\tif ( leaveUnmerged ) {\n\t\t\t// Partially selected elements.\n\t\t\t//\n\t\t\t// <h>x[xx]x</h>\t\t-> <h>x^x</h>\t\t\t-> <h>x</h><h>^x</h>\n\t\t\tif ( isContainedWithinOneElement ) {\n\t\t\t\tsplitBlock( writer, selection.focus );\n\t\t\t}\n\t\t\t// Selection over multiple elements.\n\t\t\t//\n\t\t\t// <h>x[x</h><p>y]y<p>\t-> <h>x^</h><p>y</p>\t-> <h>x</h><p>^y</p>\n\t\t\telse {\n\t\t\t\twriter.setSelection( endElement, 0 );\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction splitBlock( writer, splitPos ) {\n\twriter.split( splitPos );\n\twriter.setSelection( splitPos.parent.nextSibling, 0 );\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,OAAOA,OAAO,MAAM,sCAAsC;AAC1D,SAASC,wBAAwB,QAAQ,SAAS;;AAElD;AACA;AACA;AACA;AACA;AACA,eAAe,MAAMC,YAAY,SAASF,OAAO,CAAC;EACjD;AACD;AACA;EACCG,OAAO,GAAG;IACT,MAAMC,KAAK,GAAG,IAAI,CAACC,MAAM,CAACD,KAAK;IAC/B,MAAME,GAAG,GAAGF,KAAK,CAACG,QAAQ;IAE1BH,KAAK,CAACI,MAAM,CAAEC,MAAM,IAAI;MACvBC,UAAU,CAAE,IAAI,CAACL,MAAM,CAACD,KAAK,EAAEK,MAAM,EAAEH,GAAG,CAACK,SAAS,EAAEP,KAAK,CAACQ,MAAM,CAAE;MACpE,IAAI,CAACC,IAAI,CAAE,cAAc,EAAE;QAAEJ;MAAO,CAAC,CAAE;IACxC,CAAC,CAAE;EACJ;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,UAAU,CAAEN,KAAK,EAAEK,MAAM,EAAEE,SAAS,EAAEC,MAAM,EAAG;EACvD,MAAME,gBAAgB,GAAGH,SAAS,CAACI,WAAW;EAC9C,MAAMC,KAAK,GAAGL,SAAS,CAACM,aAAa,EAAE;EACvC,MAAMC,YAAY,GAAGF,KAAK,CAACG,KAAK,CAACC,MAAM;EACvC,MAAMC,UAAU,GAAGL,KAAK,CAACM,GAAG,CAACF,MAAM;;EAEnC;EACA,IAAKR,MAAM,CAACW,OAAO,CAAEL,YAAY,CAAE,IAAIN,MAAM,CAACW,OAAO,CAAEF,UAAU,CAAE,EAAG;IACrE;IACA;IACA;IACA;IACA,IAAK,CAACP,gBAAgB,IAAII,YAAY,IAAIG,UAAU,EAAG;MACtDjB,KAAK,CAACoB,aAAa,CAAEb,SAAS,CAAE;IACjC;IAEA;EACD;EAEA,IAAKG,gBAAgB,EAAG;IACvB,MAAMW,gBAAgB,GAAGxB,wBAAwB,CAAEQ,MAAM,CAACL,KAAK,CAACQ,MAAM,EAAED,SAAS,CAACe,aAAa,EAAE,CAAE;IACnGC,UAAU,CAAElB,MAAM,EAAEO,KAAK,CAACG,KAAK,CAAE;IACjCV,MAAM,CAACmB,qBAAqB,CAAEH,gBAAgB,CAAE;EACjD,CAAC,MAAM;IACN,MAAMI,aAAa,GAAG,EAAGb,KAAK,CAACG,KAAK,CAACW,SAAS,IAAId,KAAK,CAACM,GAAG,CAACS,OAAO,CAAE;IACrE,MAAMC,2BAA2B,GAAKd,YAAY,IAAIG,UAAY;IAElEjB,KAAK,CAACoB,aAAa,CAAEb,SAAS,EAAE;MAAEkB;IAAc,CAAC,CAAE;IAEnD,IAAKA,aAAa,EAAG;MACpB;MACA;MACA;MACA,IAAKG,2BAA2B,EAAG;QAClCL,UAAU,CAAElB,MAAM,EAAEE,SAAS,CAACsB,KAAK,CAAE;MACtC;MACA;MACA;MACA;MAAA,KACK;QACJxB,MAAM,CAACyB,YAAY,CAAEb,UAAU,EAAE,CAAC,CAAE;MACrC;IACD;EACD;AACD;AAEA,SAASM,UAAU,CAAElB,MAAM,EAAE0B,QAAQ,EAAG;EACvC1B,MAAM,CAAC2B,KAAK,CAAED,QAAQ,CAAE;EACxB1B,MAAM,CAACyB,YAAY,CAAEC,QAAQ,CAACf,MAAM,CAACiB,WAAW,EAAE,CAAC,CAAE;AACtD"},"metadata":{},"sourceType":"module"}
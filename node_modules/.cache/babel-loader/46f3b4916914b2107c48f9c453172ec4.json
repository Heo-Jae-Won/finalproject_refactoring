{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/dropdown/button/dropdownbuttonview\n */\n\nimport ButtonView from '../../button/buttonview';\nimport dropdownArrowIcon from '../../../theme/icons/dropdown-arrow.svg';\nimport IconView from '../../icon/iconview';\n\n/**\n * The default dropdown button view class.\n *\n *\t\tconst view = new DropdownButtonView();\n *\n *\t\tview.set( {\n *\t\t\tlabel: 'A button',\n *\t\t\tkeystroke: 'Ctrl+B',\n *\t\t\ttooltip: true\n *\t\t} );\n *\n *\t\tview.render();\n *\n *\t\tdocument.body.append( view.element );\n *\n * Also see the {@link module:ui/dropdown/utils~createDropdown `createDropdown()` util}.\n *\n * @implements module:ui/dropdown/button/dropdownbutton~DropdownButton\n * @extends module:ui/button/buttonview~ButtonView\n */\nexport default class DropdownButtonView extends ButtonView {\n  /**\n   * @inheritDoc\n   */\n  constructor(locale) {\n    super(locale);\n\n    /**\n     * An icon that displays arrow to indicate a dropdown button.\n     *\n     * @readonly\n     * @member {module:ui/icon/iconview~IconView}\n     */\n    this.arrowView = this._createArrowView();\n    this.extendTemplate({\n      attributes: {\n        'aria-haspopup': true,\n        'aria-expanded': this.bindTemplate.to('isOn', value => String(value))\n      }\n    });\n\n    // The DropdownButton interface expects the open event upon which will open the dropdown.\n    this.delegate('execute').to(this, 'open');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  render() {\n    super.render();\n    this.children.add(this.arrowView);\n  }\n\n  /**\n   * Creates a {@link module:ui/icon/iconview~IconView} instance as {@link #arrowView}.\n   *\n   * @private\n   * @returns {module:ui/icon/iconview~IconView}\n   */\n  _createArrowView() {\n    const arrowView = new IconView();\n    arrowView.content = dropdownArrowIcon;\n    arrowView.extendTemplate({\n      attributes: {\n        class: 'ck-dropdown__arrow'\n      }\n    });\n    return arrowView;\n  }\n}","map":{"version":3,"names":["ButtonView","dropdownArrowIcon","IconView","DropdownButtonView","constructor","locale","arrowView","_createArrowView","extendTemplate","attributes","bindTemplate","to","value","String","delegate","render","children","add","content","class"],"sources":["C:/data/project/realproject/node_modules/@ckeditor/ckeditor5-ui/src/dropdown/button/dropdownbuttonview.js"],"sourcesContent":["/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/dropdown/button/dropdownbuttonview\n */\n\nimport ButtonView from '../../button/buttonview';\n\nimport dropdownArrowIcon from '../../../theme/icons/dropdown-arrow.svg';\nimport IconView from '../../icon/iconview';\n\n/**\n * The default dropdown button view class.\n *\n *\t\tconst view = new DropdownButtonView();\n *\n *\t\tview.set( {\n *\t\t\tlabel: 'A button',\n *\t\t\tkeystroke: 'Ctrl+B',\n *\t\t\ttooltip: true\n *\t\t} );\n *\n *\t\tview.render();\n *\n *\t\tdocument.body.append( view.element );\n *\n * Also see the {@link module:ui/dropdown/utils~createDropdown `createDropdown()` util}.\n *\n * @implements module:ui/dropdown/button/dropdownbutton~DropdownButton\n * @extends module:ui/button/buttonview~ButtonView\n */\nexport default class DropdownButtonView extends ButtonView {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * An icon that displays arrow to indicate a dropdown button.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/icon/iconview~IconView}\n\t\t */\n\t\tthis.arrowView = this._createArrowView();\n\n\t\tthis.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\t'aria-haspopup': true,\n\t\t\t\t'aria-expanded': this.bindTemplate.to( 'isOn', value => String( value ) )\n\t\t\t}\n\t\t} );\n\n\t\t// The DropdownButton interface expects the open event upon which will open the dropdown.\n\t\tthis.delegate( 'execute' ).to( this, 'open' );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tthis.children.add( this.arrowView );\n\t}\n\n\t/**\n\t * Creates a {@link module:ui/icon/iconview~IconView} instance as {@link #arrowView}.\n\t *\n\t * @private\n\t * @returns {module:ui/icon/iconview~IconView}\n\t */\n\t_createArrowView() {\n\t\tconst arrowView = new IconView();\n\n\t\tarrowView.content = dropdownArrowIcon;\n\n\t\tarrowView.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck-dropdown__arrow'\n\t\t\t}\n\t\t} );\n\n\t\treturn arrowView;\n\t}\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,OAAOA,UAAU,MAAM,yBAAyB;AAEhD,OAAOC,iBAAiB,MAAM,yCAAyC;AACvE,OAAOC,QAAQ,MAAM,qBAAqB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAMC,kBAAkB,SAASH,UAAU,CAAC;EAC1D;AACD;AACA;EACCI,WAAW,CAAEC,MAAM,EAAG;IACrB,KAAK,CAAEA,MAAM,CAAE;;IAEf;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,SAAS,GAAG,IAAI,CAACC,gBAAgB,EAAE;IAExC,IAAI,CAACC,cAAc,CAAE;MACpBC,UAAU,EAAE;QACX,eAAe,EAAE,IAAI;QACrB,eAAe,EAAE,IAAI,CAACC,YAAY,CAACC,EAAE,CAAE,MAAM,EAAEC,KAAK,IAAIC,MAAM,CAAED,KAAK,CAAE;MACxE;IACD,CAAC,CAAE;;IAEH;IACA,IAAI,CAACE,QAAQ,CAAE,SAAS,CAAE,CAACH,EAAE,CAAE,IAAI,EAAE,MAAM,CAAE;EAC9C;;EAEA;AACD;AACA;EACCI,MAAM,GAAG;IACR,KAAK,CAACA,MAAM,EAAE;IAEd,IAAI,CAACC,QAAQ,CAACC,GAAG,CAAE,IAAI,CAACX,SAAS,CAAE;EACpC;;EAEA;AACD;AACA;AACA;AACA;AACA;EACCC,gBAAgB,GAAG;IAClB,MAAMD,SAAS,GAAG,IAAIJ,QAAQ,EAAE;IAEhCI,SAAS,CAACY,OAAO,GAAGjB,iBAAiB;IAErCK,SAAS,CAACE,cAAc,CAAE;MACzBC,UAAU,EAAE;QACXU,KAAK,EAAE;MACR;IACD,CAAC,CAAE;IAEH,OAAOb,SAAS;EACjB;AACD"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { instance } from \"./axios.util\";\nexport const onPasswordUpdate = object => {\n  return instance({\n    url: '/user/password',\n    method: 'patch',\n    data: object\n  });\n};\nexport const getTradeSellChart = seller => {\n  return instance({\n    url: '/tradeinfo/sellchart' + seller,\n    method: 'get'\n  });\n};\nexport const getTradeSellList = (seller, page) => {\n  return instance({\n    url: '/tradeinfo/selllist/' + seller,\n    method: 'get',\n    params: {\n      page\n    }\n  });\n};\nexport const getReceivedReview = (page, unickname) => {\n  return instance({\n    url: '/review',\n    method: 'get',\n    params: {\n      page,\n      num: 6,\n      receiver: unickname\n    }\n  });\n};\nexport const getPaymentId = paymetnId => {\n  return instance({\n    url: '/payment' + paymetnId,\n    method: 'get'\n  });\n};\nexport const onPayment = formData => {\n  return instance({\n    url: '/payment',\n    method: 'post',\n    data: formData\n  });\n};\nexport const onReviewInsert = formData => {\n  return instance({\n    url: '/review',\n    method: 'post',\n    data: formData\n  });\n};\nexport const getUserNickname = unickname => {\n  return instance({\n    url: '/user/data/' + unickname,\n    method: 'get'\n  });\n};\nexport const getUserId = userId => {\n  return instance({\n    url: '/user/' + userId,\n    method: 'get'\n  });\n};\nexport const onUserInfoUpdate = data => {\n  return instance({\n    url: '/user/update',\n    method: 'post',\n    data,\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n};\naxios.post('/api/user/update', data, {\n  headers: {\n    'Content-Type': 'multipart/form-data'\n  }\n});","map":{"version":3,"names":["instance","onPasswordUpdate","object","url","method","data","getTradeSellChart","seller","getTradeSellList","page","params","getReceivedReview","unickname","num","receiver","getPaymentId","paymetnId","onPayment","formData","onReviewInsert","getUserNickname","getUserId","userId","onUserInfoUpdate","headers","axios","post"],"sources":["C:/Users/user/Desktop/finalproject/finalproject_refactoring/front/src/util/axios/my.js"],"sourcesContent":["import { instance } from \"./axios.util\"\r\n\r\nexport const onPasswordUpdate = (object) => {\r\n    return instance({\r\n        url: '/user/password',\r\n        method: 'patch',\r\n        data: object\r\n    })\r\n}\r\n\r\nexport const getTradeSellChart = (seller) => {\r\n    return instance({\r\n        url: '/tradeinfo/sellchart' + seller,\r\n        method: 'get'\r\n    })\r\n}\r\n\r\nexport const getTradeSellList = (seller, page) => {\r\n    return instance({\r\n        url: '/tradeinfo/selllist/' + seller,\r\n        method: 'get',\r\n        params: {\r\n            page,\r\n        }\r\n    })\r\n}\r\n\r\nexport const getReceivedReview = (page, unickname) => {\r\n    return instance({\r\n        url: '/review',\r\n        method: 'get',\r\n        params: {\r\n            page,\r\n            num: 6,\r\n            receiver: unickname\r\n        }\r\n    })\r\n}\r\n\r\nexport const getPaymentId = (paymetnId) => {\r\n    return instance({\r\n        url: '/payment' + paymetnId,\r\n        method: 'get'\r\n    })\r\n}\r\n\r\nexport const onPayment = (formData) => {\r\n    return instance({\r\n        url: '/payment',\r\n        method: 'post',\r\n        data: formData\r\n    })\r\n}\r\n\r\nexport const onReviewInsert = (formData) => {\r\n    return instance({\r\n        url: '/review',\r\n        method: 'post',\r\n        data: formData\r\n    })\r\n}\r\n\r\nexport const getUserNickname = (unickname) => {\r\n    return instance({\r\n        url: '/user/data/' + unickname,\r\n        method: 'get'\r\n    })\r\n}\r\n\r\nexport const getUserId = (userId) => {\r\n    return instance({\r\n        url: '/user/' + userId,\r\n        method: 'get'\r\n    })\r\n}\r\n\r\nexport const onUserInfoUpdate = (data) => {\r\n    return instance({\r\n        url: '/user/update',\r\n        method: 'post',\r\n        data,\r\n        headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n        }\r\n    })\r\n}\r\n\r\naxios.post('/api/user/update', data, {\r\n    headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n    }\r\n})\r\n\r\n\r\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,cAAc;AAEvC,OAAO,MAAMC,gBAAgB,GAAIC,MAAM,IAAK;EACxC,OAAOF,QAAQ,CAAC;IACZG,GAAG,EAAE,gBAAgB;IACrBC,MAAM,EAAE,OAAO;IACfC,IAAI,EAAEH;EACV,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMI,iBAAiB,GAAIC,MAAM,IAAK;EACzC,OAAOP,QAAQ,CAAC;IACZG,GAAG,EAAE,sBAAsB,GAAGI,MAAM;IACpCH,MAAM,EAAE;EACZ,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMI,gBAAgB,GAAG,CAACD,MAAM,EAAEE,IAAI,KAAK;EAC9C,OAAOT,QAAQ,CAAC;IACZG,GAAG,EAAE,sBAAsB,GAAGI,MAAM;IACpCH,MAAM,EAAE,KAAK;IACbM,MAAM,EAAE;MACJD;IACJ;EACJ,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAME,iBAAiB,GAAG,CAACF,IAAI,EAAEG,SAAS,KAAK;EAClD,OAAOZ,QAAQ,CAAC;IACZG,GAAG,EAAE,SAAS;IACdC,MAAM,EAAE,KAAK;IACbM,MAAM,EAAE;MACJD,IAAI;MACJI,GAAG,EAAE,CAAC;MACNC,QAAQ,EAAEF;IACd;EACJ,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMG,YAAY,GAAIC,SAAS,IAAK;EACvC,OAAOhB,QAAQ,CAAC;IACZG,GAAG,EAAE,UAAU,GAAGa,SAAS;IAC3BZ,MAAM,EAAE;EACZ,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMa,SAAS,GAAIC,QAAQ,IAAK;EACnC,OAAOlB,QAAQ,CAAC;IACZG,GAAG,EAAE,UAAU;IACfC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEa;EACV,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMC,cAAc,GAAID,QAAQ,IAAK;EACxC,OAAOlB,QAAQ,CAAC;IACZG,GAAG,EAAE,SAAS;IACdC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEa;EACV,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAME,eAAe,GAAIR,SAAS,IAAK;EAC1C,OAAOZ,QAAQ,CAAC;IACZG,GAAG,EAAE,aAAa,GAAGS,SAAS;IAC9BR,MAAM,EAAE;EACZ,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMiB,SAAS,GAAIC,MAAM,IAAK;EACjC,OAAOtB,QAAQ,CAAC;IACZG,GAAG,EAAE,QAAQ,GAAGmB,MAAM;IACtBlB,MAAM,EAAE;EACZ,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMmB,gBAAgB,GAAIlB,IAAI,IAAK;EACtC,OAAOL,QAAQ,CAAC;IACZG,GAAG,EAAE,cAAc;IACnBC,MAAM,EAAE,MAAM;IACdC,IAAI;IACJmB,OAAO,EAAE;MACL,cAAc,EAAE;IACpB;EACJ,CAAC,CAAC;AACN,CAAC;AAEDC,KAAK,CAACC,IAAI,CAAC,kBAAkB,EAAErB,IAAI,EAAE;EACjCmB,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/panel/balloon/balloonpanelview\n */\n\nimport View from '../../view';\nimport { getOptimalPosition } from '@ckeditor/ckeditor5-utils/src/dom/position';\nimport isRange from '@ckeditor/ckeditor5-utils/src/dom/isrange';\nimport toUnit from '@ckeditor/ckeditor5-utils/src/dom/tounit';\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\nimport { isElement } from 'lodash-es';\nimport '../../../theme/components/panel/balloonpanel.css';\nconst toPx = toUnit('px');\nconst defaultLimiterElement = global.document.body;\n\n/**\n * The balloon panel view class.\n *\n * A floating container which can\n * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#pin pin} to any\n * {@link module:utils/dom/position~Options#target target} in the DOM and remain in that position\n * e.g. when the web page is scrolled.\n *\n * The balloon panel can be used to display contextual, non-blocking UI like forms, toolbars and\n * the like in its {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#content} view\n * collection.\n *\n * There is a number of {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}\n * that the balloon can use, automatically switching from one to another when the viewport space becomes\n * scarce to keep the balloon visible to the user as long as it is possible. The balloon will also\n * accept any custom position set provided by the user compatible with the\n * {@link module:utils/dom/position~Options options}.\n *\n *\t\tconst panel = new BalloonPanelView( locale );\n *\t\tconst childView = new ChildView();\n *\t\tconst positions = BalloonPanelView.defaultPositions;\n *\n *\t\tpanel.render();\n *\n *\t\t// Add a child view to the panel's content collection.\n *\t\tpanel.content.add( childView );\n *\n *\t\t// Start pinning the panel to an element with the \"target\" id DOM.\n *\t\t// The balloon will remain pinned until unpin() is called.\n *\t\tpanel.pin( {\n *\t\t\ttarget: document.querySelector( '#target' ),\n *\t\t\tpositions: [\n *\t\t\t\tpositions.northArrowSouth,\n *\t\t\t\tpositions.southArrowNorth\n *\t\t\t]\n *\t\t} );\n *\n * @extends module:ui/view~View\n */\nexport default class BalloonPanelView extends View {\n  /**\n   * @inheritDoc\n   */\n  constructor(locale) {\n    super(locale);\n    const bind = this.bindTemplate;\n\n    /**\n     * The absolute top position of the balloon panel in pixels.\n     *\n     * @observable\n     * @default 0\n     * @member {Number} #top\n     */\n    this.set('top', 0);\n\n    /**\n     * The absolute left position of the balloon panel in pixels.\n     *\n     * @observable\n     * @default 0\n     * @member {Number} #left\n     */\n    this.set('left', 0);\n\n    /**\n     * The balloon panel's current position. The position name is reflected in the CSS class set\n     * to the balloon, i.e. `.ck-balloon-panel_arrow_nw` for the \"arrow_nw\" position. The class\n     * controls the minor aspects of the balloon's visual appearance like the placement\n     * of an {@link #withArrow arrow}. To support a new position, an additional CSS must be created.\n     *\n     * Default position names correspond with\n     * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}.\n     *\n     * See the {@link #attachTo} and {@link #pin} methods to learn about custom balloon positions.\n     *\n     * @observable\n     * @default 'arrow_nw'\n     * @member {'arrow_nw'|'arrow_ne'|'arrow_sw'|'arrow_se'} #position\n     */\n    this.set('position', 'arrow_nw');\n\n    /**\n     * Controls whether the balloon panel is visible or not.\n     *\n     * @observable\n     * @default false\n     * @member {Boolean} #isVisible\n     */\n    this.set('isVisible', false);\n\n    /**\n     * Controls whether the balloon panel has an arrow. The presence of the arrow\n     * is reflected in the `ck-balloon-panel_with-arrow` CSS class.\n     *\n     * @observable\n     * @default true\n     * @member {Boolean} #withArrow\n     */\n    this.set('withArrow', true);\n\n    /**\n     * An additional CSS class added to the {@link #element}.\n     *\n     * @observable\n     * @member {String} #class\n     */\n    this.set('class');\n\n    /**\n     * A callback that starts pinning the panel when {@link #isVisible} gets\n     * `true`. Used by {@link #pin}.\n     *\n     * @private\n     * @member {Function} #_pinWhenIsVisibleCallback\n     */\n\n    /**\n     * A collection of the child views that creates the balloon panel contents.\n     *\n     * @readonly\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n    this.content = this.createCollection();\n    this.setTemplate({\n      tag: 'div',\n      attributes: {\n        class: ['ck', 'ck-balloon-panel', bind.to('position', value => `ck-balloon-panel_${value}`), bind.if('isVisible', 'ck-balloon-panel_visible'), bind.if('withArrow', 'ck-balloon-panel_with-arrow'), bind.to('class')],\n        style: {\n          top: bind.to('top', toPx),\n          left: bind.to('left', toPx)\n        }\n      },\n      children: this.content\n    });\n  }\n\n  /**\n   * Shows the panel.\n   *\n   * See {@link #isVisible}.\n   */\n  show() {\n    this.isVisible = true;\n  }\n\n  /**\n   * Hides the panel.\n   *\n   * See {@link #isVisible}.\n   */\n  hide() {\n    this.isVisible = false;\n  }\n\n  /**\n   * Attaches the panel to a specified {@link module:utils/dom/position~Options#target} with a\n   * smart positioning heuristics that chooses from available positions to make sure the panel\n   * is visible to the user i.e. within the limits of the viewport.\n   *\n   * This method accepts configuration {@link module:utils/dom/position~Options options}\n   * to set the `target`, optional `limiter` and `positions` the balloon should choose from.\n   *\n   *\t\tconst panel = new BalloonPanelView( locale );\n   *\t\tconst positions = BalloonPanelView.defaultPositions;\n   *\n   *\t\tpanel.render();\n   *\n   *\t\t// Attach the panel to an element with the \"target\" id DOM.\n   *\t\tpanel.attachTo( {\n   *\t\t\ttarget: document.querySelector( '#target' ),\n   *\t\t\tpositions: [\n   *\t\t\t\tpositions.northArrowSouth,\n   *\t\t\t\tpositions.southArrowNorth\n   *\t\t\t]\n   *\t\t} );\n   *\n   * **Note**: Attaching the panel will also automatically {@link #show} it.\n   *\n   * **Note**: An attached panel will not follow its target when the window is scrolled or resized.\n   * See the {@link #pin} method for a more permanent positioning strategy.\n   *\n   * @param {module:utils/dom/position~Options} options Positioning options compatible with\n   * {@link module:utils/dom/position~getOptimalPosition}. Default `positions` array is\n   * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}.\n   */\n  attachTo(options) {\n    this.show();\n    const defaultPositions = BalloonPanelView.defaultPositions;\n    const positionOptions = Object.assign({}, {\n      element: this.element,\n      positions: [defaultPositions.southArrowNorth, defaultPositions.southArrowNorthMiddleWest, defaultPositions.southArrowNorthMiddleEast, defaultPositions.southArrowNorthWest, defaultPositions.southArrowNorthEast, defaultPositions.northArrowSouth, defaultPositions.northArrowSouthMiddleWest, defaultPositions.northArrowSouthMiddleEast, defaultPositions.northArrowSouthWest, defaultPositions.northArrowSouthEast, defaultPositions.viewportStickyNorth],\n      limiter: defaultLimiterElement,\n      fitInViewport: true\n    }, options);\n    const optimalPosition = BalloonPanelView._getOptimalPosition(positionOptions);\n\n    // Usually browsers make some problems with super accurate values like 104.345px\n    // so it is better to use int values.\n    const left = parseInt(optimalPosition.left);\n    const top = parseInt(optimalPosition.top);\n    const {\n      name: position,\n      config = {}\n    } = optimalPosition;\n    const {\n      withArrow = true\n    } = config;\n    Object.assign(this, {\n      top,\n      left,\n      position,\n      withArrow\n    });\n  }\n\n  /**\n   * Works the same way as the {@link #attachTo} method except that the position of the panel is\n   * continuously updated when:\n   *\n   * * any ancestor of the {@link module:utils/dom/position~Options#target}\n   * or {@link module:utils/dom/position~Options#limiter} is scrolled,\n   * * the browser window gets resized or scrolled.\n   *\n   * Thanks to that, the panel always sticks to the {@link module:utils/dom/position~Options#target}\n   * and is immune to the changing environment.\n   *\n   *\t\tconst panel = new BalloonPanelView( locale );\n   *\t\tconst positions = BalloonPanelView.defaultPositions;\n   *\n   *\t\tpanel.render();\n   *\n   *\t\t// Pin the panel to an element with the \"target\" id DOM.\n   *\t\tpanel.pin( {\n   *\t\t\ttarget: document.querySelector( '#target' ),\n   *\t\t\tpositions: [\n   *\t\t\t\tpositions.northArrowSouth,\n   *\t\t\t\tpositions.southArrowNorth\n   *\t\t\t]\n   *\t\t} );\n   *\n   * To leave the pinned state, use the {@link #unpin} method.\n   *\n   * **Note**: Pinning the panel will also automatically {@link #show} it.\n   *\n   * @param {module:utils/dom/position~Options} options Positioning options compatible with\n   * {@link module:utils/dom/position~getOptimalPosition}. Default `positions` array is\n   * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}.\n   */\n  pin(options) {\n    this.unpin();\n    this._pinWhenIsVisibleCallback = () => {\n      if (this.isVisible) {\n        this._startPinning(options);\n      } else {\n        this._stopPinning();\n      }\n    };\n    this._startPinning(options);\n\n    // Control the state of the listeners depending on whether the panel is visible\n    // or not.\n    // TODO: Use on() (https://github.com/ckeditor/ckeditor5-utils/issues/144).\n    this.listenTo(this, 'change:isVisible', this._pinWhenIsVisibleCallback);\n  }\n\n  /**\n   * Stops pinning the panel, as set up by {@link #pin}.\n   */\n  unpin() {\n    if (this._pinWhenIsVisibleCallback) {\n      // Deactivate listeners attached by pin().\n      this._stopPinning();\n\n      // Deactivate the panel pin() control logic.\n      // TODO: Use off() (https://github.com/ckeditor/ckeditor5-utils/issues/144).\n      this.stopListening(this, 'change:isVisible', this._pinWhenIsVisibleCallback);\n      this._pinWhenIsVisibleCallback = null;\n      this.hide();\n    }\n  }\n\n  /**\n   * Starts managing the pinned state of the panel. See {@link #pin}.\n   *\n   * @private\n   * @param {module:utils/dom/position~Options} options Positioning options compatible with\n   * {@link module:utils/dom/position~getOptimalPosition}.\n   */\n  _startPinning(options) {\n    this.attachTo(options);\n    const targetElement = getDomElement(options.target);\n    const limiterElement = options.limiter ? getDomElement(options.limiter) : defaultLimiterElement;\n\n    // Then we need to listen on scroll event of eny element in the document.\n    this.listenTo(global.document, 'scroll', (evt, domEvt) => {\n      const scrollTarget = domEvt.target;\n\n      // The position needs to be updated if the positioning target is within the scrolled element.\n      const isWithinScrollTarget = targetElement && scrollTarget.contains(targetElement);\n\n      // The position needs to be updated if the positioning limiter is within the scrolled element.\n      const isLimiterWithinScrollTarget = limiterElement && scrollTarget.contains(limiterElement);\n\n      // The positioning target and/or limiter can be a Rect, object etc..\n      // There's no way to optimize the listener then.\n      if (isWithinScrollTarget || isLimiterWithinScrollTarget || !targetElement || !limiterElement) {\n        this.attachTo(options);\n      }\n    }, {\n      useCapture: true\n    });\n\n    // We need to listen on window resize event and update position.\n    this.listenTo(global.window, 'resize', () => {\n      this.attachTo(options);\n    });\n  }\n\n  /**\n   * Stops managing the pinned state of the panel. See {@link #pin}.\n   *\n   * @private\n   */\n  _stopPinning() {\n    this.stopListening(global.document, 'scroll');\n    this.stopListening(global.window, 'resize');\n  }\n}\n\n// Returns the DOM element for given object or null, if there is none,\n// e.g. when the passed object is a Rect instance or so.\n//\n// @private\n// @param {*} object\n// @returns {HTMLElement|null}\nfunction getDomElement(object) {\n  if (isElement(object)) {\n    return object;\n  }\n  if (isRange(object)) {\n    return object.commonAncestorContainer;\n  }\n  if (typeof object == 'function') {\n    return getDomElement(object());\n  }\n  return null;\n}\n\n/**\n * A side offset of the arrow tip from the edge of the balloon. Controlled by CSS.\n *\n *\t\t ┌───────────────────────┐\n *\t\t │                       │\n *\t\t │         Balloon       │\n *\t\t │         Content       │\n *\t\t │                       │\n *\t\t └──+    +───────────────┘\n *\t\t |   \\  /\n *\t\t |    \\/\n *\t\t>┼─────┼< ─────────────────────── side offset\n *\n *\n * @default 25\n * @member {Number} module:ui/panel/balloon/balloonpanelview~BalloonPanelView.arrowSideOffset\n */\nBalloonPanelView.arrowSideOffset = 25;\n\n/**\n * A height offset of the arrow from the edge of the balloon. Controlled by CSS.\n *\n *\t\t ┌───────────────────────┐\n *\t\t │                       │\n *\t\t │         Balloon       │\n *\t\t │         Content       │      ╱-- arrow height offset\n *\t\t │                       │      V\n *\t\t └──+    +───────────────┘ --- ─┼───────\n *\t\t     \\  /                       │\n *\t\t      \\/                        │\n *\t\t────────────────────────────────┼───────\n *\t\t                                ^\n *\n *\n *\t\t>┼────┼<  arrow height offset\n *\t\t │    │\n *\t\t │    ┌────────────────────────┐\n *\t\t │    │                        │\n *\t\t │   ╱                         │\n *\t\t │ ╱            Balloon        │\n *\t\t │ ╲            Content        │\n *\t\t │   ╲                         │\n *\t\t │    │                        │\n *\t\t │    └────────────────────────┘\n *\n *\n * @default 10\n * @member {Number} module:ui/panel/balloon/balloonpanelview~BalloonPanelView.arrowHeightOffset\n */\nBalloonPanelView.arrowHeightOffset = 10;\n\n/**\n * A vertical offset of the balloon panel from the edge of the viewport if sticky.\n * It helps in accessing toolbar buttons underneath the balloon panel.\n *\n *\t\t  ┌───────────────────────────────────────────────────┐\n *\t\t  │                      Target                       │\n *\t\t  │                                                   │\n *\t\t  │                            /── vertical offset    │\n *\t\t┌─────────────────────────────V─────────────────────────┐\n *\t\t│ Toolbar            ┌─────────────┐                    │\n *\t\t├────────────────────│   Balloon   │────────────────────┤\n *\t\t│ │                  └─────────────┘                  │ │\n *\t\t│ │                                                   │ │\n *\t\t│ │                                                   │ │\n *\t\t│ │                                                   │ │\n *\t\t│ └───────────────────────────────────────────────────┘ │\n *\t\t│                        Viewport                       │\n *\t\t└───────────────────────────────────────────────────────┘\n *\n * @default 20\n * @member {Number} module:ui/panel/balloon/balloonpanelview~BalloonPanelView.stickyVerticalOffset\n */\nBalloonPanelView.stickyVerticalOffset = 20;\n\n/**\n * Function used to calculate the optimal position for the balloon.\n *\n * @protected\n * @member {Function} module:ui/panel/balloon/balloonpanelview~BalloonPanelView._getOptimalPosition\n */\nBalloonPanelView._getOptimalPosition = getOptimalPosition;\n\n/**\n * A default set of positioning functions used by the balloon panel view\n * when attaching using the {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#attachTo} method.\n *\n * The available positioning functions are as follows:\n *\n *\n *\n * **North west**\n *\n * * `northWestArrowSouthWest`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t V\n *\t\t [ Target ]\n *\n * * `northWestArrowSouthMiddleWest`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t    V\n *\t\t    [ Target ]\n *\n * * `northWestArrowSouth`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t         V\n *\t\t         [ Target ]\n *\n * * `northWestArrowSouthMiddleEast`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t             V\n *\t\t             [ Target ]\n *\n * * `northWestArrowSouthEast`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t                 V\n *\t\t                 [ Target ]\n *\n *\n *\n * **North**\n *\n * * `northArrowSouthWest`\n *\n *\t\t    +-----------------+\n *\t\t    |     Balloon     |\n *\t\t    +-----------------+\n *\t\t     V\n *\t\t[ Target ]\n *\n * * `northArrowSouthMiddleWest`\n *\n *\t\t +-----------------+\n *\t\t |     Balloon     |\n *\t\t +-----------------+\n *\t\t     V\n *\t\t[ Target ]\n *\n * * `northArrowSouth`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t         V\n *\t\t    [ Target ]\n *\n * * `northArrowSouthMiddleEast`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t             V\n *\t\t        [ Target ]\n *\n * * `northArrowSouthEast`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t                V\n *\t\t           [ Target ]\n *\n * **North east**\n *\n * * `northEastArrowSouthWest`\n *\n *\t\t        +-----------------+\n *\t\t        |     Balloon     |\n *\t\t        +-----------------+\n *\t\t         V\n *\t\t[ Target ]\n *\n *\n * * `northEastArrowSouthMiddleWest`\n *\n *\t\t     +-----------------+\n *\t\t     |     Balloon     |\n *\t\t     +-----------------+\n *\t\t         V\n *\t\t[ Target ]\n *\n * * `northEastArrowSouth`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t         V\n *\t\t[ Target ]\n *\n * * `northEastArrowSouthMiddleEast`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t             V\n *\t\t    [ Target ]\n *\n * * `northEastArrowSouthEast`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t                 V\n *\t\t        [ Target ]\n *\n *\n *\n * **South**\n *\n *\n * * `southArrowNorthWest`\n *\n *\t\t[ Target ]\n *\t\t     ^\n *\t\t    +-----------------+\n *\t\t    |     Balloon     |\n *\t\t    +-----------------+\n *\n * * `southArrowNorthMiddleWest`\n *\n *\t\t   [ Target ]\n *\t\t        ^\n *\t\t    +-----------------+\n *\t\t    |     Balloon     |\n *\t\t    +-----------------+\n *\n * * `southArrowNorth`\n *\n *\t\t    [ Target ]\n *\t\t         ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southArrowNorthMiddleEast`\n *\n *\t\t            [ Target ]\n *\t\t                 ^\n *\t\t   +-----------------+\n *\t\t   |     Balloon     |\n *\t\t   +-----------------+\n *\n * * `southArrowNorthEast`\n *\n *\t\t            [ Target ]\n *\t\t                 ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n *\n *\n * **South west**\n *\n * * `southWestArrowNorthWest`\n *\n *\t\t [ Target ]\n *\t\t ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southWestArrowNorthMiddleWest`\n *\n *\t\t     [ Target ]\n *\t\t     ^\n *\t\t +-----------------+\n *\t\t |     Balloon     |\n *\t\t +-----------------+\n *\n * * `southWestArrowNorth`\n *\n *\t\t         [ Target ]\n *\t\t         ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southWestArrowNorthMiddleEast`\n *\n *\t\t              [ Target ]\n *\t\t              ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southWestArrowNorthEast`\n *\n *\t\t                 [ Target ]\n *\t\t                 ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n *\n *\n * **South east**\n *\n * * `southEastArrowNorthWest`\n *\n *\t\t[ Target ]\n *\t\t         ^\n *\t\t        +-----------------+\n *\t\t        |     Balloon     |\n *\t\t        +-----------------+\n * * `southEastArrowNorthMiddleWest`\n *\n *\t\t   [ Target ]\n *\t\t            ^\n *\t\t        +-----------------+\n *\t\t        |     Balloon     |\n *\t\t        +-----------------+\n *\n * * `southEastArrowNorth`\n *\n *\t\t[ Target ]\n *\t\t         ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southEastArrowNorthMiddleEast`\n *\n *\t\t     [ Target ]\n *\t\t              ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southEastArrowNorthEast`\n *\n *\t\t        [ Target ]\n *\t\t                 ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n *\n *\n * **West**\n *\n * * `westArrowEast`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |>[ Target ]\n *\t\t+-----------------+\n *\n * **East**\n *\n * * `eastArrowWest`\n *\n *\t\t           +-----------------+\n *\t\t[ Target ]<|     Balloon     |\n *\t\t           +-----------------+\n *\n *\n *\n * **Sticky**\n *\n * * `viewportStickyNorth`\n *\n *\t\t    +---------------------------+\n *\t\t    |        [ Target ]         |\n *\t\t    |                           |\n *\t\t+-----------------------------------+\n *\t\t|   |    +-----------------+    |   |\n *\t\t|   |    |     Balloon     |    |   |\n *\t\t|   |    +-----------------+    |   |\n *\t\t|   |                           |   |\n *\t\t|   |                           |   |\n *\t\t|   |                           |   |\n *\t\t|   |                           |   |\n *\t\t|   +---------------------------+   |\n *\t\t|             Viewport              |\n *\t\t+-----------------------------------+\n *\n * See {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#attachTo}.\n *\n * Positioning functions must be compatible with {@link module:utils/dom/position~Position}.\n *\n * Default positioning functions with customized offsets can be generated using\n * {@link module:ui/panel/balloon/balloonpanelview~generatePositions}.\n *\n * The name that the position function returns will be reflected in the balloon panel's class that\n * controls the placement of the \"arrow\". See {@link #position} to learn more.\n *\n * @member {Object.<String,module:utils/dom/position~PositioningFunction>}\n * module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions\n */\nBalloonPanelView.defaultPositions = generatePositions();\n\n/**\n * Returns available {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView}\n * {@link module:utils/dom/position~PositioningFunction positioning functions} adjusted by the specific offsets.\n *\n * @protected\n * @param {Object} [options] Options to generate positions. If not specified, this helper will simply return\n * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}.\n * @param {Number} [options.sideOffset] A custom side offset (in pixels) of each position. If\n * not specified, {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.arrowSideOffset the default value}\n * will be used.\n * @param {Number} [options.heightOffset] A custom height offset (in pixels) of each position. If\n * not specified, {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.arrowHeightOffset the default value}\n * will be used.\n * @param {Number} [options.stickyVerticalOffset] A custom offset (in pixels) of the `viewportStickyNorth` positioning function.\n * If not specified, {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.stickyVerticalOffset the default value}\n * will be used.\n * @param {Object} [options.config] Additional configuration of the balloon balloon panel view.\n * Currently only {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#withArrow} is supported. Learn more\n * about {@link module:utils/dom/position~PositioningFunction positioning functions}.\n * @returns {Object.<String,module:utils/dom/position~PositioningFunction>}\n */\nexport function generatePositions() {\n  let {\n    sideOffset = BalloonPanelView.arrowSideOffset,\n    heightOffset = BalloonPanelView.arrowHeightOffset,\n    stickyVerticalOffset = BalloonPanelView.stickyVerticalOffset,\n    config\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return {\n    // ------- North west\n\n    northWestArrowSouthWest: (targetRect, balloonRect) => ({\n      top: getNorthTop(targetRect, balloonRect),\n      left: targetRect.left - sideOffset,\n      name: 'arrow_sw',\n      ...(config && {\n        config\n      })\n    }),\n    northWestArrowSouthMiddleWest: (targetRect, balloonRect) => ({\n      top: getNorthTop(targetRect, balloonRect),\n      left: targetRect.left - balloonRect.width * .25 - sideOffset,\n      name: 'arrow_smw',\n      ...(config && {\n        config\n      })\n    }),\n    northWestArrowSouth: (targetRect, balloonRect) => ({\n      top: getNorthTop(targetRect, balloonRect),\n      left: targetRect.left - balloonRect.width / 2,\n      name: 'arrow_s',\n      ...(config && {\n        config\n      })\n    }),\n    northWestArrowSouthMiddleEast: (targetRect, balloonRect) => ({\n      top: getNorthTop(targetRect, balloonRect),\n      left: targetRect.left - balloonRect.width * .75 + sideOffset,\n      name: 'arrow_sme',\n      ...(config && {\n        config\n      })\n    }),\n    northWestArrowSouthEast: (targetRect, balloonRect) => ({\n      top: getNorthTop(targetRect, balloonRect),\n      left: targetRect.left - balloonRect.width + sideOffset,\n      name: 'arrow_se',\n      ...(config && {\n        config\n      })\n    }),\n    // ------- North\n\n    northArrowSouthWest: (targetRect, balloonRect) => ({\n      top: getNorthTop(targetRect, balloonRect),\n      left: targetRect.left + targetRect.width / 2 - sideOffset,\n      name: 'arrow_sw',\n      ...(config && {\n        config\n      })\n    }),\n    northArrowSouthMiddleWest: (targetRect, balloonRect) => ({\n      top: getNorthTop(targetRect, balloonRect),\n      left: targetRect.left + targetRect.width / 2 - balloonRect.width * .25 - sideOffset,\n      name: 'arrow_smw',\n      ...(config && {\n        config\n      })\n    }),\n    northArrowSouth: (targetRect, balloonRect) => ({\n      top: getNorthTop(targetRect, balloonRect),\n      left: targetRect.left + targetRect.width / 2 - balloonRect.width / 2,\n      name: 'arrow_s',\n      ...(config && {\n        config\n      })\n    }),\n    northArrowSouthMiddleEast: (targetRect, balloonRect) => ({\n      top: getNorthTop(targetRect, balloonRect),\n      left: targetRect.left + targetRect.width / 2 - balloonRect.width * .75 + sideOffset,\n      name: 'arrow_sme',\n      ...(config && {\n        config\n      })\n    }),\n    northArrowSouthEast: (targetRect, balloonRect) => ({\n      top: getNorthTop(targetRect, balloonRect),\n      left: targetRect.left + targetRect.width / 2 - balloonRect.width + sideOffset,\n      name: 'arrow_se',\n      ...(config && {\n        config\n      })\n    }),\n    // ------- North east\n\n    northEastArrowSouthWest: (targetRect, balloonRect) => ({\n      top: getNorthTop(targetRect, balloonRect),\n      left: targetRect.right - sideOffset,\n      name: 'arrow_sw',\n      ...(config && {\n        config\n      })\n    }),\n    northEastArrowSouthMiddleWest: (targetRect, balloonRect) => ({\n      top: getNorthTop(targetRect, balloonRect),\n      left: targetRect.right - balloonRect.width * .25 - sideOffset,\n      name: 'arrow_smw',\n      ...(config && {\n        config\n      })\n    }),\n    northEastArrowSouth: (targetRect, balloonRect) => ({\n      top: getNorthTop(targetRect, balloonRect),\n      left: targetRect.right - balloonRect.width / 2,\n      name: 'arrow_s',\n      ...(config && {\n        config\n      })\n    }),\n    northEastArrowSouthMiddleEast: (targetRect, balloonRect) => ({\n      top: getNorthTop(targetRect, balloonRect),\n      left: targetRect.right - balloonRect.width * .75 + sideOffset,\n      name: 'arrow_sme',\n      ...(config && {\n        config\n      })\n    }),\n    northEastArrowSouthEast: (targetRect, balloonRect) => ({\n      top: getNorthTop(targetRect, balloonRect),\n      left: targetRect.right - balloonRect.width + sideOffset,\n      name: 'arrow_se',\n      ...(config && {\n        config\n      })\n    }),\n    // ------- South west\n\n    southWestArrowNorthWest: (targetRect, balloonRect) => ({\n      top: getSouthTop(targetRect, balloonRect),\n      left: targetRect.left - sideOffset,\n      name: 'arrow_nw',\n      ...(config && {\n        config\n      })\n    }),\n    southWestArrowNorthMiddleWest: (targetRect, balloonRect) => ({\n      top: getSouthTop(targetRect, balloonRect),\n      left: targetRect.left - balloonRect.width * .25 - sideOffset,\n      name: 'arrow_nmw',\n      ...(config && {\n        config\n      })\n    }),\n    southWestArrowNorth: (targetRect, balloonRect) => ({\n      top: getSouthTop(targetRect, balloonRect),\n      left: targetRect.left - balloonRect.width / 2,\n      name: 'arrow_n',\n      ...(config && {\n        config\n      })\n    }),\n    southWestArrowNorthMiddleEast: (targetRect, balloonRect) => ({\n      top: getSouthTop(targetRect, balloonRect),\n      left: targetRect.left - balloonRect.width * .75 + sideOffset,\n      name: 'arrow_nme',\n      ...(config && {\n        config\n      })\n    }),\n    southWestArrowNorthEast: (targetRect, balloonRect) => ({\n      top: getSouthTop(targetRect, balloonRect),\n      left: targetRect.left - balloonRect.width + sideOffset,\n      name: 'arrow_ne',\n      ...(config && {\n        config\n      })\n    }),\n    // ------- South\n\n    southArrowNorthWest: (targetRect, balloonRect) => ({\n      top: getSouthTop(targetRect, balloonRect),\n      left: targetRect.left + targetRect.width / 2 - sideOffset,\n      name: 'arrow_nw',\n      ...(config && {\n        config\n      })\n    }),\n    southArrowNorthMiddleWest: (targetRect, balloonRect) => ({\n      top: getSouthTop(targetRect, balloonRect),\n      left: targetRect.left + targetRect.width / 2 - balloonRect.width * 0.25 - sideOffset,\n      name: 'arrow_nmw',\n      ...(config && {\n        config\n      })\n    }),\n    southArrowNorth: (targetRect, balloonRect) => ({\n      top: getSouthTop(targetRect, balloonRect),\n      left: targetRect.left + targetRect.width / 2 - balloonRect.width / 2,\n      name: 'arrow_n',\n      ...(config && {\n        config\n      })\n    }),\n    southArrowNorthMiddleEast: (targetRect, balloonRect) => ({\n      top: getSouthTop(targetRect, balloonRect),\n      left: targetRect.left + targetRect.width / 2 - balloonRect.width * 0.75 + sideOffset,\n      name: 'arrow_nme',\n      ...(config && {\n        config\n      })\n    }),\n    southArrowNorthEast: (targetRect, balloonRect) => ({\n      top: getSouthTop(targetRect, balloonRect),\n      left: targetRect.left + targetRect.width / 2 - balloonRect.width + sideOffset,\n      name: 'arrow_ne',\n      ...(config && {\n        config\n      })\n    }),\n    // ------- South east\n\n    southEastArrowNorthWest: (targetRect, balloonRect) => ({\n      top: getSouthTop(targetRect, balloonRect),\n      left: targetRect.right - sideOffset,\n      name: 'arrow_nw',\n      ...(config && {\n        config\n      })\n    }),\n    southEastArrowNorthMiddleWest: (targetRect, balloonRect) => ({\n      top: getSouthTop(targetRect, balloonRect),\n      left: targetRect.right - balloonRect.width * .25 - sideOffset,\n      name: 'arrow_nmw',\n      ...(config && {\n        config\n      })\n    }),\n    southEastArrowNorth: (targetRect, balloonRect) => ({\n      top: getSouthTop(targetRect, balloonRect),\n      left: targetRect.right - balloonRect.width / 2,\n      name: 'arrow_n',\n      ...(config && {\n        config\n      })\n    }),\n    southEastArrowNorthMiddleEast: (targetRect, balloonRect) => ({\n      top: getSouthTop(targetRect, balloonRect),\n      left: targetRect.right - balloonRect.width * .75 + sideOffset,\n      name: 'arrow_nme',\n      ...(config && {\n        config\n      })\n    }),\n    southEastArrowNorthEast: (targetRect, balloonRect) => ({\n      top: getSouthTop(targetRect, balloonRect),\n      left: targetRect.right - balloonRect.width + sideOffset,\n      name: 'arrow_ne',\n      ...(config && {\n        config\n      })\n    }),\n    // ------- West\n\n    westArrowEast: (targetRect, balloonRect) => ({\n      top: targetRect.top + targetRect.height / 2 - balloonRect.height / 2,\n      left: targetRect.left - balloonRect.width - heightOffset,\n      name: 'arrow_e',\n      ...(config && {\n        config\n      })\n    }),\n    // ------- East\n\n    eastArrowWest: (targetRect, balloonRect) => ({\n      top: targetRect.top + targetRect.height / 2 - balloonRect.height / 2,\n      left: targetRect.right + heightOffset,\n      name: 'arrow_w',\n      ...(config && {\n        config\n      })\n    }),\n    // ------- Sticky\n\n    viewportStickyNorth: (targetRect, balloonRect, viewportRect) => {\n      if (!targetRect.getIntersection(viewportRect)) {\n        return null;\n      }\n      return {\n        top: viewportRect.top + stickyVerticalOffset,\n        left: targetRect.left + targetRect.width / 2 - balloonRect.width / 2,\n        name: 'arrowless',\n        config: {\n          withArrow: false,\n          ...config\n        }\n      };\n    }\n  };\n\n  // Returns the top coordinate for positions starting with `north*`.\n  //\n  // @private\n  // @param {utils/dom/rect~Rect} targetRect A rect of the target.\n  // @param {utils/dom/rect~Rect} elementRect A rect of the balloon.\n  // @returns {Number}\n  function getNorthTop(targetRect, balloonRect) {\n    return targetRect.top - balloonRect.height - heightOffset;\n  }\n\n  // Returns the top coordinate for positions starting with `south*`.\n  //\n  // @private\n  // @param {utils/dom/rect~Rect} targetRect A rect of the target.\n  // @param {utils/dom/rect~Rect} elementRect A rect of the balloon.\n  // @returns {Number}\n  function getSouthTop(targetRect) {\n    return targetRect.bottom + heightOffset;\n  }\n}","map":{"version":3,"names":["View","getOptimalPosition","isRange","toUnit","global","isElement","toPx","defaultLimiterElement","document","body","BalloonPanelView","constructor","locale","bind","bindTemplate","set","content","createCollection","setTemplate","tag","attributes","class","to","value","if","style","top","left","children","show","isVisible","hide","attachTo","options","defaultPositions","positionOptions","Object","assign","element","positions","southArrowNorth","southArrowNorthMiddleWest","southArrowNorthMiddleEast","southArrowNorthWest","southArrowNorthEast","northArrowSouth","northArrowSouthMiddleWest","northArrowSouthMiddleEast","northArrowSouthWest","northArrowSouthEast","viewportStickyNorth","limiter","fitInViewport","optimalPosition","_getOptimalPosition","parseInt","name","position","config","withArrow","pin","unpin","_pinWhenIsVisibleCallback","_startPinning","_stopPinning","listenTo","stopListening","targetElement","getDomElement","target","limiterElement","evt","domEvt","scrollTarget","isWithinScrollTarget","contains","isLimiterWithinScrollTarget","useCapture","window","object","commonAncestorContainer","arrowSideOffset","arrowHeightOffset","stickyVerticalOffset","generatePositions","sideOffset","heightOffset","northWestArrowSouthWest","targetRect","balloonRect","getNorthTop","northWestArrowSouthMiddleWest","width","northWestArrowSouth","northWestArrowSouthMiddleEast","northWestArrowSouthEast","northEastArrowSouthWest","right","northEastArrowSouthMiddleWest","northEastArrowSouth","northEastArrowSouthMiddleEast","northEastArrowSouthEast","southWestArrowNorthWest","getSouthTop","southWestArrowNorthMiddleWest","southWestArrowNorth","southWestArrowNorthMiddleEast","southWestArrowNorthEast","southEastArrowNorthWest","southEastArrowNorthMiddleWest","southEastArrowNorth","southEastArrowNorthMiddleEast","southEastArrowNorthEast","westArrowEast","height","eastArrowWest","viewportRect","getIntersection","bottom"],"sources":["C:/data/project/realproject/node_modules/@ckeditor/ckeditor5-ui/src/panel/balloon/balloonpanelview.js"],"sourcesContent":["/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/panel/balloon/balloonpanelview\n */\n\nimport View from '../../view';\nimport { getOptimalPosition } from '@ckeditor/ckeditor5-utils/src/dom/position';\nimport isRange from '@ckeditor/ckeditor5-utils/src/dom/isrange';\nimport toUnit from '@ckeditor/ckeditor5-utils/src/dom/tounit';\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\nimport { isElement } from 'lodash-es';\n\nimport '../../../theme/components/panel/balloonpanel.css';\n\nconst toPx = toUnit( 'px' );\nconst defaultLimiterElement = global.document.body;\n\n/**\n * The balloon panel view class.\n *\n * A floating container which can\n * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#pin pin} to any\n * {@link module:utils/dom/position~Options#target target} in the DOM and remain in that position\n * e.g. when the web page is scrolled.\n *\n * The balloon panel can be used to display contextual, non-blocking UI like forms, toolbars and\n * the like in its {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#content} view\n * collection.\n *\n * There is a number of {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}\n * that the balloon can use, automatically switching from one to another when the viewport space becomes\n * scarce to keep the balloon visible to the user as long as it is possible. The balloon will also\n * accept any custom position set provided by the user compatible with the\n * {@link module:utils/dom/position~Options options}.\n *\n *\t\tconst panel = new BalloonPanelView( locale );\n *\t\tconst childView = new ChildView();\n *\t\tconst positions = BalloonPanelView.defaultPositions;\n *\n *\t\tpanel.render();\n *\n *\t\t// Add a child view to the panel's content collection.\n *\t\tpanel.content.add( childView );\n *\n *\t\t// Start pinning the panel to an element with the \"target\" id DOM.\n *\t\t// The balloon will remain pinned until unpin() is called.\n *\t\tpanel.pin( {\n *\t\t\ttarget: document.querySelector( '#target' ),\n *\t\t\tpositions: [\n *\t\t\t\tpositions.northArrowSouth,\n *\t\t\t\tpositions.southArrowNorth\n *\t\t\t]\n *\t\t} );\n *\n * @extends module:ui/view~View\n */\nexport default class BalloonPanelView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t/**\n\t\t * The absolute top position of the balloon panel in pixels.\n\t\t *\n\t\t * @observable\n\t\t * @default 0\n\t\t * @member {Number} #top\n\t\t */\n\t\tthis.set( 'top', 0 );\n\n\t\t/**\n\t\t * The absolute left position of the balloon panel in pixels.\n\t\t *\n\t\t * @observable\n\t\t * @default 0\n\t\t * @member {Number} #left\n\t\t */\n\t\tthis.set( 'left', 0 );\n\n\t\t/**\n\t\t * The balloon panel's current position. The position name is reflected in the CSS class set\n\t\t * to the balloon, i.e. `.ck-balloon-panel_arrow_nw` for the \"arrow_nw\" position. The class\n\t\t * controls the minor aspects of the balloon's visual appearance like the placement\n\t\t * of an {@link #withArrow arrow}. To support a new position, an additional CSS must be created.\n\t\t *\n\t\t * Default position names correspond with\n\t\t * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}.\n\t\t *\n\t\t * See the {@link #attachTo} and {@link #pin} methods to learn about custom balloon positions.\n\t\t *\n\t\t * @observable\n\t\t * @default 'arrow_nw'\n\t\t * @member {'arrow_nw'|'arrow_ne'|'arrow_sw'|'arrow_se'} #position\n\t\t */\n\t\tthis.set( 'position', 'arrow_nw' );\n\n\t\t/**\n\t\t * Controls whether the balloon panel is visible or not.\n\t\t *\n\t\t * @observable\n\t\t * @default false\n\t\t * @member {Boolean} #isVisible\n\t\t */\n\t\tthis.set( 'isVisible', false );\n\n\t\t/**\n\t\t * Controls whether the balloon panel has an arrow. The presence of the arrow\n\t\t * is reflected in the `ck-balloon-panel_with-arrow` CSS class.\n\t\t *\n\t\t * @observable\n\t\t * @default true\n\t\t * @member {Boolean} #withArrow\n\t\t */\n\t\tthis.set( 'withArrow', true );\n\n\t\t/**\n\t\t * An additional CSS class added to the {@link #element}.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #class\n\t\t */\n\t\tthis.set( 'class' );\n\n\t\t/**\n\t\t * A callback that starts pinning the panel when {@link #isVisible} gets\n\t\t * `true`. Used by {@link #pin}.\n\t\t *\n\t\t * @private\n\t\t * @member {Function} #_pinWhenIsVisibleCallback\n\t\t */\n\n\t\t/**\n\t\t * A collection of the child views that creates the balloon panel contents.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.content = this.createCollection();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-balloon-panel',\n\t\t\t\t\tbind.to( 'position', value => `ck-balloon-panel_${ value }` ),\n\t\t\t\t\tbind.if( 'isVisible', 'ck-balloon-panel_visible' ),\n\t\t\t\t\tbind.if( 'withArrow', 'ck-balloon-panel_with-arrow' ),\n\t\t\t\t\tbind.to( 'class' )\n\t\t\t\t],\n\n\t\t\t\tstyle: {\n\t\t\t\t\ttop: bind.to( 'top', toPx ),\n\t\t\t\t\tleft: bind.to( 'left', toPx )\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tchildren: this.content\n\t\t} );\n\t}\n\n\t/**\n\t * Shows the panel.\n\t *\n\t * See {@link #isVisible}.\n\t */\n\tshow() {\n\t\tthis.isVisible = true;\n\t}\n\n\t/**\n\t * Hides the panel.\n\t *\n\t * See {@link #isVisible}.\n\t */\n\thide() {\n\t\tthis.isVisible = false;\n\t}\n\n\t/**\n\t * Attaches the panel to a specified {@link module:utils/dom/position~Options#target} with a\n\t * smart positioning heuristics that chooses from available positions to make sure the panel\n\t * is visible to the user i.e. within the limits of the viewport.\n\t *\n\t * This method accepts configuration {@link module:utils/dom/position~Options options}\n\t * to set the `target`, optional `limiter` and `positions` the balloon should choose from.\n\t *\n\t *\t\tconst panel = new BalloonPanelView( locale );\n\t *\t\tconst positions = BalloonPanelView.defaultPositions;\n\t *\n\t *\t\tpanel.render();\n\t *\n\t *\t\t// Attach the panel to an element with the \"target\" id DOM.\n\t *\t\tpanel.attachTo( {\n\t *\t\t\ttarget: document.querySelector( '#target' ),\n\t *\t\t\tpositions: [\n\t *\t\t\t\tpositions.northArrowSouth,\n\t *\t\t\t\tpositions.southArrowNorth\n\t *\t\t\t]\n\t *\t\t} );\n\t *\n\t * **Note**: Attaching the panel will also automatically {@link #show} it.\n\t *\n\t * **Note**: An attached panel will not follow its target when the window is scrolled or resized.\n\t * See the {@link #pin} method for a more permanent positioning strategy.\n\t *\n\t * @param {module:utils/dom/position~Options} options Positioning options compatible with\n\t * {@link module:utils/dom/position~getOptimalPosition}. Default `positions` array is\n\t * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}.\n\t */\n\tattachTo( options ) {\n\t\tthis.show();\n\n\t\tconst defaultPositions = BalloonPanelView.defaultPositions;\n\t\tconst positionOptions = Object.assign( {}, {\n\t\t\telement: this.element,\n\t\t\tpositions: [\n\t\t\t\tdefaultPositions.southArrowNorth,\n\t\t\t\tdefaultPositions.southArrowNorthMiddleWest,\n\t\t\t\tdefaultPositions.southArrowNorthMiddleEast,\n\t\t\t\tdefaultPositions.southArrowNorthWest,\n\t\t\t\tdefaultPositions.southArrowNorthEast,\n\t\t\t\tdefaultPositions.northArrowSouth,\n\t\t\t\tdefaultPositions.northArrowSouthMiddleWest,\n\t\t\t\tdefaultPositions.northArrowSouthMiddleEast,\n\t\t\t\tdefaultPositions.northArrowSouthWest,\n\t\t\t\tdefaultPositions.northArrowSouthEast,\n\t\t\t\tdefaultPositions.viewportStickyNorth\n\t\t\t],\n\t\t\tlimiter: defaultLimiterElement,\n\t\t\tfitInViewport: true\n\t\t}, options );\n\n\t\tconst optimalPosition = BalloonPanelView._getOptimalPosition( positionOptions );\n\n\t\t// Usually browsers make some problems with super accurate values like 104.345px\n\t\t// so it is better to use int values.\n\t\tconst left = parseInt( optimalPosition.left );\n\t\tconst top = parseInt( optimalPosition.top );\n\n\t\tconst { name: position, config = {} } = optimalPosition;\n\t\tconst { withArrow = true } = config;\n\n\t\tObject.assign( this, { top, left, position, withArrow } );\n\t}\n\n\t/**\n\t * Works the same way as the {@link #attachTo} method except that the position of the panel is\n\t * continuously updated when:\n\t *\n\t * * any ancestor of the {@link module:utils/dom/position~Options#target}\n\t * or {@link module:utils/dom/position~Options#limiter} is scrolled,\n\t * * the browser window gets resized or scrolled.\n\t *\n\t * Thanks to that, the panel always sticks to the {@link module:utils/dom/position~Options#target}\n\t * and is immune to the changing environment.\n\t *\n\t *\t\tconst panel = new BalloonPanelView( locale );\n\t *\t\tconst positions = BalloonPanelView.defaultPositions;\n\t *\n\t *\t\tpanel.render();\n\t *\n\t *\t\t// Pin the panel to an element with the \"target\" id DOM.\n\t *\t\tpanel.pin( {\n\t *\t\t\ttarget: document.querySelector( '#target' ),\n\t *\t\t\tpositions: [\n\t *\t\t\t\tpositions.northArrowSouth,\n\t *\t\t\t\tpositions.southArrowNorth\n\t *\t\t\t]\n\t *\t\t} );\n\t *\n\t * To leave the pinned state, use the {@link #unpin} method.\n\t *\n\t * **Note**: Pinning the panel will also automatically {@link #show} it.\n\t *\n\t * @param {module:utils/dom/position~Options} options Positioning options compatible with\n\t * {@link module:utils/dom/position~getOptimalPosition}. Default `positions` array is\n\t * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}.\n\t */\n\tpin( options ) {\n\t\tthis.unpin();\n\n\t\tthis._pinWhenIsVisibleCallback = () => {\n\t\t\tif ( this.isVisible ) {\n\t\t\t\tthis._startPinning( options );\n\t\t\t} else {\n\t\t\t\tthis._stopPinning();\n\t\t\t}\n\t\t};\n\n\t\tthis._startPinning( options );\n\n\t\t// Control the state of the listeners depending on whether the panel is visible\n\t\t// or not.\n\t\t// TODO: Use on() (https://github.com/ckeditor/ckeditor5-utils/issues/144).\n\t\tthis.listenTo( this, 'change:isVisible', this._pinWhenIsVisibleCallback );\n\t}\n\n\t/**\n\t * Stops pinning the panel, as set up by {@link #pin}.\n\t */\n\tunpin() {\n\t\tif ( this._pinWhenIsVisibleCallback ) {\n\t\t\t// Deactivate listeners attached by pin().\n\t\t\tthis._stopPinning();\n\n\t\t\t// Deactivate the panel pin() control logic.\n\t\t\t// TODO: Use off() (https://github.com/ckeditor/ckeditor5-utils/issues/144).\n\t\t\tthis.stopListening( this, 'change:isVisible', this._pinWhenIsVisibleCallback );\n\n\t\t\tthis._pinWhenIsVisibleCallback = null;\n\n\t\t\tthis.hide();\n\t\t}\n\t}\n\n\t/**\n\t * Starts managing the pinned state of the panel. See {@link #pin}.\n\t *\n\t * @private\n\t * @param {module:utils/dom/position~Options} options Positioning options compatible with\n\t * {@link module:utils/dom/position~getOptimalPosition}.\n\t */\n\t_startPinning( options ) {\n\t\tthis.attachTo( options );\n\n\t\tconst targetElement = getDomElement( options.target );\n\t\tconst limiterElement = options.limiter ? getDomElement( options.limiter ) : defaultLimiterElement;\n\n\t\t// Then we need to listen on scroll event of eny element in the document.\n\t\tthis.listenTo( global.document, 'scroll', ( evt, domEvt ) => {\n\t\t\tconst scrollTarget = domEvt.target;\n\n\t\t\t// The position needs to be updated if the positioning target is within the scrolled element.\n\t\t\tconst isWithinScrollTarget = targetElement && scrollTarget.contains( targetElement );\n\n\t\t\t// The position needs to be updated if the positioning limiter is within the scrolled element.\n\t\t\tconst isLimiterWithinScrollTarget = limiterElement && scrollTarget.contains( limiterElement );\n\n\t\t\t// The positioning target and/or limiter can be a Rect, object etc..\n\t\t\t// There's no way to optimize the listener then.\n\t\t\tif ( isWithinScrollTarget || isLimiterWithinScrollTarget || !targetElement || !limiterElement ) {\n\t\t\t\tthis.attachTo( options );\n\t\t\t}\n\t\t}, { useCapture: true } );\n\n\t\t// We need to listen on window resize event and update position.\n\t\tthis.listenTo( global.window, 'resize', () => {\n\t\t\tthis.attachTo( options );\n\t\t} );\n\t}\n\n\t/**\n\t * Stops managing the pinned state of the panel. See {@link #pin}.\n\t *\n\t * @private\n\t */\n\t_stopPinning() {\n\t\tthis.stopListening( global.document, 'scroll' );\n\t\tthis.stopListening( global.window, 'resize' );\n\t}\n}\n\n// Returns the DOM element for given object or null, if there is none,\n// e.g. when the passed object is a Rect instance or so.\n//\n// @private\n// @param {*} object\n// @returns {HTMLElement|null}\nfunction getDomElement( object ) {\n\tif ( isElement( object ) ) {\n\t\treturn object;\n\t}\n\n\tif ( isRange( object ) ) {\n\t\treturn object.commonAncestorContainer;\n\t}\n\n\tif ( typeof object == 'function' ) {\n\t\treturn getDomElement( object() );\n\t}\n\n\treturn null;\n}\n\n/**\n * A side offset of the arrow tip from the edge of the balloon. Controlled by CSS.\n *\n *\t\t ┌───────────────────────┐\n *\t\t │                       │\n *\t\t │         Balloon       │\n *\t\t │         Content       │\n *\t\t │                       │\n *\t\t └──+    +───────────────┘\n *\t\t |   \\  /\n *\t\t |    \\/\n *\t\t>┼─────┼< ─────────────────────── side offset\n *\n *\n * @default 25\n * @member {Number} module:ui/panel/balloon/balloonpanelview~BalloonPanelView.arrowSideOffset\n */\nBalloonPanelView.arrowSideOffset = 25;\n\n/**\n * A height offset of the arrow from the edge of the balloon. Controlled by CSS.\n *\n *\t\t ┌───────────────────────┐\n *\t\t │                       │\n *\t\t │         Balloon       │\n *\t\t │         Content       │      ╱-- arrow height offset\n *\t\t │                       │      V\n *\t\t └──+    +───────────────┘ --- ─┼───────\n *\t\t     \\  /                       │\n *\t\t      \\/                        │\n *\t\t────────────────────────────────┼───────\n *\t\t                                ^\n *\n *\n *\t\t>┼────┼<  arrow height offset\n *\t\t │    │\n *\t\t │    ┌────────────────────────┐\n *\t\t │    │                        │\n *\t\t │   ╱                         │\n *\t\t │ ╱            Balloon        │\n *\t\t │ ╲            Content        │\n *\t\t │   ╲                         │\n *\t\t │    │                        │\n *\t\t │    └────────────────────────┘\n *\n *\n * @default 10\n * @member {Number} module:ui/panel/balloon/balloonpanelview~BalloonPanelView.arrowHeightOffset\n */\nBalloonPanelView.arrowHeightOffset = 10;\n\n/**\n * A vertical offset of the balloon panel from the edge of the viewport if sticky.\n * It helps in accessing toolbar buttons underneath the balloon panel.\n *\n *\t\t  ┌───────────────────────────────────────────────────┐\n *\t\t  │                      Target                       │\n *\t\t  │                                                   │\n *\t\t  │                            /── vertical offset    │\n *\t\t┌─────────────────────────────V─────────────────────────┐\n *\t\t│ Toolbar            ┌─────────────┐                    │\n *\t\t├────────────────────│   Balloon   │────────────────────┤\n *\t\t│ │                  └─────────────┘                  │ │\n *\t\t│ │                                                   │ │\n *\t\t│ │                                                   │ │\n *\t\t│ │                                                   │ │\n *\t\t│ └───────────────────────────────────────────────────┘ │\n *\t\t│                        Viewport                       │\n *\t\t└───────────────────────────────────────────────────────┘\n *\n * @default 20\n * @member {Number} module:ui/panel/balloon/balloonpanelview~BalloonPanelView.stickyVerticalOffset\n */\nBalloonPanelView.stickyVerticalOffset = 20;\n\n/**\n * Function used to calculate the optimal position for the balloon.\n *\n * @protected\n * @member {Function} module:ui/panel/balloon/balloonpanelview~BalloonPanelView._getOptimalPosition\n */\nBalloonPanelView._getOptimalPosition = getOptimalPosition;\n\n/**\n * A default set of positioning functions used by the balloon panel view\n * when attaching using the {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#attachTo} method.\n *\n * The available positioning functions are as follows:\n *\n *\n *\n * **North west**\n *\n * * `northWestArrowSouthWest`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t V\n *\t\t [ Target ]\n *\n * * `northWestArrowSouthMiddleWest`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t    V\n *\t\t    [ Target ]\n *\n * * `northWestArrowSouth`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t         V\n *\t\t         [ Target ]\n *\n * * `northWestArrowSouthMiddleEast`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t             V\n *\t\t             [ Target ]\n *\n * * `northWestArrowSouthEast`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t                 V\n *\t\t                 [ Target ]\n *\n *\n *\n * **North**\n *\n * * `northArrowSouthWest`\n *\n *\t\t    +-----------------+\n *\t\t    |     Balloon     |\n *\t\t    +-----------------+\n *\t\t     V\n *\t\t[ Target ]\n *\n * * `northArrowSouthMiddleWest`\n *\n *\t\t +-----------------+\n *\t\t |     Balloon     |\n *\t\t +-----------------+\n *\t\t     V\n *\t\t[ Target ]\n *\n * * `northArrowSouth`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t         V\n *\t\t    [ Target ]\n *\n * * `northArrowSouthMiddleEast`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t             V\n *\t\t        [ Target ]\n *\n * * `northArrowSouthEast`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t                V\n *\t\t           [ Target ]\n *\n * **North east**\n *\n * * `northEastArrowSouthWest`\n *\n *\t\t        +-----------------+\n *\t\t        |     Balloon     |\n *\t\t        +-----------------+\n *\t\t         V\n *\t\t[ Target ]\n *\n *\n * * `northEastArrowSouthMiddleWest`\n *\n *\t\t     +-----------------+\n *\t\t     |     Balloon     |\n *\t\t     +-----------------+\n *\t\t         V\n *\t\t[ Target ]\n *\n * * `northEastArrowSouth`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t         V\n *\t\t[ Target ]\n *\n * * `northEastArrowSouthMiddleEast`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t             V\n *\t\t    [ Target ]\n *\n * * `northEastArrowSouthEast`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\t\t                 V\n *\t\t        [ Target ]\n *\n *\n *\n * **South**\n *\n *\n * * `southArrowNorthWest`\n *\n *\t\t[ Target ]\n *\t\t     ^\n *\t\t    +-----------------+\n *\t\t    |     Balloon     |\n *\t\t    +-----------------+\n *\n * * `southArrowNorthMiddleWest`\n *\n *\t\t   [ Target ]\n *\t\t        ^\n *\t\t    +-----------------+\n *\t\t    |     Balloon     |\n *\t\t    +-----------------+\n *\n * * `southArrowNorth`\n *\n *\t\t    [ Target ]\n *\t\t         ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southArrowNorthMiddleEast`\n *\n *\t\t            [ Target ]\n *\t\t                 ^\n *\t\t   +-----------------+\n *\t\t   |     Balloon     |\n *\t\t   +-----------------+\n *\n * * `southArrowNorthEast`\n *\n *\t\t            [ Target ]\n *\t\t                 ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n *\n *\n * **South west**\n *\n * * `southWestArrowNorthWest`\n *\n *\t\t [ Target ]\n *\t\t ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southWestArrowNorthMiddleWest`\n *\n *\t\t     [ Target ]\n *\t\t     ^\n *\t\t +-----------------+\n *\t\t |     Balloon     |\n *\t\t +-----------------+\n *\n * * `southWestArrowNorth`\n *\n *\t\t         [ Target ]\n *\t\t         ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southWestArrowNorthMiddleEast`\n *\n *\t\t              [ Target ]\n *\t\t              ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southWestArrowNorthEast`\n *\n *\t\t                 [ Target ]\n *\t\t                 ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n *\n *\n * **South east**\n *\n * * `southEastArrowNorthWest`\n *\n *\t\t[ Target ]\n *\t\t         ^\n *\t\t        +-----------------+\n *\t\t        |     Balloon     |\n *\t\t        +-----------------+\n * * `southEastArrowNorthMiddleWest`\n *\n *\t\t   [ Target ]\n *\t\t            ^\n *\t\t        +-----------------+\n *\t\t        |     Balloon     |\n *\t\t        +-----------------+\n *\n * * `southEastArrowNorth`\n *\n *\t\t[ Target ]\n *\t\t         ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southEastArrowNorthMiddleEast`\n *\n *\t\t     [ Target ]\n *\t\t              ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n * * `southEastArrowNorthEast`\n *\n *\t\t        [ Target ]\n *\t\t                 ^\n *\t\t+-----------------+\n *\t\t|     Balloon     |\n *\t\t+-----------------+\n *\n *\n *\n * **West**\n *\n * * `westArrowEast`\n *\n *\t\t+-----------------+\n *\t\t|     Balloon     |>[ Target ]\n *\t\t+-----------------+\n *\n * **East**\n *\n * * `eastArrowWest`\n *\n *\t\t           +-----------------+\n *\t\t[ Target ]<|     Balloon     |\n *\t\t           +-----------------+\n *\n *\n *\n * **Sticky**\n *\n * * `viewportStickyNorth`\n *\n *\t\t    +---------------------------+\n *\t\t    |        [ Target ]         |\n *\t\t    |                           |\n *\t\t+-----------------------------------+\n *\t\t|   |    +-----------------+    |   |\n *\t\t|   |    |     Balloon     |    |   |\n *\t\t|   |    +-----------------+    |   |\n *\t\t|   |                           |   |\n *\t\t|   |                           |   |\n *\t\t|   |                           |   |\n *\t\t|   |                           |   |\n *\t\t|   +---------------------------+   |\n *\t\t|             Viewport              |\n *\t\t+-----------------------------------+\n *\n * See {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#attachTo}.\n *\n * Positioning functions must be compatible with {@link module:utils/dom/position~Position}.\n *\n * Default positioning functions with customized offsets can be generated using\n * {@link module:ui/panel/balloon/balloonpanelview~generatePositions}.\n *\n * The name that the position function returns will be reflected in the balloon panel's class that\n * controls the placement of the \"arrow\". See {@link #position} to learn more.\n *\n * @member {Object.<String,module:utils/dom/position~PositioningFunction>}\n * module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions\n */\nBalloonPanelView.defaultPositions = generatePositions();\n\n/**\n * Returns available {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView}\n * {@link module:utils/dom/position~PositioningFunction positioning functions} adjusted by the specific offsets.\n *\n * @protected\n * @param {Object} [options] Options to generate positions. If not specified, this helper will simply return\n * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}.\n * @param {Number} [options.sideOffset] A custom side offset (in pixels) of each position. If\n * not specified, {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.arrowSideOffset the default value}\n * will be used.\n * @param {Number} [options.heightOffset] A custom height offset (in pixels) of each position. If\n * not specified, {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.arrowHeightOffset the default value}\n * will be used.\n * @param {Number} [options.stickyVerticalOffset] A custom offset (in pixels) of the `viewportStickyNorth` positioning function.\n * If not specified, {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.stickyVerticalOffset the default value}\n * will be used.\n * @param {Object} [options.config] Additional configuration of the balloon balloon panel view.\n * Currently only {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#withArrow} is supported. Learn more\n * about {@link module:utils/dom/position~PositioningFunction positioning functions}.\n * @returns {Object.<String,module:utils/dom/position~PositioningFunction>}\n */\nexport function generatePositions( {\n\tsideOffset = BalloonPanelView.arrowSideOffset,\n\theightOffset = BalloonPanelView.arrowHeightOffset,\n\tstickyVerticalOffset = BalloonPanelView.stickyVerticalOffset,\n\tconfig\n} = {} ) {\n\treturn {\n\t\t// ------- North west\n\n\t\tnorthWestArrowSouthWest: ( targetRect, balloonRect ) => ( {\n\t\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\t\tleft: targetRect.left - sideOffset,\n\t\t\tname: 'arrow_sw',\n\t\t\t...( config && { config } )\n\t\t} ),\n\n\t\tnorthWestArrowSouthMiddleWest: ( targetRect, balloonRect ) => ( {\n\t\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\t\tleft: targetRect.left - ( balloonRect.width * .25 ) - sideOffset,\n\t\t\tname: 'arrow_smw',\n\t\t\t...( config && { config } )\n\t\t} ),\n\n\t\tnorthWestArrowSouth: ( targetRect, balloonRect ) => ( {\n\t\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\t\tleft: targetRect.left - balloonRect.width / 2,\n\t\t\tname: 'arrow_s',\n\t\t\t...( config && { config } )\n\t\t} ),\n\n\t\tnorthWestArrowSouthMiddleEast: ( targetRect, balloonRect ) => ( {\n\t\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\t\tleft: targetRect.left - ( balloonRect.width * .75 ) + sideOffset,\n\t\t\tname: 'arrow_sme',\n\t\t\t...( config && { config } )\n\t\t} ),\n\n\t\tnorthWestArrowSouthEast: ( targetRect, balloonRect ) => ( {\n\t\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\t\tleft: targetRect.left - balloonRect.width + sideOffset,\n\t\t\tname: 'arrow_se',\n\t\t\t...( config && { config } )\n\t\t} ),\n\n\t\t// ------- North\n\n\t\tnorthArrowSouthWest: ( targetRect, balloonRect ) => ( {\n\t\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\t\tleft: targetRect.left + targetRect.width / 2 - sideOffset,\n\t\t\tname: 'arrow_sw',\n\t\t\t...( config && { config } )\n\t\t} ),\n\n\t\tnorthArrowSouthMiddleWest: ( targetRect, balloonRect ) => ( {\n\t\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\t\tleft: targetRect.left + targetRect.width / 2 - ( balloonRect.width * .25 ) - sideOffset,\n\t\t\tname: 'arrow_smw',\n\t\t\t...( config && { config } )\n\t\t} ),\n\n\t\tnorthArrowSouth: ( targetRect, balloonRect ) => ( {\n\t\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\t\tleft: targetRect.left + targetRect.width / 2 - balloonRect.width / 2,\n\t\t\tname: 'arrow_s',\n\t\t\t...( config && { config } )\n\t\t} ),\n\n\t\tnorthArrowSouthMiddleEast: ( targetRect, balloonRect ) => ( {\n\t\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\t\tleft: targetRect.left + targetRect.width / 2 - ( balloonRect.width * .75 ) + sideOffset,\n\t\t\tname: 'arrow_sme',\n\t\t\t...( config && { config } )\n\t\t} ),\n\n\t\tnorthArrowSouthEast: ( targetRect, balloonRect ) => ( {\n\t\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\t\tleft: targetRect.left + targetRect.width / 2 - balloonRect.width + sideOffset,\n\t\t\tname: 'arrow_se',\n\t\t\t...( config && { config } )\n\t\t} ),\n\n\t\t// ------- North east\n\n\t\tnorthEastArrowSouthWest: ( targetRect, balloonRect ) => ( {\n\t\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\t\tleft: targetRect.right - sideOffset,\n\t\t\tname: 'arrow_sw',\n\t\t\t...( config && { config } )\n\t\t} ),\n\n\t\tnorthEastArrowSouthMiddleWest: ( targetRect, balloonRect ) => ( {\n\t\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\t\tleft: targetRect.right - ( balloonRect.width * .25 ) - sideOffset,\n\t\t\tname: 'arrow_smw',\n\t\t\t...( config && { config } )\n\t\t} ),\n\n\t\tnorthEastArrowSouth: ( targetRect, balloonRect ) => ( {\n\t\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\t\tleft: targetRect.right - balloonRect.width / 2,\n\t\t\tname: 'arrow_s',\n\t\t\t...( config && { config } )\n\t\t} ),\n\n\t\tnorthEastArrowSouthMiddleEast: ( targetRect, balloonRect ) => ( {\n\t\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\t\tleft: targetRect.right - ( balloonRect.width * .75 ) + sideOffset,\n\t\t\tname: 'arrow_sme',\n\t\t\t...( config && { config } )\n\t\t} ),\n\n\t\tnorthEastArrowSouthEast: ( targetRect, balloonRect ) => ( {\n\t\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\t\tleft: targetRect.right - balloonRect.width + sideOffset,\n\t\t\tname: 'arrow_se',\n\t\t\t...( config && { config } )\n\t\t} ),\n\n\t\t// ------- South west\n\n\t\tsouthWestArrowNorthWest: ( targetRect, balloonRect ) => ( {\n\t\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\t\tleft: targetRect.left - sideOffset,\n\t\t\tname: 'arrow_nw',\n\t\t\t...( config && { config } )\n\t\t} ),\n\n\t\tsouthWestArrowNorthMiddleWest: ( targetRect, balloonRect ) => ( {\n\t\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\t\tleft: targetRect.left - ( balloonRect.width * .25 ) - sideOffset,\n\t\t\tname: 'arrow_nmw',\n\t\t\t...( config && { config } )\n\t\t} ),\n\n\t\tsouthWestArrowNorth: ( targetRect, balloonRect ) => ( {\n\t\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\t\tleft: targetRect.left - balloonRect.width / 2,\n\t\t\tname: 'arrow_n',\n\t\t\t...( config && { config } )\n\t\t} ),\n\n\t\tsouthWestArrowNorthMiddleEast: ( targetRect, balloonRect ) => ( {\n\t\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\t\tleft: targetRect.left - ( balloonRect.width * .75 ) + sideOffset,\n\t\t\tname: 'arrow_nme',\n\t\t\t...( config && { config } )\n\t\t} ),\n\n\t\tsouthWestArrowNorthEast: ( targetRect, balloonRect ) => ( {\n\t\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\t\tleft: targetRect.left - balloonRect.width + sideOffset,\n\t\t\tname: 'arrow_ne',\n\t\t\t...( config && { config } )\n\t\t} ),\n\n\t\t// ------- South\n\n\t\tsouthArrowNorthWest: ( targetRect, balloonRect ) => ( {\n\t\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\t\tleft: targetRect.left + targetRect.width / 2 - sideOffset,\n\t\t\tname: 'arrow_nw',\n\t\t\t...( config && { config } )\n\t\t} ),\n\n\t\tsouthArrowNorthMiddleWest: ( targetRect, balloonRect ) => ( {\n\t\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\t\tleft: targetRect.left + targetRect.width / 2 - ( balloonRect.width * 0.25 ) - sideOffset,\n\t\t\tname: 'arrow_nmw',\n\t\t\t...( config && { config } )\n\t\t} ),\n\n\t\tsouthArrowNorth: ( targetRect, balloonRect ) => ( {\n\t\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\t\tleft: targetRect.left + targetRect.width / 2 - balloonRect.width / 2,\n\t\t\tname: 'arrow_n',\n\t\t\t...( config && { config } )\n\t\t} ),\n\n\t\tsouthArrowNorthMiddleEast: ( targetRect, balloonRect ) => ( {\n\t\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\t\tleft: targetRect.left + targetRect.width / 2 - ( balloonRect.width * 0.75 ) + sideOffset,\n\t\t\tname: 'arrow_nme',\n\t\t\t...( config && { config } )\n\t\t} ),\n\n\t\tsouthArrowNorthEast: ( targetRect, balloonRect ) => ( {\n\t\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\t\tleft: targetRect.left + targetRect.width / 2 - balloonRect.width + sideOffset,\n\t\t\tname: 'arrow_ne',\n\t\t\t...( config && { config } )\n\t\t} ),\n\n\t\t// ------- South east\n\n\t\tsouthEastArrowNorthWest: ( targetRect, balloonRect ) => ( {\n\t\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\t\tleft: targetRect.right - sideOffset,\n\t\t\tname: 'arrow_nw',\n\t\t\t...( config && { config } )\n\t\t} ),\n\n\t\tsouthEastArrowNorthMiddleWest: ( targetRect, balloonRect ) => ( {\n\t\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\t\tleft: targetRect.right - ( balloonRect.width * .25 ) - sideOffset,\n\t\t\tname: 'arrow_nmw',\n\t\t\t...( config && { config } )\n\t\t} ),\n\n\t\tsouthEastArrowNorth: ( targetRect, balloonRect ) => ( {\n\t\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\t\tleft: targetRect.right - balloonRect.width / 2,\n\t\t\tname: 'arrow_n',\n\t\t\t...( config && { config } )\n\t\t} ),\n\n\t\tsouthEastArrowNorthMiddleEast: ( targetRect, balloonRect ) => ( {\n\t\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\t\tleft: targetRect.right - ( balloonRect.width * .75 ) + sideOffset,\n\t\t\tname: 'arrow_nme',\n\t\t\t...( config && { config } )\n\t\t} ),\n\n\t\tsouthEastArrowNorthEast: ( targetRect, balloonRect ) => ( {\n\t\t\ttop: getSouthTop( targetRect, balloonRect ),\n\t\t\tleft: targetRect.right - balloonRect.width + sideOffset,\n\t\t\tname: 'arrow_ne',\n\t\t\t...( config && { config } )\n\t\t} ),\n\n\t\t// ------- West\n\n\t\twestArrowEast: ( targetRect, balloonRect ) => ( {\n\t\t\ttop: targetRect.top + targetRect.height / 2 - balloonRect.height / 2,\n\t\t\tleft: targetRect.left - balloonRect.width - heightOffset,\n\t\t\tname: 'arrow_e',\n\t\t\t...( config && { config } )\n\t\t} ),\n\n\t\t// ------- East\n\n\t\teastArrowWest: ( targetRect, balloonRect ) => ( {\n\t\t\ttop: targetRect.top + targetRect.height / 2 - balloonRect.height / 2,\n\t\t\tleft: targetRect.right + heightOffset,\n\t\t\tname: 'arrow_w',\n\t\t\t...( config && { config } )\n\t\t} ),\n\n\t\t// ------- Sticky\n\n\t\tviewportStickyNorth: ( targetRect, balloonRect, viewportRect ) => {\n\t\t\tif ( !targetRect.getIntersection( viewportRect ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttop: viewportRect.top + stickyVerticalOffset,\n\t\t\t\tleft: targetRect.left + targetRect.width / 2 - balloonRect.width / 2,\n\t\t\t\tname: 'arrowless',\n\t\t\t\tconfig: {\n\t\t\t\t\twithArrow: false,\n\t\t\t\t\t...config\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t};\n\n\t// Returns the top coordinate for positions starting with `north*`.\n\t//\n\t// @private\n\t// @param {utils/dom/rect~Rect} targetRect A rect of the target.\n\t// @param {utils/dom/rect~Rect} elementRect A rect of the balloon.\n\t// @returns {Number}\n\tfunction getNorthTop( targetRect, balloonRect ) {\n\t\treturn targetRect.top - balloonRect.height - heightOffset;\n\t}\n\n\t// Returns the top coordinate for positions starting with `south*`.\n\t//\n\t// @private\n\t// @param {utils/dom/rect~Rect} targetRect A rect of the target.\n\t// @param {utils/dom/rect~Rect} elementRect A rect of the balloon.\n\t// @returns {Number}\n\tfunction getSouthTop( targetRect ) {\n\t\treturn targetRect.bottom + heightOffset;\n\t}\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,OAAOA,IAAI,MAAM,YAAY;AAC7B,SAASC,kBAAkB,QAAQ,4CAA4C;AAC/E,OAAOC,OAAO,MAAM,2CAA2C;AAC/D,OAAOC,MAAM,MAAM,0CAA0C;AAC7D,OAAOC,MAAM,MAAM,0CAA0C;AAC7D,SAASC,SAAS,QAAQ,WAAW;AAErC,OAAO,kDAAkD;AAEzD,MAAMC,IAAI,GAAGH,MAAM,CAAE,IAAI,CAAE;AAC3B,MAAMI,qBAAqB,GAAGH,MAAM,CAACI,QAAQ,CAACC,IAAI;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAMC,gBAAgB,SAASV,IAAI,CAAC;EAClD;AACD;AACA;EACCW,WAAW,CAAEC,MAAM,EAAG;IACrB,KAAK,CAAEA,MAAM,CAAE;IAEf,MAAMC,IAAI,GAAG,IAAI,CAACC,YAAY;;IAE9B;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,GAAG,CAAE,KAAK,EAAE,CAAC,CAAE;;IAEpB;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACA,GAAG,CAAE,MAAM,EAAE,CAAC,CAAE;;IAErB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACA,GAAG,CAAE,UAAU,EAAE,UAAU,CAAE;;IAElC;AACF;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACA,GAAG,CAAE,WAAW,EAAE,KAAK,CAAE;;IAE9B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACA,GAAG,CAAE,WAAW,EAAE,IAAI,CAAE;;IAE7B;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,CAACA,GAAG,CAAE,OAAO,CAAE;;IAEnB;A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CE,aAAa,CAAE9D,MAAM,CAACI,QAAQ,EAAE,QAAQ,CAAE;IAC/C,IAAI,CAAC0D,aAAa,CAAE9D,MAAM,CAAC0E,MAAM,EAAE,QAAQ,CAAE;EAC9C;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASV,aAAa,CAAEW,MAAM,EAAG;EAChC,IAAK1E,SAAS,CAAE0E,MAAM,CAAE,EAAG;IAC1B,OAAOA,MAAM;EACd;EAEA,IAAK7E,OAAO,CAAE6E,MAAM,CAAE,EAAG;IACxB,OAAOA,MAAM,CAACC,uBAAuB;EACtC;EAEA,IAAK,OAAOD,MAAM,IAAI,UAAU,EAAG;IAClC,OAAOX,aAAa,CAAEW,MAAM,EAAE,CAAE;EACjC;EAEA,OAAO,IAAI;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACArE,gBAAgB,CAACuE,eAAe,GAAG,EAAE;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAvE,gBAAgB,CAACwE,iBAAiB,GAAG,EAAE;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAxE,gBAAgB,CAACyE,oBAAoB,GAAG,EAAE;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACAzE,gBAAgB,CAAC4C,mBAAmB,GAAGrD,kBAAkB;;AAEzgBAAgB,CAACwB,gBAAgB,GAAGkD,iBAAiB,EAAE;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,iBAAiB,GAKxB;EAAA,IAL0B;IAClCC,UAAU,GAAG3E,gBAAgB,CAACuE,eAAe;IAC7CK,YAAY,GAAG5E,gBAAgB,CAACwE,iBAAiB;IACjDC,oBAAoB,GAAGzE,gBAAgB,CAACyE,oBAAoB;IAC5DzB;EACD,CAAC,uEAAG,CAAC,CAAC;EACL,OAAO;IACN;;IAEA6B,uBAAuB,EAAE,CAAEC,UAAU,EAAEC,WAAW,MAAQ;MACzD/D,GAAG,EAAEgE,WAAW,CAAEF,UAAU,EAAEC,WAAW,CAAE;MAC3C9D,IAAI,EAAE6D,UAAU,CAAC7D,IAAI,GAAG0D,UAAU;MAClC7B,IAAI,EAAE,UAAU;MAChB,IAAKE,MAAM,IAAI;QAAEA;MAAO,CAAC;IAC1B,CAAC,CAAE;IAEHiC,6BAA6B,EAAE,CAAEH,UAAU,EAAEC,WAAW,MAAQ;MAC/D/D,GAAG,EAAEgE,WAAW,CAAEF,UAAU,EAAEC,WAAW,CAAE;MAC3C9D,IAAI,EAAE6D,UAAU,CAAC7D,IAAI,GAAK8D,WAAW,CAACG,KAAK,GAAG,GAAK,GAAGP,UAAU;MAChE7B,IAAI,EAAE,WAAW;MACjB,IAAKE,MAAM,IAAI;QAAEA;MAAO,CAAC;IAC1B,CAAC,CAAE;IAEHmC,mBAAmB,EAAE,CAAEL,UAAU,EAAEC,WAAW,MAAQ;MACrD/D,GAAG,EAAEgE,WAAW,CAAEF,UAAU,EAAEC,WAAW,CAAE;MAC3C9D,IAAI,EAAE6D,UAAU,CAAC7D,IAAI,GAAG8D,WAAW,CAACG,KAAK,GAAG,CAAC;MAC7CpC,IAAI,EAAE,SAAS;MACf,IAAKE,MAAM,IAAI;QAAEA;MAAO,CAAC;IAC1B,CAAC,CAAE;IAEHoC,6BAA6B,EAAE,CAAEN,UAAU,EAAEC,WAAW,MAAQ;MAC/D/D,GAAG,EAAEgE,WAAW,CAAEF,UAAU,EAAEC,WAAW,CAAE;MAC3C9D,IAAI,EAAE6D,UAAU,CAAC7D,IAAI,GAAK8D,WAAW,CAACG,KAAK,GAAG,GAAK,GAAGP,UAAU;MAChE7B,IAAI,EAAE,WAAW;MACjB,IAAKE,MAAM,IAAI;QAAEA;MAAO,CAAC;IAC1B,CAAC,CAAE;IAEHqC,uBAAuB,EAAE,CAAEP,UAAU,EAAEC,WAAW,MAAQ;MACzD/D,GAAG,EAAEgE,WAAW,CAAEF,UAAU,EAAEC,WAAW,CAAE;MAC3C9D,IAAI,EAAE6D,UAAU,CAAC7D,IAAI,GAAG8D,WAAW,CAACG,KAAK,GAAGP,UAAU;MACtD7B,IAAI,EAAE,UAAU;MAChB,IAAKE,MAAM,IAAI;QAAEA;MAAO,CAAC;IAC1B,CAAC,CAAE;IAEH;;IAEAV,mBAAmB,EAAE,CAAEwC,UAAU,EAAEC,WAAW,MAAQ;MACrD/D,GAAG,EAAEgE,WAAW,CAAEF,UAAU,EAAEC,WAAW,CAAE;MAC3C9D,IAAI,EAAE6D,UAAU,CAAC7D,IAAI,GAAG6D,UAAU,CAACI,KAAK,GAAG,CAAC,GAAGP,UAAU;MACzD7B,IAAI,EAAE,UAAU;MAChB,IAAKE,MAAM,IAAI;QAAEA;MAAO,CAAC;IAC1B,CAAC,CAAE;IAEHZ,yBAAyB,EAAE,CAAE0C,UAAU,EAAEC,WAAW,MAAQ;MAC3D/D,GAAG,EAAEgE,WAAW,CAAEF,UAAU,EAAEC,WAAW,CAAE;MAC3C9D,IAAI,EAAE6D,UAAU,CAAC7D,IAAI,GAAG6D,UAAU,CAACI,KAAK,GAAG,CAAC,GAAKH,WAAW,CAACG,KAAK,GAAG,GAAK,GAAGP,UAAU;MACvF7B,IAAI,EAAE,WAAW;MACjB,IAAKE,MAAM,IAAI;QAAEA;MAAO,CAAC;IAC1B,CAAC,CAAE;IAEHb,eAAe,EAAE,CAAE2C,UAAU,EAAEC,WAAW,MAAQ;MACjD/D,GAAG,EAAEgE,WAAW,CAAEF,UAAU,EAAEC,WAAW,CAAE;MAC3C9D,IAAI,EAAE6D,UAAU,CAAC7D,IAAI,GAAG6D,UAAU,CAACI,KAAK,GAAG,CAAC,GAAGH,WAAW,CAACG,KAAK,GAAG,CAAC;MACpEpC,IAAI,EAAE,SAAS;MACf,IAAKE,MAAM,IAAI;QAAEA;MAAO,CAAC;IAC1B,CAAC,CAAE;IAEHX,yBAAyB,EAAE,CAAEyC,UAAU,EAAEC,WAAW,MAAQ;MAC3D/D,GAAG,EAAEgE,WAAW,CAAEF,UAAU,EAAEC,WAAW,CAAE;MAC3C9D,IAAI,EAAE6D,UAAU,CAAC7D,IAAI,GAAG6D,UAAU,CAACI,KAAK,GAAG,CAAC,GAAKH,WAAW,CAACG,KAAK,GAAG,GAAK,GAAGP,UAAU;MACvF7B,IAAI,EAAE,WAAW;MACjB,IAAKE,MAAM,IAAI;QAAEA;MAAO,CAAC;IAC1B,CAAC,CAAE;IAEHT,mBAAmB,EAAE,CAAEuC,UAAU,EAAEC,WAAW,MAAQ;MACrD/D,GAAG,EAAEgE,WAAW,CAAEF,UAAU,EAAEC,WAAW,CAAE;MAC3C9D,IAAI,EAAE6D,UAAU,CAAC7D,IAAI,GAAG6D,UAAU,CAACI,KAAK,GAAG,CAAC,GAAGH,WAAW,CAACG,KAAK,GAAGP,UAAU;MAC7E7B,IAAI,EAAE,UAAU;MAChB,IAAKE,MAAM,IAAI;QAAEA;MAAO,CAAC;IAC1B,CAAC,CAAE;IAEH;;IAEAsC,uBAAuB,EAAE,CAAER,UAAU,EAAEC,WAAW,MAAQ;MACzD/D,GAAG,EAAEgE,WAAW,CAAEF,UAAU,EAAEC,WAAW,CAAE;MAC3C9D,IAAI,EAAE6D,UAAU,CAACS,KAAK,GAAGZ,UAAU;MACnC7B,IAAI,EAAE,UAAU;MAChB,IAAKE,MAAM,IAAI;QAAEA;MAAO,CAAC;IAC1B,CAAC,CAAE;IAEHwC,6BAA6B,EAAE,CAAEV,UAAU,EAAEC,WAAW,MAAQ;MAC/D/D,GAAG,EAAEgE,WAAW,CAAEF,UAAU,EAAEC,WAAW,CAAE;MAC3C9D,IAAI,EAAE6D,UAAU,CAACS,KAAK,GAAKR,WAAW,CAACG,KAAK,GAAG,GAAK,GAAGP,UAAU;MACjE7B,IAAI,EAAE,WAAW;MACjB,IAAKE,MAAM,IAAI;QAAEA;MAAO,CAAC;IAC1B,CAAC,CAAE;IAEHyC,mBAAmB,EAAE,CAAEX,UAAU,EAAEC,WAAW,MAAQ;MACrD/D,GAAG,EAAEgE,WAAW,CAAEF,UAAU,EAAEC,WAAW,CAAE;MAC3C9D,IAAI,EAAE6D,UAAU,CAACS,KAAK,GAAGR,WAAW,CAACG,KAAK,GAAG,CAAC;MAC9CpC,IAAI,EAAE,SAAS;MACf,IAAKE,MAAM,IAAI;QAAEA;MAAO,CAAC;IAC1B,CAAC,CAAE;IAEH0C,6BAA6B,EAAE,CAAEZ,UAAU,EAAEC,WAAW,MAAQ;MAC/D/D,GAAG,EAAEgE,WAAW,CAAEF,UAAU,EAAEC,WAAW,CAAE;MAC3C9D,IAAI,EAAE6D,UAAU,CAACS,KAAK,GAAKR,WAAW,CAACG,KAAK,GAAG,GAAK,GAAGP,UAAU;MACjE7B,IAAI,EAAE,WAAW;MACjB,IAAKE,MAAM,IAAI;QAAEA;MAAO,CAAC;IAC1B,CAAC,CAAE;IAEH2C,uBAAuB,EAAE,CAAEb,UAAU,EAAEC,WAAW,MAAQ;MACzD/D,GAAG,EAAEgE,WAAW,CAAEF,UAAU,EAAEC,WAAW,CAAE;MAC3C9D,IAAI,EAAE6D,UAAU,CAACS,KAAK,GAAGR,WAAW,CAACG,KAAK,GAAGP,UAAU;MACvD7B,IAAI,EAAE,UAAU;MAChB,IAAKE,MAAM,IAAI;QAAEA;MAAO,CAAC;IAC1B,CAAC,CAAE;IAEH;;IAEA4C,uBAAuB,EAAE,CAAEd,UAAU,EAAEC,WAAW,MAAQ;MACzD/D,GAAG,EAAE6E,WAAW,CAAEf,UAAU,EAAEC,WAAW,CAAE;MAC3C9D,IAAI,EAAE6D,UAAU,CAAC7D,IAAI,GAAG0D,UAAU;MAClC7B,IAAI,EAAE,UAAU;MAChB,IAAKE,MAAM,IAAI;QAAEA;MAAO,CAAC;IAC1B,CAAC,CAAE;IAEH8C,6BAA6B,EAAE,CAAEhB,UAAU,EAAEC,WAAW,MAAQ;MAC/D/D,GAAG,EAAE6E,WAAW,CAAEf,UAAU,EAAEC,WAAW,CAAE;MAC3C9D,IAAI,EAAE6D,UAAU,CAAC7D,IAAI,GAAK8D,WAAW,CAACG,KAAK,GAAG,GAAK,GAAGP,UAAU;MAChE7B,IAAI,EAAE,WAAW;MACjB,IAAKE,MAAM,IAAI;QAAEA;MAAO,CAAC;IAC1B,CAAC,CAAE;IAEH+C,mBAAmB,EAAE,CAAEjB,UAAU,EAAEC,WAAW,MAAQ;MACrD/D,GAAG,EAAE6E,WAAW,CAAEf,UAAU,EAAEC,WAAW,CAAE;MAC3C9D,IAAI,EAAE6D,UAAU,CAAC7D,IAAI,GAAG8D,WAAW,CAACG,KAAK,GAAG,CAAC;MAC7CpC,IAAI,EAAE,SAAS;MACf,IAAKE,MAAM,IAAI;QAAEA;MAAO,CAAC;IAC1B,CAAC,CAAE;IAEHgD,6BAA6B,EAAE,CAAElB,UAAU,EAAEC,WAAW,MAAQ;MAC/D/D,GAAG,EAAE6E,WAAW,CAAEf,UAAU,EAAEC,WAAW,CAAE;MAC3C9D,IAAI,EAAE6D,UAAU,CAAC7D,IAAI,GAAK8D,WAAW,CAACG,KAAK,GAAG,GAAK,GAAGP,UAAU;MAChE7B,IAAI,EAAE,WAAW;MACjB,IAAKE,MAAM,IAAI;QAAEA;MAAO,CAAC;IAC1B,CAAC,CAAE;IAEHiD,uBAAuB,EAAE,CAAEnB,UAAU,EAAEC,WAAW,MAAQ;MACzD/D,GAAG,EAAE6E,WAAW,CAAEf,UAAU,EAAEC,WAAW,CAAE;MAC3C9D,IAAI,EAAE6D,UAAU,CAAC7D,IAAI,GAAG8D,WAAW,CAACG,KAAK,GAAGP,UAAU;MACtD7B,IAAI,EAAE,UAAU;MAChB,IAAKE,MAAM,IAAI;QAAEA;MAAO,CAAC;IAC1B,CAAC,CAAE;IAEH;;IAEAf,mBAAmB,EAAE,CAAE6C,UAAU,EAAEC,WAAW,MAAQ;MACrD/D,GAAG,EAAE6E,WAAW,CAAEf,UAAU,EAAEC,WAAW,CAAE;MAC3C9D,IAAI,EAAE6D,UAAU,CAAC7D,IAAI,GAAG6D,UAAU,CAACI,KAAK,GAAG,CAAC,GAAGP,UAAU;MACzD7B,IAAI,EAAE,UAAU;MAChB,IAAKE,MAAM,IAAI;QAAEA;MAAO,CAAC;IAC1B,CAAC,CAAE;IAEHjB,yBAAyB,EAAE,CAAE+C,UAAU,EAAEC,WAAW,MAAQ;MAC3D/D,GAAG,EAAE6E,WAAW,CAAEf,UAAU,EAAEC,WAAW,CAAE;MAC3C9D,IAAI,EAAE6D,UAAU,CAAC7D,IAAI,GAAG6D,UAAU,CAACI,KAAK,GAAG,CAAC,GAAKH,WAAW,CAACG,KAAK,GAAG,IAAM,GAAGP,UAAU;MACxF7B,IAAI,EAAE,WAAW;MACjB,IAAKE,MAAM,IAAI;QAAEA;MAAO,CAAC;IAC1B,CAAC,CAAE;IAEHlB,eAAe,EAAE,CAAEgD,UAAU,EAAEC,WAAW,MAAQ;MACjD/D,GAAG,EAAE6E,WAAW,CAAEf,UAAU,EAAEC,WAAW,CAAE;MAC3C9D,IAAI,EAAE6D,UAAU,CAAC7D,IAAI,GAAG6D,UAAU,CAACI,KAAK,GAAG,CAAC,GAAGH,WAAW,CAACG,KAAK,GAAG,CAAC;MACpEpC,IAAI,EAAE,SAAS;MACf,IAAKE,MAAM,IAAI;QAAEA;MAAO,CAAC;IAC1B,CAAC,CAAE;IAEHhB,yBAAyB,EAAE,CAAE8C,UAAU,EAAEC,WAAW,MAAQ;MAC3D/D,GAAG,EAAE6E,WAAW,CAAEf,UAAU,EAAEC,WAAW,CAAE;MAC3C9D,IAAI,EAAE6D,UAAU,CAAC7D,IAAI,GAAG6D,UAAU,CAACI,KAAK,GAAG,CAAC,GAAKH,WAAW,CAACG,KAAK,GAAG,IAAM,GAAGP,UAAU;MACxF7B,IAAI,EAAE,WAAW;MACjB,IAAKE,MAAM,IAAI;QAAEA;MAAO,CAAC;IAC1B,CAAC,CAAE;IAEHd,mBAAmB,EAAE,CAAE4C,UAAU,EAAEC,WAAW,MAAQ;MACrD/D,GAAG,EAAE6E,WAAW,CAAEf,UAAU,EAAEC,WAAW,CAAE;MAC3C9D,IAAI,EAAE6D,UAAU,CAAC7D,IAAI,GAAG6D,UAAU,CAACI,KAAK,GAAG,CAAC,GAAGH,WAAW,CAACG,KAAK,GAAGP,UAAU;MAC7E7B,IAAI,EAAE,UAAU;MAChB,IAAKE,MAAM,IAAI;QAAEA;MAAO,CAAC;IAC1B,CAAC,CAAE;IAEH;;IAEAkD,uBAAuB,EAAE,CAAEpB,UAAU,EAAEC,WAAW,MAAQ;MACzD/D,GAAG,EAAE6E,WAAW,CAAEf,UAAU,EAAEC,WAAW,CAAE;MAC3C9D,IAAI,EAAE6D,UAAU,CAACS,KAAK,GAAGZ,UAAU;MACnC7B,IAAI,EAAE,UAAU;MAChB,IAAKE,MAAM,IAAI;QAAEA;MAAO,CAAC;IAC1B,CAAC,CAAE;IAEHmD,6BAA6B,EAAE,CAAErB,UAAU,EAAEC,WAAW,MAAQ;MAC/D/D,GAAG,EAAE6E,WAAW,CAAEf,UAAU,EAAEC,WAAW,CAAE;MAC3C9D,IAAI,EAAE6D,UAAU,CAACS,KAAK,GAAKR,WAAW,CAACG,KAAK,GAAG,GAAK,GAAGP,UAAU;MACjE7B,IAAI,EAAE,WAAW;MACjB,IAAKE,MAAM,IAAI;QAAEA;MAAO,CAAC;IAC1B,CAAC,CAAE;IAEHoD,mBAAmB,EAAE,CAAEtB,UAAU,EAAEC,WAAW,MAAQ;MACrD/D,GAAG,EAAE6E,WAAW,CAAEf,UAAU,EAAEC,WAAW,CAAE;MAC3C9D,IAAI,EAAE6D,UAAU,CAACS,KAAK,GAAGR,WAAW,CAACG,KAAK,GAAG,CAAC;MAC9CpC,IAAI,EAAE,SAAS;MACf,IAAKE,MAAM,IAAI;QAAEA;MAAO,CAAC;IAC1B,CAAC,CAAE;IAEHqD,6BAA6B,EAAE,CAAEvB,UAAU,EAAEC,WAAW,MAAQ;MAC/D/D,GAAG,EAAE6E,WAAW,CAAEf,UAAU,EAAEC,WAAW,CAAE;MAC3C9D,IAAI,EAAE6D,UAAU,CAACS,KAAK,GAAKR,WAAW,CAACG,KAAK,GAAG,GAAK,GAAGP,UAAU;MACjE7B,IAAI,EAAE,WAAW;MACjB,IAAKE,MAAM,IAAI;QAAEA;MAAO,CAAC;IAC1B,CAAC,CAAE;IAEHsD,uBAAuB,EAAE,CAAExB,UAAU,EAAEC,WAAW,MAAQ;MACzD/D,GAAG,EAAE6E,WAAW,CAAEf,UAAU,EAAEC,WAAW,CAAE;MAC3C9D,IAAI,EAAE6D,UAAU,CAACS,KAAK,GAAGR,WAAW,CAACG,KAAK,GAAGP,UAAU;MACvD7B,IAAI,EAAE,UAAU;MAChB,IAAKE,MAAM,IAAI;QAAEA;MAAO,CAAC;IAC1B,CAAC,CAAE;IAEH;;IAEAuD,aAAa,EAAE,CAAEzB,UAAU,EAAEC,WAAW,MAAQ;MAC/C/D,GAAG,EAAE8D,UAAU,CAAC9D,GAAG,GAAG8D,UAAU,CAAC0B,MAAM,GAAG,CAAC,GAAGzB,WAAW,CAACyB,MAAM,GAAG,CAAC;MACpEvF,IAAI,EAAE6D,UAAU,CAAC7D,IAAI,GAAG8D,WAAW,CAACG,KAAK,GAAGN,YAAY;MACxD9B,IAAI,EAAE,SAAS;MACf,IAAKE,MAAM,IAAI;QAAEA;MAAO,CAAC;IAC1B,CAAC,CAAE;IAEH;;IAEAyD,aAAa,EAAE,CAAE3B,UAAU,EAAEC,WAAW,MAAQ;MAC/C/D,GAAG,EAAE8D,UAAU,CAAC9D,GAAG,GAAG8D,UAAU,CAAC0B,MAAM,GAAG,CAAC,GAAGzB,WAAW,CAACyB,MAAM,GAAG,CAAC;MACpEvF,IAAI,EAAE6D,UAAU,CAACS,KAAK,GAAGX,YAAY;MACrC9B,IAAI,EAAE,SAAS;MACf,IAAKE,MAAM,IAAI;QAAEA;MAAO,CAAC;IAC1B,CAAC,CAAE;IAEH;;IAEAR,mBAAmB,EAAE,CAAEsC,UAAU,EAAEC,WAAW,EAAE2B,YAAY,KAAM;MACjE,IAAK,CAAC5B,UAAU,CAAC6B,eAAe,CAAED,YAAY,CAAE,EAAG;QAClD,OAAO,IAAI;MACZ;MAEA,OAAO;QACN1F,GAAG,EAAE0F,YAAY,CAAC1F,GAAG,GAAGyD,oBAAoB;QAC5CxD,IAAI,EAAE6D,UAAU,CAAC7D,IAAI,GAAG6D,UAAU,CAACI,KAAK,GAAG,CAAC,GAAGH,WAAW,CAACG,KAAK,GAAG,CAAC;QACpEpC,IAAI,EAAE,WAAW;QACjBE,MAAM,EAAE;UACPC,SAAS,EAAE,KAAK;UAChB,GAAGD;QACJ;MACD,CAAC;IACF;EACD,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA,SAASgC,WAAW,CAAEF,UAAU,EAAEC,WAAW,EAAG;IAC/C,OAAOD,UAAU,CAAC9D,GAAG,GAAG+D,WAAW,CAACyB,MAAM,GAAG5B,YAAY;EAC1D;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA,SAASiB,WAAW,CAAEf,UAAU,EAAG;IAClC,OAAOA,UAAU,CAAC8B,MAAM,GAAGhC,YAAY;EACxC;AACD"},"metadata":{},"sourceType":"module"}
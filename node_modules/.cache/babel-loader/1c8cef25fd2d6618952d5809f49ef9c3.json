{"ast":null,"code":"var _jsxFileName = \"C:\\\\data\\\\project\\\\realproject\\\\src\\\\login\\\\LoginRestore.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useContext } from 'react';\nimport { Button, Container, Nav, Navbar } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { UserContext } from '../context/UserContext';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginRestore = _ref => {\n  _s();\n  let {\n    history,\n    location\n  } = _ref;\n  const {\n    loginUser,\n    setLoginUser\n  } = useContext(UserContext);\n  const restoreSubmit = async () => {\n    if (!window.confirm('아이디를 복원하시겠습니까?')) return;\n    const formData = new FormData();\n\n    //새로고침하면 uid가 사라져서 복원이 안됨.replac로 옮겨가야 함.\n    formData.append(\"uid\", loginUser.uid);\n    try {\n      await axios.post('/api/user/restore', formData);\n      alert(\"아이디 복원 완료!\");\n      history.push('/login/form');\n    } catch (e) {\n      if (e) alert('예상치 못한 오류가 발생하였습니다.');\n    }\n  };\n\n  //뒤로 가기 막기\n  const preventGoBack = () => {\n    window.history.pushState(null, \"\", location.href);\n  };\n  useEffect(() => {\n    window.history.pushState(null, \"\", location.href);\n    window.addEventListener(\"popstate\", preventGoBack);\n    return () => {\n      window.removeEventListener(\"popstate\", preventGoBack);\n    };\n  }, []);\n\n  //창닫기, 새로고침 막기\n  const preventClose = e => {\n    e.preventDefault();\n  };\n  useEffect(() => {\n    (() => {\n      window.addEventListener(\"beforeunload\", preventClose);\n    })();\n    return () => {\n      window.removeEventListener(\"beforeunload\", preventClose);\n    };\n  }, []);\n  return (\n    /*#__PURE__*/\n    /*모달창 넣기*/\n    _jsxDEV(Navbar, {\n      style: {\n        marginTop: 300\n      },\n      className: \"fixed-top\",\n      bg: \"secondary\",\n      variant: \"dark\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Nav, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: restoreSubmit,\n            children: \"\\uACC4\\uC815\\uBCF5\\uAD6C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(LoginRestore, \"2e/Nc/qnEb8wMmZZdJfud+g0hJI=\");\n_c = LoginRestore;\nexport default LoginRestore;\nvar _c;\n$RefreshReg$(_c, \"LoginRestore\");","map":{"version":3,"names":["axios","React","useContext","Button","Container","Nav","Navbar","UserContext","useEffect","LoginRestore","history","location","loginUser","setLoginUser","restoreSubmit","window","confirm","formData","FormData","append","uid","post","alert","push","e","preventGoBack","pushState","href","addEventListener","removeEventListener","preventClose","preventDefault","marginTop"],"sources":["C:/data/project/realproject/src/login/LoginRestore.jsx"],"sourcesContent":["\r\nimport axios from 'axios';\r\nimport React, { useContext } from 'react';\r\nimport { Button, Container, Nav, Navbar } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { UserContext } from '../context/UserContext';\r\nimport { useEffect } from 'react';\r\n\r\nconst LoginRestore = ({ history,location }) => {\r\n  const { loginUser, setLoginUser } = useContext(UserContext);\r\n\r\n\r\n  const restoreSubmit = async () => {\r\n    if (!window.confirm('아이디를 복원하시겠습니까?')) return;\r\n\r\n    const formData = new FormData();\r\n    \r\n    //새로고침하면 uid가 사라져서 복원이 안됨.replac로 옮겨가야 함.\r\n    formData.append(\"uid\", loginUser.uid);\r\n    try {\r\n      await axios.post('/api/user/restore', formData);\r\n      alert(\"아이디 복원 완료!\");\r\n      history.push('/login/form');\r\n    } catch (e) {\r\n      if (e) alert('예상치 못한 오류가 발생하였습니다.')\r\n    }\r\n  }\r\n\r\n  //뒤로 가기 막기\r\n  const preventGoBack = () => {\r\n    window.history.pushState(null, \"\", location.href);\r\n  };\r\n   \r\n  useEffect(() => {\r\n    window.history.pushState(null, \"\", location.href);\r\n    window.addEventListener(\"popstate\", preventGoBack);\r\n   \r\n    return () => {\r\n      window.removeEventListener(\"popstate\", preventGoBack);\r\n    };\r\n  }, []);\r\n\r\n  //창닫기, 새로고침 막기\r\n  const preventClose = (e: BeforeUnloadEvent) => {\r\n    e.preventDefault();\r\n   \r\n  };\r\n   \r\n  useEffect(() => {\r\n    (() => {\r\n      window.addEventListener(\"beforeunload\", preventClose);\r\n    })();\r\n   \r\n    return () => {\r\n      window.removeEventListener(\"beforeunload\", preventClose);\r\n    };\r\n  }, []);\r\n\r\n  \r\n  return (\r\n    /*모달창 넣기*/\r\n    <Navbar style={{ marginTop: 300 }} className='fixed-top' bg='secondary' variant=\"dark\">\r\n      <Container>\r\n        <Nav >\r\n          <Button onClick={restoreSubmit}>계정복구</Button>\r\n        </Nav>\r\n      </Container>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default LoginRestore"],"mappings":";;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,MAAM,EAAEC,SAAS,EAAEC,GAAG,EAAEC,MAAM,QAAQ,iBAAiB;AAChE,OAAO,sCAAsC;AAC7C,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,SAAS,QAAQ,OAAO;AAAC;AAElC,MAAMC,YAAY,GAAG,QAA0B;EAAA;EAAA,IAAzB;IAAEC,OAAO;IAACC;EAAS,CAAC;EACxC,MAAM;IAAEC,SAAS;IAAEC;EAAa,CAAC,GAAGX,UAAU,CAACK,WAAW,CAAC;EAG3D,MAAMO,aAAa,GAAG,YAAY;IAChC,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,gBAAgB,CAAC,EAAE;IAEvC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;;IAE/B;IACAD,QAAQ,CAACE,MAAM,CAAC,KAAK,EAAEP,SAAS,CAACQ,GAAG,CAAC;IACrC,IAAI;MACF,MAAMpB,KAAK,CAACqB,IAAI,CAAC,mBAAmB,EAAEJ,QAAQ,CAAC;MAC/CK,KAAK,CAAC,YAAY,CAAC;MACnBZ,OAAO,CAACa,IAAI,CAAC,aAAa,CAAC;IAC7B,CAAC,CAAC,OAAOC,CAAC,EAAE;MACV,IAAIA,CAAC,EAAEF,KAAK,CAAC,qBAAqB,CAAC;IACrC;EACF,CAAC;;EAED;EACA,MAAMG,aAAa,GAAG,MAAM;IAC1BV,MAAM,CAACL,OAAO,CAACgB,SAAS,CAAC,IAAI,EAAE,EAAE,EAAEf,QAAQ,CAACgB,IAAI,CAAC;EACnD,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACdO,MAAM,CAACL,OAAO,CAACgB,SAAS,CAAC,IAAI,EAAE,EAAE,EAAEf,QAAQ,CAACgB,IAAI,CAAC;IACjDZ,MAAM,CAACa,gBAAgB,CAAC,UAAU,EAAEH,aAAa,CAAC;IAElD,OAAO,MAAM;MACXV,MAAM,CAACc,mBAAmB,CAAC,UAAU,EAAEJ,aAAa,CAAC;IACvD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMK,YAAY,GAAIN,CAAoB,IAAK;IAC7CA,CAAC,CAACO,cAAc,EAAE;EAEpB,CAAC;EAEDvB,SAAS,CAAC,MAAM;IACd,CAAC,MAAM;MACLO,MAAM,CAACa,gBAAgB,CAAC,cAAc,EAAEE,YAAY,CAAC;IACvD,CAAC,GAAG;IAEJ,OAAO,MAAM;MACXf,MAAM,CAACc,mBAAmB,CAAC,cAAc,EAAEC,YAAY,CAAC;IAC1D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAGN;IAAA;IACE;IACA,QAAC,MAAM;MAAC,KAAK,EAAE;QAAEE,SAAS,EAAE;MAAI,CAAE;MAAC,SAAS,EAAC,WAAW;MAAC,EAAE,EAAC,WAAW;MAAC,OAAO,EAAC,MAAM;MAAA,uBACpF,QAAC,SAAS;QAAA,uBACR,QAAC,GAAG;UAAA,uBACF,QAAC,MAAM;YAAC,OAAO,EAAElB,aAAc;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAc;UAAA;UAAA;UAAA;QAAA;MACzC;QAAA;QAAA;QAAA;MAAA;IACI;MAAA;MAAA;MAAA;IAAA;EACL;AAEb,CAAC;AAAA,GA7DKL,YAAY;AAAA,KAAZA,YAAY;AA+DlB,eAAeA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module"}
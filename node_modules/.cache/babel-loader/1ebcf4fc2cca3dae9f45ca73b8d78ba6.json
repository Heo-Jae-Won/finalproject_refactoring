{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module engine/model/operation/detachoperation\n */\nimport Operation from './operation';\nimport Range from '../range';\nimport { _remove } from './utils';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n// @if CK_DEBUG_ENGINE // const ModelRange = require( '../range' ).default;\n/**\n * Operation to permanently remove node from detached root.\n * Note this operation is only a local operation and won't be send to the other clients.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class DetachOperation extends Operation {\n  /**\n   * Creates an insert operation.\n   *\n   * @param {module:engine/model/position~Position} sourcePosition\n   * Position before the first {@link module:engine/model/item~Item model item} to move.\n   * @param {Number} howMany Offset size of moved range. Moved range will start from `sourcePosition` and end at\n   * `sourcePosition` with offset shifted by `howMany`.\n   */\n  constructor(sourcePosition, howMany) {\n    super(null);\n    /**\n     * Position before the first {@link module:engine/model/item~Item model item} to detach.\n     *\n     * @member {module:engine/model/position~Position} #sourcePosition\n     */\n    this.sourcePosition = sourcePosition.clone();\n    /**\n     * Offset size of moved range.\n     *\n     * @member {Number} #howMany\n     */\n    this.howMany = howMany;\n  }\n  /**\n   * @inheritDoc\n   */\n  get type() {\n    return 'detach';\n  }\n  /**\n   * @inheritDoc\n   */\n  toJSON() {\n    const json = super.toJSON();\n    json.sourcePosition = this.sourcePosition.toJSON();\n    return json;\n  }\n  /**\n   * @inheritDoc\n   * @internal\n   */\n  _validate() {\n    if (this.sourcePosition.root.document) {\n      /**\n       * Cannot detach document node.\n       *\n       * @error detach-operation-on-document-node\n       */\n      throw new CKEditorError('detach-operation-on-document-node', this);\n    }\n  }\n  /**\n   * @inheritDoc\n   * @internal\n   */\n  _execute() {\n    _remove(Range._createFromPositionAndShift(this.sourcePosition, this.howMany));\n  }\n  /**\n   * @inheritDoc\n   */\n  static get className() {\n    return 'DetachOperation';\n  }\n}","map":{"version":3,"names":["Operation","Range","_remove","CKEditorError","DetachOperation","constructor","sourcePosition","howMany","clone","type","toJSON","json","_validate","root","document","_execute","_createFromPositionAndShift","className"],"sources":["C:/data/project/realproject/node_modules/@ckeditor/ckeditor5-engine/src/model/operation/detachoperation.js"],"sourcesContent":["/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module engine/model/operation/detachoperation\n */\nimport Operation from './operation';\nimport Range from '../range';\nimport { _remove } from './utils';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n// @if CK_DEBUG_ENGINE // const ModelRange = require( '../range' ).default;\n/**\n * Operation to permanently remove node from detached root.\n * Note this operation is only a local operation and won't be send to the other clients.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\nexport default class DetachOperation extends Operation {\n    /**\n     * Creates an insert operation.\n     *\n     * @param {module:engine/model/position~Position} sourcePosition\n     * Position before the first {@link module:engine/model/item~Item model item} to move.\n     * @param {Number} howMany Offset size of moved range. Moved range will start from `sourcePosition` and end at\n     * `sourcePosition` with offset shifted by `howMany`.\n     */\n    constructor(sourcePosition, howMany) {\n        super(null);\n        /**\n         * Position before the first {@link module:engine/model/item~Item model item} to detach.\n         *\n         * @member {module:engine/model/position~Position} #sourcePosition\n         */\n        this.sourcePosition = sourcePosition.clone();\n        /**\n         * Offset size of moved range.\n         *\n         * @member {Number} #howMany\n         */\n        this.howMany = howMany;\n    }\n    /**\n     * @inheritDoc\n     */\n    get type() {\n        return 'detach';\n    }\n    /**\n     * @inheritDoc\n     */\n    toJSON() {\n        const json = super.toJSON();\n        json.sourcePosition = this.sourcePosition.toJSON();\n        return json;\n    }\n    /**\n     * @inheritDoc\n     * @internal\n     */\n    _validate() {\n        if (this.sourcePosition.root.document) {\n            /**\n             * Cannot detach document node.\n             *\n             * @error detach-operation-on-document-node\n             */\n            throw new CKEditorError('detach-operation-on-document-node', this);\n        }\n    }\n    /**\n     * @inheritDoc\n     * @internal\n     */\n    _execute() {\n        _remove(Range._createFromPositionAndShift(this.sourcePosition, this.howMany));\n    }\n    /**\n     * @inheritDoc\n     */\n    static get className() {\n        return 'DetachOperation';\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,SAAS,MAAM,aAAa;AACnC,OAAOC,KAAK,MAAM,UAAU;AAC5B,SAASC,OAAO,QAAQ,SAAS;AACjC,OAAOC,aAAa,MAAM,6CAA6C;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAMC,eAAe,SAASJ,SAAS,CAAC;EACnD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIK,WAAW,CAACC,cAAc,EAAEC,OAAO,EAAE;IACjC,KAAK,CAAC,IAAI,CAAC;IACX;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACD,cAAc,GAAGA,cAAc,CAACE,KAAK,EAAE;IAC5C;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACD,OAAO,GAAGA,OAAO;EAC1B;EACA;AACJ;AACA;EACI,IAAIE,IAAI,GAAG;IACP,OAAO,QAAQ;EACnB;EACA;AACJ;AACA;EACIC,MAAM,GAAG;IACL,MAAMC,IAAI,GAAG,KAAK,CAACD,MAAM,EAAE;IAC3BC,IAAI,CAACL,cAAc,GAAG,IAAI,CAACA,cAAc,CAACI,MAAM,EAAE;IAClD,OAAOC,IAAI;EACf;EACA;AACJ;AACA;AACA;EACIC,SAAS,GAAG;IACR,IAAI,IAAI,CAACN,cAAc,CAACO,IAAI,CAACC,QAAQ,EAAE;MACnC;AACZ;AACA;AACA;AACA;MACY,MAAM,IAAIX,aAAa,CAAC,mCAAmC,EAAE,IAAI,CAAC;IACtE;EACJ;EACA;AACJ;AACA;AACA;EACIY,QAAQ,GAAG;IACPb,OAAO,CAACD,KAAK,CAACe,2BAA2B,CAAC,IAAI,CAACV,cAAc,EAAE,IAAI,CAACC,OAAO,CAAC,CAAC;EACjF;EACA;AACJ;AACA;EACI,WAAWU,SAAS,GAAG;IACnB,OAAO,iBAAiB;EAC5B;AACJ"},"metadata":{},"sourceType":"module"}
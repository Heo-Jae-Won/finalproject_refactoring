{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/colorgrid/colortile\n */\n\nimport ButtonView from '../button/buttonview';\nimport checkIcon from '../../theme/icons/color-tile-check.svg';\n\n/**\n * This class represents a single color tile in the {@link module:ui/colorgrid/colorgrid~ColorGridView}.\n *\n * @extends module:ui/button/buttonview~ButtonView\n */\nexport default class ColorTileView extends ButtonView {\n  constructor(locale) {\n    super(locale);\n    const bind = this.bindTemplate;\n\n    /**\n     * String representing a color shown as tile's background.\n     *\n     * @type {String}\n     */\n    this.set('color');\n\n    /**\n     * A flag that toggles a special CSS class responsible for displaying\n     * a border around the button.\n     *\n     * @type {Boolean}\n     */\n    this.set('hasBorder');\n    this.icon = checkIcon;\n    this.extendTemplate({\n      attributes: {\n        style: {\n          backgroundColor: bind.to('color')\n        },\n        class: ['ck', 'ck-color-grid__tile', bind.if('hasBorder', 'ck-color-table__color-tile_bordered')]\n      }\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  render() {\n    super.render();\n    this.iconView.fillColor = 'hsl(0, 0%, 100%)';\n  }\n}","map":{"version":3,"names":["ButtonView","checkIcon","ColorTileView","constructor","locale","bind","bindTemplate","set","icon","extendTemplate","attributes","style","backgroundColor","to","class","if","render","iconView","fillColor"],"sources":["C:/data/project/realproject/node_modules/@ckeditor/ckeditor5-ui/src/colorgrid/colortileview.js"],"sourcesContent":["/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/colorgrid/colortile\n */\n\nimport ButtonView from '../button/buttonview';\nimport checkIcon from '../../theme/icons/color-tile-check.svg';\n\n/**\n * This class represents a single color tile in the {@link module:ui/colorgrid/colorgrid~ColorGridView}.\n *\n * @extends module:ui/button/buttonview~ButtonView\n */\nexport default class ColorTileView extends ButtonView {\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t/**\n\t\t * String representing a color shown as tile's background.\n\t\t *\n\t\t * @type {String}\n\t\t */\n\t\tthis.set( 'color' );\n\n\t\t/**\n\t\t * A flag that toggles a special CSS class responsible for displaying\n\t\t * a border around the button.\n\t\t *\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.set( 'hasBorder' );\n\n\t\tthis.icon = checkIcon;\n\n\t\tthis.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tstyle: {\n\t\t\t\t\tbackgroundColor: bind.to( 'color' )\n\t\t\t\t},\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-color-grid__tile',\n\t\t\t\t\tbind.if( 'hasBorder', 'ck-color-table__color-tile_bordered' )\n\t\t\t\t]\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tthis.iconView.fillColor = 'hsl(0, 0%, 100%)';\n\t}\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,OAAOA,UAAU,MAAM,sBAAsB;AAC7C,OAAOC,SAAS,MAAM,wCAAwC;;AAE9D;AACA;AACA;AACA;AACA;AACA,eAAe,MAAMC,aAAa,SAASF,UAAU,CAAC;EACrDG,WAAW,CAAEC,MAAM,EAAG;IACrB,KAAK,CAAEA,MAAM,CAAE;IAEf,MAAMC,IAAI,GAAG,IAAI,CAACC,YAAY;;IAE9B;AACF;AACA;AACA;AACA;IACE,IAAI,CAACC,GAAG,CAAE,OAAO,CAAE;;IAEnB;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,CAACA,GAAG,CAAE,WAAW,CAAE;IAEvB,IAAI,CAACC,IAAI,GAAGP,SAAS;IAErB,IAAI,CAACQ,cAAc,CAAE;MACpBC,UAAU,EAAE;QACXC,KAAK,EAAE;UACNC,eAAe,EAAEP,IAAI,CAACQ,EAAE,CAAE,OAAO;QAClC,CAAC;QACDC,KAAK,EAAE,CACN,IAAI,EACJ,qBAAqB,EACrBT,IAAI,CAACU,EAAE,CAAE,WAAW,EAAE,qCAAqC,CAAE;MAE/D;IACD,CAAC,CAAE;EACJ;;EAEA;AACD;AACA;EACCC,MAAM,GAAG;IACR,KAAK,CAACA,MAAM,EAAE;IAEd,IAAI,CAACC,QAAQ,CAACC,SAAS,GAAG,kBAAkB;EAC7C;AACD"},"metadata":{},"sourceType":"module"}
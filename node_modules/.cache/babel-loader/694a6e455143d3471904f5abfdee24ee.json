{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module engine/view/observer/observer\n */\nimport { Emitter as DomEmitter } from '@ckeditor/ckeditor5-utils/src/dom/emittermixin';\n/**\n * Abstract base observer class. Observers are classes which listen to DOM events, do the preliminary\n * processing and fire events on the {@link module:engine/view/document~Document} objects.\n * Observers can also add features to the view, for instance by updating its status or marking elements\n * which need a refresh on DOM events.\n *\n * @abstract\n */\nexport default class Observer extends DomEmitter {\n  /**\n   * Creates an instance of the observer.\n   *\n   * @param {module:engine/view/view~View} view\n   */\n  constructor(view) {\n    super();\n    /**\n     * An instance of the view controller.\n     *\n     * @readonly\n     * @member {module:engine/view/view~View}\n     */\n    this.view = view;\n    /**\n     * A reference to the {@link module:engine/view/document~Document} object.\n     *\n     * @readonly\n     * @member {module:engine/view/document~Document}\n     */\n    this.document = view.document;\n    /**\n     * The state of the observer. If it is disabled, no events will be fired.\n     *\n     * @readonly\n     * @member {Boolean}\n     */\n    this.isEnabled = false;\n  }\n  /**\n   * Enables the observer. This method is called when the observer is registered to the\n   * {@link module:engine/view/view~View} and after {@link module:engine/view/view~View#forceRender rendering}\n   * (all observers are {@link #disable disabled} before rendering).\n   *\n   * A typical use case for disabling observers is that mutation observers need to be disabled for the rendering.\n   * However, a child class may not need to be disabled, so it can implement an empty method.\n   *\n   * @see module:engine/view/observer/observer~Observer#disable\n   */\n  enable() {\n    this.isEnabled = true;\n  }\n  /**\n   * Disables the observer. This method is called before\n   * {@link module:engine/view/view~View#forceRender rendering} to prevent firing events during rendering.\n   *\n   * @see module:engine/view/observer/observer~Observer#enable\n   */\n  disable() {\n    this.isEnabled = false;\n  }\n  /**\n   * Disables and destroys the observer, among others removes event listeners created by the observer.\n   */\n  destroy() {\n    this.disable();\n    this.stopListening();\n  }\n  /**\n   * Checks whether a given DOM event should be ignored (should not be turned into a synthetic view document event).\n   *\n   * Currently, an event will be ignored only if its target or any of its ancestors has the `data-cke-ignore-events` attribute.\n   * This attribute can be used inside the structures generated by\n   * {@link module:engine/view/downcastwriter~DowncastWriter#createUIElement `DowncastWriter#createUIElement()`} to ignore events\n   * fired within a UI that should be excluded from CKEditor 5's realms.\n   *\n   * @param {Node} domTarget The DOM event target to check (usually an element, sometimes a text node and\n   * potentially sometimes a document, too).\n   * @returns {Boolean} Whether this event should be ignored by the observer.\n   */\n  checkShouldIgnoreEventFromTarget(domTarget) {\n    if (domTarget && domTarget.nodeType === 3) {\n      domTarget = domTarget.parentNode;\n    }\n    if (!domTarget || domTarget.nodeType !== 1) {\n      return false;\n    }\n    return domTarget.matches('[data-cke-ignore-events], [data-cke-ignore-events] *');\n  }\n}","map":{"version":3,"names":["Emitter","DomEmitter","Observer","constructor","view","document","isEnabled","enable","disable","destroy","stopListening","checkShouldIgnoreEventFromTarget","domTarget","nodeType","parentNode","matches"],"sources":["C:/data/project/realproject/node_modules/@ckeditor/ckeditor5-engine/src/view/observer/observer.js"],"sourcesContent":["/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module engine/view/observer/observer\n */\nimport { Emitter as DomEmitter } from '@ckeditor/ckeditor5-utils/src/dom/emittermixin';\n/**\n * Abstract base observer class. Observers are classes which listen to DOM events, do the preliminary\n * processing and fire events on the {@link module:engine/view/document~Document} objects.\n * Observers can also add features to the view, for instance by updating its status or marking elements\n * which need a refresh on DOM events.\n *\n * @abstract\n */\nexport default class Observer extends DomEmitter {\n    /**\n     * Creates an instance of the observer.\n     *\n     * @param {module:engine/view/view~View} view\n     */\n    constructor(view) {\n        super();\n        /**\n         * An instance of the view controller.\n         *\n         * @readonly\n         * @member {module:engine/view/view~View}\n         */\n        this.view = view;\n        /**\n         * A reference to the {@link module:engine/view/document~Document} object.\n         *\n         * @readonly\n         * @member {module:engine/view/document~Document}\n         */\n        this.document = view.document;\n        /**\n         * The state of the observer. If it is disabled, no events will be fired.\n         *\n         * @readonly\n         * @member {Boolean}\n         */\n        this.isEnabled = false;\n    }\n    /**\n     * Enables the observer. This method is called when the observer is registered to the\n     * {@link module:engine/view/view~View} and after {@link module:engine/view/view~View#forceRender rendering}\n     * (all observers are {@link #disable disabled} before rendering).\n     *\n     * A typical use case for disabling observers is that mutation observers need to be disabled for the rendering.\n     * However, a child class may not need to be disabled, so it can implement an empty method.\n     *\n     * @see module:engine/view/observer/observer~Observer#disable\n     */\n    enable() {\n        this.isEnabled = true;\n    }\n    /**\n     * Disables the observer. This method is called before\n     * {@link module:engine/view/view~View#forceRender rendering} to prevent firing events during rendering.\n     *\n     * @see module:engine/view/observer/observer~Observer#enable\n     */\n    disable() {\n        this.isEnabled = false;\n    }\n    /**\n     * Disables and destroys the observer, among others removes event listeners created by the observer.\n     */\n    destroy() {\n        this.disable();\n        this.stopListening();\n    }\n    /**\n     * Checks whether a given DOM event should be ignored (should not be turned into a synthetic view document event).\n     *\n     * Currently, an event will be ignored only if its target or any of its ancestors has the `data-cke-ignore-events` attribute.\n     * This attribute can be used inside the structures generated by\n     * {@link module:engine/view/downcastwriter~DowncastWriter#createUIElement `DowncastWriter#createUIElement()`} to ignore events\n     * fired within a UI that should be excluded from CKEditor 5's realms.\n     *\n     * @param {Node} domTarget The DOM event target to check (usually an element, sometimes a text node and\n     * potentially sometimes a document, too).\n     * @returns {Boolean} Whether this event should be ignored by the observer.\n     */\n    checkShouldIgnoreEventFromTarget(domTarget) {\n        if (domTarget && domTarget.nodeType === 3) {\n            domTarget = domTarget.parentNode;\n        }\n        if (!domTarget || domTarget.nodeType !== 1) {\n            return false;\n        }\n        return domTarget.matches('[data-cke-ignore-events], [data-cke-ignore-events] *');\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,OAAO,IAAIC,UAAU,QAAQ,gDAAgD;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAMC,QAAQ,SAASD,UAAU,CAAC;EAC7C;AACJ;AACA;AACA;AACA;EACIE,WAAW,CAACC,IAAI,EAAE;IACd,KAAK,EAAE;IACP;AACR;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACA,IAAI,GAAGA,IAAI;IAChB;AACR;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACC,QAAQ,GAAGD,IAAI,CAACC,QAAQ;IAC7B;AACR;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACC,SAAS,GAAG,KAAK;EAC1B;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,MAAM,GAAG;IACL,IAAI,CAACD,SAAS,GAAG,IAAI;EACzB;EACA;AACJ;AACA;AACA;AACA;AACA;EACIE,OAAO,GAAG;IACN,IAAI,CAACF,SAAS,GAAG,KAAK;EAC1B;EACA;AACJ;AACA;EACIG,OAAO,GAAG;IACN,IAAI,CAACD,OAAO,EAAE;IACd,IAAI,CAACE,aAAa,EAAE;EACxB;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,gCAAgC,CAACC,SAAS,EAAE;IACxC,IAAIA,SAAS,IAAIA,SAAS,CAACC,QAAQ,KAAK,CAAC,EAAE;MACvCD,SAAS,GAAGA,SAAS,CAACE,UAAU;IACpC;IACA,IAAI,CAACF,SAAS,IAAIA,SAAS,CAACC,QAAQ,KAAK,CAAC,EAAE;MACxC,OAAO,KAAK;IAChB;IACA,OAAOD,SAAS,CAACG,OAAO,CAAC,sDAAsD,CAAC;EACpF;AACJ"},"metadata":{},"sourceType":"module"}
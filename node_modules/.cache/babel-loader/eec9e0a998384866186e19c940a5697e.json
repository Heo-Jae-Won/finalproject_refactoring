{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/colorgrid/colorgrid\n */\n\nimport View from '../view';\nimport ColorTileView from './colortileview';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\nimport addKeyboardHandlingForGrid from '../bindings/addkeyboardhandlingforgrid';\nimport '../../theme/components/colorgrid/colorgrid.css';\n\n/**\n * A grid of {@link module:ui/colorgrid/colortile~ColorTileView color tiles}.\n *\n * @extends module:ui/view~View\n */\nexport default class ColorGridView extends View {\n  /**\n   * Creates an instance of a color grid containing {@link module:ui/colorgrid/colortile~ColorTileView tiles}.\n   *\n   * @param {module:utils/locale~Locale} [locale] The localization services instance.\n   * @param {Object} options Component configuration\n   * @param {Array.<module:ui/colorgrid/colorgrid~ColorDefinition>} [options.colorDefinitions] Array with definitions\n   * required to create the {@link module:ui/colorgrid/colortile~ColorTileView tiles}.\n   * @param {Number} [options.columns=5] A number of columns to display the tiles.\n   */\n  constructor(locale, options) {\n    super(locale);\n    const colorDefinitions = options && options.colorDefinitions || [];\n    const viewStyleAttribute = {};\n\n    /**\n     * A number of columns for the tiles grid.\n     *\n     * @readonly\n     * @member {Number}\n     */\n    this.columns = options && options.columns ? options.columns : 5;\n    viewStyleAttribute.gridTemplateColumns = `repeat( ${this.columns}, 1fr)`;\n\n    /**\n     * The color of the currently selected color tile in {@link #items}.\n     *\n     * @observable\n     * @type {String}\n     */\n    this.set('selectedColor');\n\n    /**\n     * Collection of the child tile views.\n     *\n     * @readonly\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n    this.items = this.createCollection();\n\n    /**\n     * Tracks information about DOM focus in the grid.\n     *\n     * @readonly\n     * @member {module:utils/focustracker~FocusTracker}\n     */\n    this.focusTracker = new FocusTracker();\n\n    /**\n     * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n     *\n     * @readonly\n     * @member {module:utils/keystrokehandler~KeystrokeHandler}\n     */\n    this.keystrokes = new KeystrokeHandler();\n    this.items.on('add', (evt, colorTile) => {\n      colorTile.isOn = colorTile.color === this.selectedColor;\n    });\n    colorDefinitions.forEach(color => {\n      const colorTile = new ColorTileView();\n      colorTile.set({\n        color: color.color,\n        label: color.label,\n        tooltip: true,\n        hasBorder: color.options.hasBorder\n      });\n      colorTile.on('execute', () => {\n        this.fire('execute', {\n          value: color.color,\n          hasBorder: color.options.hasBorder,\n          label: color.label\n        });\n      });\n      this.items.add(colorTile);\n    });\n    this.setTemplate({\n      tag: 'div',\n      children: this.items,\n      attributes: {\n        class: ['ck', 'ck-color-grid'],\n        style: viewStyleAttribute\n      }\n    });\n    this.on('change:selectedColor', (evt, name, selectedColor) => {\n      for (const item of this.items) {\n        item.isOn = item.color === selectedColor;\n      }\n    });\n  }\n\n  /**\n   * Focuses the first focusable in {@link #items}.\n   */\n  focus() {\n    if (this.items.length) {\n      this.items.first.focus();\n    }\n  }\n\n  /**\n   * Focuses the last focusable in {@link #items}.\n   */\n  focusLast() {\n    if (this.items.length) {\n      this.items.last.focus();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  render() {\n    super.render();\n\n    // Items added before rendering should be known to the #focusTracker.\n    for (const item of this.items) {\n      this.focusTracker.add(item.element);\n    }\n    this.items.on('add', (evt, item) => {\n      this.focusTracker.add(item.element);\n    });\n    this.items.on('remove', (evt, item) => {\n      this.focusTracker.remove(item.element);\n    });\n\n    // Start listening for the keystrokes coming from #element.\n    this.keystrokes.listenTo(this.element);\n    addKeyboardHandlingForGrid({\n      keystrokeHandler: this.keystrokes,\n      focusTracker: this.focusTracker,\n      gridItems: this.items,\n      numberOfColumns: this.columns\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    super.destroy();\n    this.focusTracker.destroy();\n    this.keystrokes.destroy();\n  }\n\n  /**\n   * Fired when the `ColorTileView` for the picked item is executed.\n   *\n   * @event execute\n   * @param {Object} data Additional information about the event.\n   * @param {String} data.value The value of the selected color\n   * ({@link module:ui/colorgrid/colorgrid~ColorDefinition#color `color.color`}).\n   * @param {Boolean} data.hasBorder The `hasBorder` property of the selected color\n   * ({@link module:ui/colorgrid/colorgrid~ColorDefinition#options `color.options.hasBorder`}).\n   * @param {String} data.Label The label of the selected color\n   * ({@link module:ui/colorgrid/colorgrid~ColorDefinition#label `color.label`})\n   */\n}\n\n/**\n * A color definition used to create a {@link module:ui/colorgrid/colortile~ColorTileView}.\n *\n *\t\t{\n *\t\t\tcolor: 'hsl(0, 0%, 75%)',\n *\t\t\tlabel: 'Light Grey',\n *\t\t\toptions: {\n *\t\t\t\thasBorder: true\n *\t\t\t}\n *\t\t}\n *\n * @typedef {Object} module:ui/colorgrid/colorgrid~ColorDefinition\n * @type Object\n *\n * @property {String} color String representing a color.\n * It is used as value of background-color style in {@link module:ui/colorgrid/colortile~ColorTileView}.\n * @property {String} label String used as label for {@link module:ui/colorgrid/colortile~ColorTileView}.\n * @property {Object} options Additional options passed to create a {@link module:ui/colorgrid/colortile~ColorTileView}.\n * @property {Boolean} options.hasBorder A flag that indicates if special a CSS class should be added\n * to {@link module:ui/colorgrid/colortile~ColorTileView}, which renders a border around it.\n */","map":{"version":3,"names":["View","ColorTileView","FocusTracker","KeystrokeHandler","addKeyboardHandlingForGrid","ColorGridView","constructor","locale","options","colorDefinitions","viewStyleAttribute","columns","gridTemplateColumns","set","items","createCollection","focusTracker","keystrokes","on","evt","colorTile","isOn","color","selectedColor","forEach","label","tooltip","hasBorder","fire","value","add","setTemplate","tag","children","attributes","class","style","name","item","focus","length","first","focusLast","last","render","element","remove","listenTo","keystrokeHandler","gridItems","numberOfColumns","destroy"],"sources":["C:/data/project/realproject/node_modules/@ckeditor/ckeditor5-ui/src/colorgrid/colorgridview.js"],"sourcesContent":["/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/colorgrid/colorgrid\n */\n\nimport View from '../view';\nimport ColorTileView from './colortileview';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\nimport addKeyboardHandlingForGrid from '../bindings/addkeyboardhandlingforgrid';\n\nimport '../../theme/components/colorgrid/colorgrid.css';\n\n/**\n * A grid of {@link module:ui/colorgrid/colortile~ColorTileView color tiles}.\n *\n * @extends module:ui/view~View\n */\nexport default class ColorGridView extends View {\n\t/**\n\t * Creates an instance of a color grid containing {@link module:ui/colorgrid/colortile~ColorTileView tiles}.\n\t *\n\t * @param {module:utils/locale~Locale} [locale] The localization services instance.\n\t * @param {Object} options Component configuration\n\t * @param {Array.<module:ui/colorgrid/colorgrid~ColorDefinition>} [options.colorDefinitions] Array with definitions\n\t * required to create the {@link module:ui/colorgrid/colortile~ColorTileView tiles}.\n\t * @param {Number} [options.columns=5] A number of columns to display the tiles.\n\t */\n\tconstructor( locale, options ) {\n\t\tsuper( locale );\n\n\t\tconst colorDefinitions = options && options.colorDefinitions || [];\n\t\tconst viewStyleAttribute = {};\n\n\t\t/**\n\t\t * A number of columns for the tiles grid.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number}\n\t\t */\n\t\tthis.columns = options && options.columns ? options.columns : 5;\n\n\t\tviewStyleAttribute.gridTemplateColumns = `repeat( ${ this.columns }, 1fr)`;\n\n\t\t/**\n\t\t * The color of the currently selected color tile in {@link #items}.\n\t\t *\n\t\t * @observable\n\t\t * @type {String}\n\t\t */\n\t\tthis.set( 'selectedColor' );\n\n\t\t/**\n\t\t * Collection of the child tile views.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.items = this.createCollection();\n\n\t\t/**\n\t\t * Tracks information about DOM focus in the grid.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker}\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\t/**\n\t\t * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\n\t\t */\n\t\tthis.keystrokes = new KeystrokeHandler();\n\n\t\tthis.items.on( 'add', ( evt, colorTile ) => {\n\t\t\tcolorTile.isOn = colorTile.color === this.selectedColor;\n\t\t} );\n\n\t\tcolorDefinitions.forEach( color => {\n\t\t\tconst colorTile = new ColorTileView();\n\n\t\t\tcolorTile.set( {\n\t\t\t\tcolor: color.color,\n\t\t\t\tlabel: color.label,\n\t\t\t\ttooltip: true,\n\t\t\t\thasBorder: color.options.hasBorder\n\t\t\t} );\n\n\t\t\tcolorTile.on( 'execute', () => {\n\t\t\t\tthis.fire( 'execute', {\n\t\t\t\t\tvalue: color.color,\n\t\t\t\t\thasBorder: color.options.hasBorder,\n\t\t\t\t\tlabel: color.label\n\t\t\t\t} );\n\t\t\t} );\n\n\t\t\tthis.items.add( colorTile );\n\t\t} );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tchildren: this.items,\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-color-grid'\n\t\t\t\t],\n\t\t\t\tstyle: viewStyleAttribute\n\t\t\t}\n\t\t} );\n\n\t\tthis.on( 'change:selectedColor', ( evt, name, selectedColor ) => {\n\t\t\tfor ( const item of this.items ) {\n\t\t\t\titem.isOn = item.color === selectedColor;\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Focuses the first focusable in {@link #items}.\n\t */\n\tfocus() {\n\t\tif ( this.items.length ) {\n\t\t\tthis.items.first.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Focuses the last focusable in {@link #items}.\n\t */\n\tfocusLast() {\n\t\tif ( this.items.length ) {\n\t\t\tthis.items.last.focus();\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\t// Items added before rendering should be known to the #focusTracker.\n\t\tfor ( const item of this.items ) {\n\t\t\tthis.focusTracker.add( item.element );\n\t\t}\n\n\t\tthis.items.on( 'add', ( evt, item ) => {\n\t\t\tthis.focusTracker.add( item.element );\n\t\t} );\n\n\t\tthis.items.on( 'remove', ( evt, item ) => {\n\t\t\tthis.focusTracker.remove( item.element );\n\t\t} );\n\n\t\t// Start listening for the keystrokes coming from #element.\n\t\tthis.keystrokes.listenTo( this.element );\n\n\t\taddKeyboardHandlingForGrid( {\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tgridItems: this.items,\n\t\t\tnumberOfColumns: this.columns\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tsuper.destroy();\n\n\t\tthis.focusTracker.destroy();\n\t\tthis.keystrokes.destroy();\n\t}\n\n\t/**\n\t * Fired when the `ColorTileView` for the picked item is executed.\n\t *\n\t * @event execute\n\t * @param {Object} data Additional information about the event.\n\t * @param {String} data.value The value of the selected color\n\t * ({@link module:ui/colorgrid/colorgrid~ColorDefinition#color `color.color`}).\n\t * @param {Boolean} data.hasBorder The `hasBorder` property of the selected color\n\t * ({@link module:ui/colorgrid/colorgrid~ColorDefinition#options `color.options.hasBorder`}).\n\t * @param {String} data.Label The label of the selected color\n\t * ({@link module:ui/colorgrid/colorgrid~ColorDefinition#label `color.label`})\n\t */\n}\n\n/**\n * A color definition used to create a {@link module:ui/colorgrid/colortile~ColorTileView}.\n *\n *\t\t{\n *\t\t\tcolor: 'hsl(0, 0%, 75%)',\n *\t\t\tlabel: 'Light Grey',\n *\t\t\toptions: {\n *\t\t\t\thasBorder: true\n *\t\t\t}\n *\t\t}\n *\n * @typedef {Object} module:ui/colorgrid/colorgrid~ColorDefinition\n * @type Object\n *\n * @property {String} color String representing a color.\n * It is used as value of background-color style in {@link module:ui/colorgrid/colortile~ColorTileView}.\n * @property {String} label String used as label for {@link module:ui/colorgrid/colortile~ColorTileView}.\n * @property {Object} options Additional options passed to create a {@link module:ui/colorgrid/colortile~ColorTileView}.\n * @property {Boolean} options.hasBorder A flag that indicates if special a CSS class should be added\n * to {@link module:ui/colorgrid/colortile~ColorTileView}, which renders a border around it.\n */\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
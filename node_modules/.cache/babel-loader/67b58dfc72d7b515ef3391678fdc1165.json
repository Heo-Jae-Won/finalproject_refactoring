{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* globals HTMLTextAreaElement */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport setDataInElement from '@ckeditor/ckeditor5-utils/src/dom/setdatainelement';\n\n/**\n * @module core/editor/utils/elementapimixin\n */\n\n/**\n * Implementation of the {@link module:core/editor/utils/elementapimixin~ElementApi}.\n *\n * @mixin ElementApiMixin\n * @implements module:core/editor/utils/elementapimixin~ElementApi\n */\nconst ElementApiMixin = {\n  /**\n   * @inheritDoc\n   */\n  updateSourceElement() {\n    let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.data.get();\n    if (!this.sourceElement) {\n      /**\n       * Cannot update the source element of a detached editor.\n       *\n       * The {@link ~ElementApi#updateSourceElement `updateSourceElement()`} method cannot be called if you did not\n       * pass an element to `Editor.create()`.\n       *\n       * @error editor-missing-sourceelement\n       */\n      throw new CKEditorError('editor-missing-sourceelement', this);\n    }\n    const shouldUpdateSourceElement = this.config.get('updateSourceElementOnDestroy');\n    const isSourceElementTextArea = this.sourceElement instanceof HTMLTextAreaElement;\n\n    // The data returned by the editor might be unsafe, so we want to prevent rendering\n    // unsafe content inside the source element different than <textarea>, which is considered\n    // secure. This behaviour could be changed by setting the `updateSourceElementOnDestroy`\n    // configuration option to `true`.\n    if (!shouldUpdateSourceElement && !isSourceElementTextArea) {\n      setDataInElement(this.sourceElement, '');\n      return;\n    }\n    setDataInElement(this.sourceElement, data);\n  }\n};\nexport default ElementApiMixin;\n\n/**\n * Interface describing an editor that replaced a DOM element (was \"initialized on an element\").\n *\n * Such an editor should provide a method to\n * {@link module:core/editor/utils/elementapimixin~ElementApi#updateSourceElement update the replaced element with the current data}.\n *\n * @interface ElementApi\n */\n\n/**\n * The element on which the editor has been initialized.\n *\n * @readonly\n * @member {HTMLElement} #sourceElement\n */\n\n/**\n * Updates the {@link #sourceElement editor source element}'s content with the data.\n *\n * @method #updateSourceElement\n * @param {String} data The data that should be used to update the source element.\n * By default, it is taken directly from the existing editor instance.\n */","map":{"version":3,"names":["CKEditorError","setDataInElement","ElementApiMixin","updateSourceElement","data","get","sourceElement","shouldUpdateSourceElement","config","isSourceElementTextArea","HTMLTextAreaElement"],"sources":["C:/data/project/realproject/node_modules/@ckeditor/ckeditor5-core/src/editor/utils/elementapimixin.js"],"sourcesContent":["/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* globals HTMLTextAreaElement */\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport setDataInElement from '@ckeditor/ckeditor5-utils/src/dom/setdatainelement';\n\n/**\n * @module core/editor/utils/elementapimixin\n */\n\n/**\n * Implementation of the {@link module:core/editor/utils/elementapimixin~ElementApi}.\n *\n * @mixin ElementApiMixin\n * @implements module:core/editor/utils/elementapimixin~ElementApi\n */\nconst ElementApiMixin = {\n\t/**\n\t * @inheritDoc\n\t */\n\tupdateSourceElement( data = this.data.get() ) {\n\t\tif ( !this.sourceElement ) {\n\t\t\t/**\n\t\t\t * Cannot update the source element of a detached editor.\n\t\t\t *\n\t\t\t * The {@link ~ElementApi#updateSourceElement `updateSourceElement()`} method cannot be called if you did not\n\t\t\t * pass an element to `Editor.create()`.\n\t\t\t *\n\t\t\t * @error editor-missing-sourceelement\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'editor-missing-sourceelement',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\tconst shouldUpdateSourceElement = this.config.get( 'updateSourceElementOnDestroy' );\n\t\tconst isSourceElementTextArea = this.sourceElement instanceof HTMLTextAreaElement;\n\n\t\t// The data returned by the editor might be unsafe, so we want to prevent rendering\n\t\t// unsafe content inside the source element different than <textarea>, which is considered\n\t\t// secure. This behaviour could be changed by setting the `updateSourceElementOnDestroy`\n\t\t// configuration option to `true`.\n\t\tif ( !shouldUpdateSourceElement && !isSourceElementTextArea ) {\n\t\t\tsetDataInElement( this.sourceElement, '' );\n\n\t\t\treturn;\n\t\t}\n\n\t\tsetDataInElement( this.sourceElement, data );\n\t}\n};\n\nexport default ElementApiMixin;\n\n/**\n * Interface describing an editor that replaced a DOM element (was \"initialized on an element\").\n *\n * Such an editor should provide a method to\n * {@link module:core/editor/utils/elementapimixin~ElementApi#updateSourceElement update the replaced element with the current data}.\n *\n * @interface ElementApi\n */\n\n/**\n * The element on which the editor has been initialized.\n *\n * @readonly\n * @member {HTMLElement} #sourceElement\n */\n\n/**\n * Updates the {@link #sourceElement editor source element}'s content with the data.\n *\n * @method #updateSourceElement\n * @param {String} data The data that should be used to update the source element.\n * By default, it is taken directly from the existing editor instance.\n */\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,aAAa,MAAM,6CAA6C;AACvE,OAAOC,gBAAgB,MAAM,oDAAoD;;AAEjF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,eAAe,GAAG;EACvB;AACD;AACA;EACCC,mBAAmB,GAA2B;IAAA,IAAzBC,IAAI,uEAAG,IAAI,CAACA,IAAI,CAACC,GAAG,EAAE;IAC1C,IAAK,CAAC,IAAI,CAACC,aAAa,EAAG;MAC1B;AACH;AACA;AACA;AACA;AACA;AACA;AACA;MACG,MAAM,IAAIN,aAAa,CACtB,8BAA8B,EAC9B,IAAI,CACJ;IACF;IAEA,MAAMO,yBAAyB,GAAG,IAAI,CAACC,MAAM,CAACH,GAAG,CAAE,8BAA8B,CAAE;IACnF,MAAMI,uBAAuB,GAAG,IAAI,CAACH,aAAa,YAAYI,mBAAmB;;IAEjF;IACA;IACA;IACA;IACA,IAAK,CAACH,yBAAyB,IAAI,CAACE,uBAAuB,EAAG;MAC7DR,gBAAgB,CAAE,IAAI,CAACK,aAAa,EAAE,EAAE,CAAE;MAE1C;IACD;IAEAL,gBAAgB,CAAE,IAAI,CAACK,aAAa,EAAEF,IAAI,CAAE;EAC7C;AACD,CAAC;AAED,eAAeF,eAAe;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}
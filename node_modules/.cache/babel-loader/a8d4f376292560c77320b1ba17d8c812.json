{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\nimport { getPositionShorthandNormalizer, getBoxSidesValueReducer } from './utils';\n/**\n * Adds a margin CSS styles processing rules.\n *\n *\t\teditor.data.addStyleProcessorRules( addPaddingRules );\n *\n * The normalized value is stored as:\n *\n *\t\tconst styles = {\n *\t\t\tpadding: {\n *\t\t\t\ttop,\n *\t\t\t\tright,\n *\t\t\t\tbottom,\n *\t\t\t\tleft\n *\t\t\t}\n *\t\t};\n *\n * @param {module:engine/view/stylesmap~StylesProcessor} stylesProcessor\n */\nexport function addPaddingRules(stylesProcessor) {\n  stylesProcessor.setNormalizer('padding', getPositionShorthandNormalizer('padding'));\n  stylesProcessor.setNormalizer('padding-top', value => ({\n    path: 'padding.top',\n    value\n  }));\n  stylesProcessor.setNormalizer('padding-right', value => ({\n    path: 'padding.right',\n    value\n  }));\n  stylesProcessor.setNormalizer('padding-bottom', value => ({\n    path: 'padding.bottom',\n    value\n  }));\n  stylesProcessor.setNormalizer('padding-left', value => ({\n    path: 'padding.left',\n    value\n  }));\n  stylesProcessor.setReducer('padding', getBoxSidesValueReducer('padding'));\n  stylesProcessor.setStyleRelation('padding', ['padding-top', 'padding-right', 'padding-bottom', 'padding-left']);\n}","map":{"version":3,"names":["getPositionShorthandNormalizer","getBoxSidesValueReducer","addPaddingRules","stylesProcessor","setNormalizer","value","path","setReducer","setStyleRelation"],"sources":["C:/data/project/realproject/node_modules/@ckeditor/ckeditor5-engine/src/view/styles/padding.js"],"sourcesContent":["/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\nimport { getPositionShorthandNormalizer, getBoxSidesValueReducer } from './utils';\n/**\n * Adds a margin CSS styles processing rules.\n *\n *\t\teditor.data.addStyleProcessorRules( addPaddingRules );\n *\n * The normalized value is stored as:\n *\n *\t\tconst styles = {\n *\t\t\tpadding: {\n *\t\t\t\ttop,\n *\t\t\t\tright,\n *\t\t\t\tbottom,\n *\t\t\t\tleft\n *\t\t\t}\n *\t\t};\n *\n * @param {module:engine/view/stylesmap~StylesProcessor} stylesProcessor\n */\nexport function addPaddingRules(stylesProcessor) {\n    stylesProcessor.setNormalizer('padding', getPositionShorthandNormalizer('padding'));\n    stylesProcessor.setNormalizer('padding-top', value => ({ path: 'padding.top', value }));\n    stylesProcessor.setNormalizer('padding-right', value => ({ path: 'padding.right', value }));\n    stylesProcessor.setNormalizer('padding-bottom', value => ({ path: 'padding.bottom', value }));\n    stylesProcessor.setNormalizer('padding-left', value => ({ path: 'padding.left', value }));\n    stylesProcessor.setReducer('padding', getBoxSidesValueReducer('padding'));\n    stylesProcessor.setStyleRelation('padding', ['padding-top', 'padding-right', 'padding-bottom', 'padding-left']);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,8BAA8B,EAAEC,uBAAuB,QAAQ,SAAS;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,eAAe,CAACC,eAAe,EAAE;EAC7CA,eAAe,CAACC,aAAa,CAAC,SAAS,EAAEJ,8BAA8B,CAAC,SAAS,CAAC,CAAC;EACnFG,eAAe,CAACC,aAAa,CAAC,aAAa,EAAEC,KAAK,KAAK;IAAEC,IAAI,EAAE,aAAa;IAAED;EAAM,CAAC,CAAC,CAAC;EACvFF,eAAe,CAACC,aAAa,CAAC,eAAe,EAAEC,KAAK,KAAK;IAAEC,IAAI,EAAE,eAAe;IAAED;EAAM,CAAC,CAAC,CAAC;EAC3FF,eAAe,CAACC,aAAa,CAAC,gBAAgB,EAAEC,KAAK,KAAK;IAAEC,IAAI,EAAE,gBAAgB;IAAED;EAAM,CAAC,CAAC,CAAC;EAC7FF,eAAe,CAACC,aAAa,CAAC,cAAc,EAAEC,KAAK,KAAK;IAAEC,IAAI,EAAE,cAAc;IAAED;EAAM,CAAC,CAAC,CAAC;EACzFF,eAAe,CAACI,UAAU,CAAC,SAAS,EAAEN,uBAAuB,CAAC,SAAS,CAAC,CAAC;EACzEE,eAAe,CAACK,gBAAgB,CAAC,SAAS,EAAE,CAAC,aAAa,EAAE,eAAe,EAAE,gBAAgB,EAAE,cAAc,CAAC,CAAC;AACnH"},"metadata":{},"sourceType":"module"}
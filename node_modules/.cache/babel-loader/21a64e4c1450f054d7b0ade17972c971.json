{"ast":null,"code":"var _jsxFileName = \"C:\\\\data\\\\project\\\\realproject\\\\src\\\\my\\\\MyUpdatePass.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, Row, Alert, Card } from 'react-bootstrap';\nimport { Grid, TextField } from '@material-ui/core';\nimport axios from 'axios';\nimport { UserContext } from '../context/UserContext';\nimport { useContext } from 'react';\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyUpdatePass = _ref => {\n  _s();\n  let {\n    history\n  } = _ref;\n  const [pass1, setPass1] = useState('');\n  const {\n    loginUser\n  } = useContext(UserContext);\n  const [isCheck, setIsCheck] = useState(false);\n\n  //  8 ~ 10자 영문, 숫자 조합\n  const checkPassword_submit = form => {\n    var regExp = /^(?=.*\\d)(?=.*[a-zA-Z])[0-9a-zA-Z]{8,10}$/;\n    const result = regExp.test(form);\n    if (!result) alert('비밀번호를 양식대로 써주세요');\n    return result;\n  };\n  const [form, setForm] = useState({\n    uid: loginUser.uid,\n    upass: ''\n  });\n  const {\n    uid,\n    upass\n  } = form;\n  const onChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  //비번 일치 확인\n  const onCheckPass = async e => {\n    e.preventDefault();\n    if (pass1 === '') {\n      Swal.fire({\n        title: '글을 삭제하시겠습니까?',\n        text: \"삭제하시면 다시 복구시킬 수 없습니다.\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: '삭제',\n        cancelButtonText: '취소'\n      });\n      return;\n    } else if (checkPassword_submit(form.upass) === false) {\n      alert('비밀번호 양식을 준수해주세요');\n      return;\n    } else if (upass !== pass1) {\n      alert('새로운 비밀번호와 입력한 비밀번호가 다릅니다!');\n      return;\n    } else if (upass === pass1) {\n      alert('비밀번호가 일치합니다.');\n      setIsCheck(true);\n      return;\n    }\n  };\n  const onSubmitUpdate = async e => {\n    e.preventDefault();\n    if (!window.confirm('입력하신 비밀번호로 변경하시겠습니까?')) {\n      setIsCheck(false);\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"uid\", uid);\n    formData.append(\"upass\", upass);\n    try {\n      await axios.post('/api/user/updatepw/', formData);\n      alert('비밀번호 변경완료!');\n      history.push('/login/form');\n    } catch (e) {\n      if (e) alert('예상치 못한 오류가 발생했습니다.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex justify-content-center mt-5\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-3\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: '30rem'\n        },\n        className: \"p-3\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n            helperText: \"8-10\\uC790 \\uC601\\uBB38\\uB300\\uC18C\\uBB38\\uC790\\uC640 \\uC22B\\uC790\\uB97C \\uC870\\uD569\",\n            FormHelperTextProps: {\n              style: {\n                fontSize: 15\n              }\n            },\n            value: form.upass,\n            name: \"upass\",\n            autoComplete: \"upass\",\n            type: \"password\",\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            id: \"upass\",\n            label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n            value: pass1,\n            name: \"upass\",\n            autoComplete: \"upass\",\n            type: \"password\",\n            onChange: e => setPass1(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onCheckPass,\n          className: \"mt-3\",\n          children: \"\\uD328\\uC2A4\\uC6CC\\uB4DC \\uC77C\\uCE58 \\uD655\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: isCheck === true ? onSubmitUpdate : () => alert('비밀번호 일치 여부를 확인하세요'),\n          className: \"mt-3\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uBCC0\\uACBD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n_s(MyUpdatePass, \"fvjtAWuyeE1GjzP1PQAAeBYXHMg=\");\n_c = MyUpdatePass;\nexport default MyUpdatePass;\nvar _c;\n$RefreshReg$(_c, \"MyUpdatePass\");","map":{"version":3,"names":["React","useState","Button","Row","Alert","Card","Grid","TextField","axios","UserContext","useContext","Swal","MyUpdatePass","history","pass1","setPass1","loginUser","isCheck","setIsCheck","checkPassword_submit","form","regExp","result","test","alert","setForm","uid","upass","onChange","e","target","name","value","onCheckPass","preventDefault","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","onSubmitUpdate","window","confirm","formData","FormData","append","post","push","width","style","fontSize"],"sources":["C:/data/project/realproject/src/my/MyUpdatePass.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Row, Alert, Card } from 'react-bootstrap';\r\nimport { Grid, TextField } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport { UserContext } from '../context/UserContext';\r\nimport { useContext } from 'react';\r\nimport Swal from 'sweetalert2'\r\n\r\nconst MyUpdatePass = ({ history }) => {\r\n    const [pass1, setPass1] = useState('')\r\n    const { loginUser } = useContext(UserContext);\r\n    const [isCheck,setIsCheck]=useState(false);\r\n\r\n    //  8 ~ 10자 영문, 숫자 조합\r\n    const checkPassword_submit = (form) => {\r\n        var regExp = /^(?=.*\\d)(?=.*[a-zA-Z])[0-9a-zA-Z]{8,10}$/\r\n        const result = regExp.test(form);\r\n        if (!result) alert('비밀번호를 양식대로 써주세요');\r\n        return result;\r\n    }\r\n\r\n    const [form, setForm] = useState({\r\n        uid: loginUser.uid,\r\n        upass: ''\r\n    })\r\n\r\n    const { uid, upass } = form;\r\n\r\n    const onChange = (e) => {\r\n        setForm({\r\n            ...form,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    //비번 일치 확인\r\n    const onCheckPass = async (e) => {\r\n        e.preventDefault();\r\n        if (pass1 === '') {\r\n            Swal.fire({\r\n                title: '글을 삭제하시겠습니까?',\r\n                text: \"삭제하시면 다시 복구시킬 수 없습니다.\",\r\n                icon: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#3085d6',\r\n                cancelButtonColor: '#d33',\r\n                confirmButtonText: '삭제',\r\n                cancelButtonText: '취소'\r\n              })\r\n            return;\r\n        }\r\n\r\n\r\n        else if (checkPassword_submit(form.upass) === false) {\r\n            alert('비밀번호 양식을 준수해주세요');\r\n            return;\r\n        }\r\n\r\n        else if (upass !== pass1) {\r\n            alert('새로운 비밀번호와 입력한 비밀번호가 다릅니다!');\r\n            return;\r\n        }\r\n        else if (upass === pass1) {\r\n            alert('비밀번호가 일치합니다.');\r\n            setIsCheck(true);\r\n            return; \r\n        }\r\n        \r\n\r\n    }\r\n\r\n    const onSubmitUpdate = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!window.confirm('입력하신 비밀번호로 변경하시겠습니까?')) {\r\n            setIsCheck(false);\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"uid\", uid);\r\n        formData.append(\"upass\", upass);\r\n        try {\r\n            await axios.post('/api/user/updatepw/', formData);\r\n            alert('비밀번호 변경완료!');\r\n            history.push('/login/form')\r\n        } catch (e) {\r\n            if (e) alert('예상치 못한 오류가 발생했습니다.')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='d-flex justify-content-center mt-5'>\r\n            <Row className='mt-3'>\r\n                <Card style={{ width: '30rem' }} className=\"p-3\">\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            label=\"비밀번호\"\r\n                            helperText=\"8-10자 영문대소문자와 숫자를 조합\"\r\n                            FormHelperTextProps={{ style: { fontSize: 15 } }}\r\n                            value={form.upass}\r\n                            name=\"upass\"\r\n                            autoComplete=\"upass\"\r\n                            type=\"password\"\r\n                            onChange={onChange}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <hr />\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"upass\"\r\n                            label=\"비밀번호 확인\"\r\n                            value={pass1}\r\n                            name=\"upass\"\r\n                            autoComplete=\"upass\"\r\n                            type=\"password\"\r\n                            onChange={(e) => setPass1(e.target.value)}\r\n                        />\r\n                    </Grid>\r\n                    <Button onClick={onCheckPass} className='mt-3'>패스워드 일치 확인</Button>\r\n                 \r\n                    <Button onClick={isCheck===true ? onSubmitUpdate :()=>alert('비밀번호 일치 여부를 확인하세요')} className='mt-3'>비밀번호 변경</Button>\r\n                </Card>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyUpdatePass"],"mappings":"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"},"metadata":{},"sourceType":"module"}
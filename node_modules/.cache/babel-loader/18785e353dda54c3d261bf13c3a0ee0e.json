{"ast":null,"code":"var _jsxFileName = \"C:\\\\data\\\\project\\\\realproject\\\\src\\\\my\\\\MyInfo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useContext } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { UserContext } from '../context/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MyInfo = _ref => {\n  _s();\n  let {\n    match,\n    history\n  } = _ref;\n  const {\n    loginUser,\n    setLoginUser\n  } = useContext(UserContext);\n  const [show, setShow] = useState(false);\n  const [pass, setPass] = useState('');\n  const [pass1, setPass1] = useState('');\n  const [image, setImage] = useState('');\n  const uid = match.params.uid;\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [form, setForm] = useState({\n    uid: uid,\n    uname: '',\n    uprofile: '',\n    file: null\n  });\n  const onChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const onChangeFile = e => {\n    setForm({\n      ...form,\n      file: e.target.files[0],\n      uprofile: URL.createObjectURL(e.target.files[0])\n    });\n    setImage(URL.createObjectURL(e.target.files[0]));\n  };\n  const callUser = async () => {\n    const result = await axios.get(`/api/user/read/${uid}`);\n    setForm(result.data);\n  };\n\n  //수정하기\n  const onSubmitForm = async e => {\n    e.preventDefault();\n    if (!window.confirm('수정한 내용을 반영하시겠습니까?')) return;\n    const formData = new FormData();\n    formData.append(\"file\", form.file);\n    formData.append(\"uname\", form.uname);\n    formData.append(\"uid\", uid);\n    formData.append(\"photo\", form.photo);\n    try {\n      await axios.post('/api/user/update', formData);\n      alert('회원정보 수정완료!');\n    } catch (e) {\n      if (e) alert('예상치 못한 오류가 발생했습니다.');\n    }\n    setLoginUser({\n      ...loginUser,\n      uname: form.uname\n    });\n    history.push('/user');\n  };\n  useEffect(() => {\n    console.log(history);\n    const unblock = history.block('지금 페이지에서 나가게 되면 변경 사항이 저장되지 않습니다.');\n    return () => {\n      unblock();\n    };\n  }, [history]);\n  const onClickUpdatePw = async () => {\n    if (pass === '' || pass1 === '' || pass !== pass1) {\n      alert('비밀번호와 비밀번호 확인을 입력하세요!');\n      return;\n    }\n    await axios.post('/api/user/update/password', {\n      uid: uid,\n      upass: pass\n    });\n    alert(\"비밀번호 변경 완료!\");\n    handleClose();\n    sessionStorage.removeItem('uid');\n    history.push('/login');\n  };\n  useEffect(() => {\n    callUser();\n  }, [uid]);\n  if (!form) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading......\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleShow,\n      children: \"Launch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(MyInfo, \"/X42nOZ4GDuh8CFACa/oaFhOPH8=\");\n_c = MyInfo;\nexport default MyInfo;\nvar _c;\n$RefreshReg$(_c, \"MyInfo\");","map":{"version":3,"names":["React","useEffect","useState","axios","useContext","Button","UserContext","MyInfo","match","history","loginUser","setLoginUser","show","setShow","pass","setPass","pass1","setPass1","image","setImage","uid","params","handleClose","handleShow","form","setForm","uname","uprofile","file","onChange","e","target","name","value","onChangeFile","files","URL","createObjectURL","callUser","result","get","data","onSubmitForm","preventDefault","window","confirm","formData","FormData","append","photo","post","alert","push","console","log","unblock","block","onClickUpdatePw","upass","sessionStorage","removeItem"],"sources":["C:/data/project/realproject/src/my/MyInfo.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nimport axios from 'axios';\r\nimport { useContext } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { UserContext } from '../context/UserContext';\r\n\r\nconst MyInfo = ({ match, history }) => {\r\n  const { loginUser, setLoginUser } = useContext(UserContext);\r\n  const [show, setShow] = useState(false);\r\n  const [pass, setPass] = useState('')\r\n  const [pass1, setPass1] = useState('')\r\n  const [image, setImage] = useState('')\r\n  const uid = match.params.uid;\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const [form, setForm] = useState({\r\n    uid: uid,\r\n    uname: '',\r\n    uprofile: '',\r\n    file: null\r\n  });\r\n\r\n\r\n\r\n\r\n  const onChange = (e) => {\r\n    setForm({\r\n      ...form,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n\r\n  const onChangeFile = (e) => {\r\n    setForm({\r\n      ...form,\r\n      file: e.target.files[0],\r\n      uprofile: URL.createObjectURL(e.target.files[0])\r\n    })\r\n    setImage(URL.createObjectURL(e.target.files[0]));\r\n  }\r\n\r\n\r\n  const callUser = async () => {\r\n    const result = await axios.get(`/api/user/read/${uid}`);\r\n    setForm(result.data);\r\n  }\r\n\r\n  //수정하기\r\n  const onSubmitForm = async (e) => {\r\n    e.preventDefault();\r\n    if (!window.confirm('수정한 내용을 반영하시겠습니까?')) return;\r\n    const formData = new FormData();\r\n    formData.append(\"file\", form.file);\r\n    formData.append(\"uname\", form.uname);\r\n    formData.append(\"uid\", uid);\r\n    formData.append(\"photo\", form.photo);\r\n\r\n    try{\r\n      await axios.post('/api/user/update', formData);\r\n      alert('회원정보 수정완료!');\r\n    }catch(e){\r\n      if(e) alert('예상치 못한 오류가 발생했습니다.')\r\n    }\r\n\r\n    setLoginUser({\r\n      ...loginUser,\r\n      uname: form.uname\r\n    });\r\n    history.push('/user');\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(history);\r\n    const unblock = history.block('지금 페이지에서 나가게 되면 변경 사항이 저장되지 않습니다.');\r\n    return () => {\r\n        unblock();\r\n    };\r\n}, [history]);\r\n\r\n  const onClickUpdatePw = async () => {\r\n    if (pass === '' || pass1 === '' || pass !== pass1) {\r\n      alert('비밀번호와 비밀번호 확인을 입력하세요!');\r\n      return;\r\n    }\r\n\r\n    await axios.post('/api/user/update/password',\r\n      { uid: uid, upass: pass });\r\n    alert(\"비밀번호 변경 완료!\");\r\n    handleClose();\r\n    sessionStorage.removeItem('uid');\r\n    history.push('/login');\r\n  }\r\n\r\n  useEffect(() => {\r\n    callUser();\r\n  }, [uid]);\r\n\r\n  if (!form) return <h1>Loading......</h1>\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"primary\" onClick={handleShow}>\r\n        Launch\r\n      </Button>\r\n\r\n      {/* <Offcanvas show={show} onHide={handleClose}>\r\n        <Offcanvas.Header closeButton>\r\n          <Offcanvas.Title>Offcanvas</Offcanvas.Title>\r\n        </Offcanvas.Header>\r\n        <Offcanvas.Body>\r\n          <Card className=\"my-5 p-3\">\r\n            <Form>\r\n              <Form.Control className=\"my-3\"\r\n                disabled={true}\r\n                value={uid} />\r\n              <Button onClick={handleShow}>비밀번호변경</Button>\r\n              <Form.Control className=\"my-3\"\r\n                onChange={onChange}\r\n                value={form.uname}\r\n                name=\"uname\" />\r\n              <img src={form.uprofile} width={300} />\r\n\r\n\r\n              <Form.Control className=\"my-3\"\r\n                type=\"file\"\r\n                onChange={onChangeFile} />\r\n              <Button onClick={onSubmitForm}>수정</Button>\r\n            </Form>\r\n          </Card>\r\n          <>\r\n            <Modal show={show} onHide={handleClose}>\r\n              <Modal.Header closeButton>\r\n                <Modal.Title>비밀번호수정</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <Form.Control className=\"my-3\"\r\n                  placeholder='비밀번호'\r\n                  type=\"password\"\r\n                  value={pass}\r\n                  onChange={(e) => setPass(e.target.value)} />\r\n                <Form.Control\r\n                  placeholder='비밀번호확인'\r\n                  value={pass1}\r\n                  onChange={(e) => setPass1(e.target.value)}\r\n                  type=\"password\" />\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={onClickUpdatePw}>\r\n                  비밀번호변경\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n          </>\r\n        </Offcanvas.Body>\r\n      </Offcanvas> */}\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default MyInfo"],"mappings":"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"},"metadata":{},"sourceType":"module"}
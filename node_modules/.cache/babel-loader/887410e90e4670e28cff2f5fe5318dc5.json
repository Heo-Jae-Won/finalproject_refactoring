{"ast":null,"code":"var _jsxFileName = \"C:\\\\data\\\\project\\\\realproject\\\\src\\\\my\\\\MyBuyListChart.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useContext, useRef } from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport Chart from 'react-google-charts';\nimport qs from 'qs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  title: title.current,\n  lineWidth: 4,\n  curveType: \"function\",\n  animation: {\n    //차트가 뿌려질때 실행될 애니메이션 효과\n    startup: true,\n    duration: 1000,\n    easing: 'linear'\n  },\n  legend: {\n    position: 'right',\n    alignment: 'center',\n    textStyle: {\n      color: 'black',\n      fontSize: 20,\n      bold: true\n    }\n  }\n};\nconst MyBuyListChart = _ref => {\n  _s();\n  let {\n    location\n  } = _ref;\n  const search = qs.parse(location.search, {\n    ignoreQueryPrefix: true\n  });\n  const buyer = search.buyer;\n  const [data, setData] = useState('');\n  const chartType = useRef('Bar');\n  const title = useRef('직업별인원수');\n  const options = {\n    chart: {\n      title: title.current\n    },\n    title: title.current\n  };\n  const callChart = async () => {\n    //fetch data from db + put it in state variable\n    let result = await axios.get(`/api/tradeinfo/buy/chart?buyer=${buyer}`);\n    let array = chageData(result.data);\n    setData(array);\n  };\n  const chageData = result => {\n    title.current = '2022 월별 구매 총액';\n    chartType.current = 'LineChart';\n    let array = [];\n    array.push(['월', '총액']);\n    result.forEach(item => {\n      array.push([item.month, item.payprice]);\n    });\n    return array;\n  };\n  useEffect(() => {\n    callChart();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: 100\n    },\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      chartType: chartType.current,\n      width: \"100%\",\n      height: \"400px\",\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(MyBuyListChart, \"1S8zKnFMiwp7JN2ST3OkBw0DO2w=\");\n_c = MyBuyListChart;\nexport default MyBuyListChart;\nvar _c;\n$RefreshReg$(_c, \"MyBuyListChart\");","map":{"version":3,"names":["axios","React","useContext","useRef","useState","useEffect","Chart","qs","options","title","current","lineWidth","curveType","animation","startup","duration","easing","legend","position","alignment","textStyle","color","fontSize","bold","MyBuyListChart","location","search","parse","ignoreQueryPrefix","buyer","data","setData","chartType","chart","callChart","result","get","array","chageData","push","forEach","item","month","payprice","marginTop"],"sources":["C:/data/project/realproject/src/my/MyBuyListChart.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useContext, useRef } from 'react'\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport Chart from 'react-google-charts';\r\nimport qs from 'qs';\r\n\r\nconst options = {\r\n    title: title.current,\r\n    lineWidth: 4,\r\n    curveType: \"function\",\r\n    animation: { //차트가 뿌려질때 실행될 애니메이션 효과\r\n        startup: true,\r\n        duration: 1000,\r\n        easing: 'linear'\r\n    },\r\n    legend : {position: 'right', alignment :'center', textStyle: {color: 'black', fontSize: 20,bold:true}},\r\n    \r\n};\r\n\r\nconst MyBuyListChart = ({location}) => {\r\n    const search = qs.parse(location.search, { ignoreQueryPrefix: true });\r\n    const buyer = search.buyer;\r\n    const [data, setData] = useState('');\r\n    const chartType = useRef('Bar');\r\n    const title = useRef('직업별인원수');\r\n\r\n    const options = {\r\n        chart: {\r\n            title: title.current,\r\n        },\r\n        title: title.current\r\n    };\r\n\r\n    const callChart = async () => {\r\n        //fetch data from db + put it in state variable\r\n        let result = await axios.get(`/api/tradeinfo/buy/chart?buyer=${buyer}`);\r\n        let array = chageData(result.data);\r\n        setData(array);\r\n    }\r\n\r\n    const chageData = (result) => {\r\n        title.current = '2022 월별 구매 총액';\r\n        chartType.current = 'LineChart';\r\n\r\n        let array = [];\r\n        array.push(['월', '총액']);\r\n        result.forEach(item => {\r\n            array.push([item.month, item.payprice]);\r\n        });\r\n        return array;\r\n    }\r\n\r\n    useEffect(() => {\r\n        callChart();\r\n    }, [])\r\n\r\n    return (\r\n        <div style={{ marginTop: 100 }}>\r\n             <Chart\r\n                chartType={chartType.current}\r\n                width=\"100%\"\r\n                height=\"400px\"\r\n                data={data}\r\n                options={options} /> \r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyBuyListChart"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,UAAU,EAAEC,MAAM,QAAQ,OAAO;AACjD,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,EAAE,MAAM,IAAI;AAAC;AAEpB,MAAMC,OAAO,GAAG;EACZC,KAAK,EAAEA,KAAK,CAACC,OAAO;EACpBC,SAAS,EAAE,CAAC;EACZC,SAAS,EAAE,UAAU;EACrBC,SAAS,EAAE;IAAE;IACTC,OAAO,EAAE,IAAI;IACbC,QAAQ,EAAE,IAAI;IACdC,MAAM,EAAE;EACZ,CAAC;EACDC,MAAM,EAAG;IAACC,QAAQ,EAAE,OAAO;IAAEC,SAAS,EAAE,QAAQ;IAAEC,SAAS,EAAE;MAACC,KAAK,EAAE,OAAO;MAAEC,QAAQ,EAAE,EAAE;MAACC,IAAI,EAAC;IAAI;EAAC;AAEzG,CAAC;AAED,MAAMC,cAAc,GAAG,QAAgB;EAAA;EAAA,IAAf;IAACC;EAAQ,CAAC;EAC9B,MAAMC,MAAM,GAAGnB,EAAE,CAACoB,KAAK,CAACF,QAAQ,CAACC,MAAM,EAAE;IAAEE,iBAAiB,EAAE;EAAK,CAAC,CAAC;EACrE,MAAMC,KAAK,GAAGH,MAAM,CAACG,KAAK;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM4B,SAAS,GAAG7B,MAAM,CAAC,KAAK,CAAC;EAC/B,MAAMM,KAAK,GAAGN,MAAM,CAAC,QAAQ,CAAC;EAE9B,MAAMK,OAAO,GAAG;IACZyB,KAAK,EAAE;MACHxB,KAAK,EAAEA,KAAK,CAACC;IACjB,CAAC;IACDD,KAAK,EAAEA,KAAK,CAACC;EACjB,CAAC;EAED,MAAMwB,SAAS,GAAG,YAAY;IAC1B;IACA,IAAIC,MAAM,GAAG,MAAMnC,KAAK,CAACoC,GAAG,CAAE,kCAAiCP,KAAM,EAAC,CAAC;IACvE,IAAIQ,KAAK,GAAGC,SAAS,CAACH,MAAM,CAACL,IAAI,CAAC;IAClCC,OAAO,CAACM,KAAK,CAAC;EAClB,CAAC;EAED,MAAMC,SAAS,GAAIH,MAAM,IAAK;IAC1B1B,KAAK,CAACC,OAAO,GAAG,eAAe;IAC/BsB,SAAS,CAACtB,OAAO,GAAG,WAAW;IAE/B,IAAI2B,KAAK,GAAG,EAAE;IACdA,KAAK,CAACE,IAAI,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IACvBJ,MAAM,CAACK,OAAO,CAACC,IAAI,IAAI;MACnBJ,KAAK,CAACE,IAAI,CAAC,CAACE,IAAI,CAACC,KAAK,EAAED,IAAI,CAACE,QAAQ,CAAC,CAAC;IAC3C,CAAC,CAAC;IACF,OAAON,KAAK;EAChB,CAAC;EAEDhC,SAAS,CAAC,MAAM;IACZ6B,SAAS,EAAE;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI;IAAK,KAAK,EAAE;MAAEU,SAAS,EAAE;IAAI,CAAE;IAAA,uBAC1B,QAAC,KAAK;MACH,SAAS,EAAEZ,SAAS,CAACtB,OAAQ;MAC7B,KAAK,EAAC,MAAM;MACZ,MAAM,EAAC,OAAO;MACd,IAAI,EAAEoB,IAAK;MACX,OAAO,EAAEtB;IAAQ;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QAEtB;AAEd,CAAC;AAAA,GAhDKgB,cAAc;AAAA,KAAdA,cAAc;AAkDpB,eAAeA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module"}
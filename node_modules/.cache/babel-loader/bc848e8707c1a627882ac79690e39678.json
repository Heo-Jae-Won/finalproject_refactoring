{"ast":null,"code":"var _jsxFileName = \"C:\\\\data\\\\project\\\\realproject\\\\src\\\\my\\\\MyChatList.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyChatList = () => {\n  const getMessages = () => {\n    const q = query(collection(db, `${pwriter_id}/${sessionStorage.getItem('uid')}/${pcode}`), orderBy('date', 'asc'), limit(100));\n    onSnapshot(q, snapshot => {\n      let rows = [];\n      snapshot.forEach(doc => {\n        rows.push({\n          id: doc.id,\n          uid: doc.data().uid,\n          text: doc.data().text,\n          date: doc.data().date,\n          uprofile: doc.data().uprofile,\n          unickname: doc.data().unickname\n        });\n      });\n      setMessages(rows);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: 100\n    },\n    children: \"list\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_c = MyChatList;\nexport default MyChatList;\nvar _c;\n$RefreshReg$(_c, \"MyChatList\");","map":{"version":3,"names":["React","MyChatList","getMessages","q","query","collection","db","pwriter_id","sessionStorage","getItem","pcode","orderBy","limit","onSnapshot","snapshot","rows","forEach","doc","push","id","uid","data","text","date","uprofile","unickname","setMessages","marginTop"],"sources":["C:/data/project/realproject/src/my/MyChatList.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst MyChatList = () => {\r\n    const getMessages = () => {\r\n        const q = query(\r\n            collection(db, `${pwriter_id}/${sessionStorage.getItem('uid')}/${pcode}`),\r\n            orderBy('date', 'asc'),\r\n            limit(100)\r\n        );\r\n\r\n        onSnapshot(q, (snapshot) => {\r\n            let rows = [];\r\n            snapshot.forEach((doc) => {\r\n                rows.push({\r\n                    id: doc.id,\r\n                    uid: doc.data().uid,\r\n                    text: doc.data().text,\r\n                    date: doc.data().date,\r\n                    uprofile: doc.data().uprofile,\r\n                    unickname: doc.data().unickname\r\n                });\r\n            });\r\n            setMessages(rows);\r\n        });\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div style={{marginTop:100}}>\r\n            list\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyChatList"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,UAAU,GAAG,MAAM;EACrB,MAAMC,WAAW,GAAG,MAAM;IACtB,MAAMC,CAAC,GAAGC,KAAK,CACXC,UAAU,CAACC,EAAE,EAAG,GAAEC,UAAW,IAAGC,cAAc,CAACC,OAAO,CAAC,KAAK,CAAE,IAAGC,KAAM,EAAC,CAAC,EACzEC,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,EACtBC,KAAK,CAAC,GAAG,CAAC,CACb;IAEDC,UAAU,CAACV,CAAC,EAAGW,QAAQ,IAAK;MACxB,IAAIC,IAAI,GAAG,EAAE;MACbD,QAAQ,CAACE,OAAO,CAAEC,GAAG,IAAK;QACtBF,IAAI,CAACG,IAAI,CAAC;UACNC,EAAE,EAAEF,GAAG,CAACE,EAAE;UACVC,GAAG,EAAEH,GAAG,CAACI,IAAI,EAAE,CAACD,GAAG;UACnBE,IAAI,EAAEL,GAAG,CAACI,IAAI,EAAE,CAACC,IAAI;UACrBC,IAAI,EAAEN,GAAG,CAACI,IAAI,EAAE,CAACE,IAAI;UACrBC,QAAQ,EAAEP,GAAG,CAACI,IAAI,EAAE,CAACG,QAAQ;UAC7BC,SAAS,EAAER,GAAG,CAACI,IAAI,EAAE,CAACI;QAC1B,CAAC,CAAC;MACN,CAAC,CAAC;MACFC,WAAW,CAACX,IAAI,CAAC;IACrB,CAAC,CAAC;EACN,CAAC;EAID,oBACI;IAAK,KAAK,EAAE;MAACY,SAAS,EAAC;IAAG,CAAE;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAEtB;AAEd,CAAC;AAAA,KA/BK1B,UAAU;AAiChB,eAAeA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module"}
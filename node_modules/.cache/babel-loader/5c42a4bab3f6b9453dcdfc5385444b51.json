{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/dropdown/button/splitbuttonview\n */\n\nimport View from '../../view';\nimport ButtonView from '../../button/buttonview';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport dropdownArrowIcon from '../../../theme/icons/dropdown-arrow.svg';\nimport '../../../theme/components/dropdown/splitbutton.css';\n\n/**\n * The split button view class.\n *\n *\t\tconst view = new SplitButtonView();\n *\n *\t\tview.set( {\n *\t\t\tlabel: 'A button',\n *\t\t\tkeystroke: 'Ctrl+B',\n *\t\t\ttooltip: true\n *\t\t} );\n *\n *\t\tview.render();\n *\n *\t\tdocument.body.append( view.element );\n *\n * Also see the {@link module:ui/dropdown/utils~createDropdown `createDropdown()` util}.\n *\n * @implements module:ui/dropdown/button/dropdownbutton~DropdownButton\n * @extends module:ui/view~View\n */\nexport default class SplitButtonView extends View {\n  /**\n   * @inheritDoc\n   */\n  constructor(locale) {\n    super(locale);\n    const bind = this.bindTemplate;\n\n    // Implement the Button interface.\n    this.set('class');\n    this.set('icon');\n    this.set('isEnabled', true);\n    this.set('isOn', false);\n    this.set('isToggleable', false);\n    this.set('isVisible', true);\n    this.set('keystroke');\n    this.set('label');\n    this.set('tabindex', -1);\n    this.set('tooltip');\n    this.set('tooltipPosition', 's');\n    this.set('type', 'button');\n    this.set('withText', false);\n\n    /**\n     * Collection of the child views inside of the split button {@link #element}.\n     *\n     * @readonly\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n    this.children = this.createCollection();\n\n    /**\n     * A main button of split button.\n     *\n     * @readonly\n     * @member {module:ui/button/buttonview~ButtonView}\n     */\n    this.actionView = this._createActionView();\n\n    /**\n     * A secondary button of split button that opens dropdown.\n     *\n     * @readonly\n     * @member {module:ui/button/buttonview~ButtonView}\n     */\n    this.arrowView = this._createArrowView();\n\n    /**\n     * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}. It manages\n     * keystrokes of the split button:\n     *\n     * * <kbd>▶</kbd> moves focus to arrow view when action view is focused,\n     * * <kbd>◀</kbd> moves focus to action view when arrow view is focused.\n     *\n     * @readonly\n     * @member {module:utils/keystrokehandler~KeystrokeHandler}\n     */\n    this.keystrokes = new KeystrokeHandler();\n\n    /**\n     * Tracks information about DOM focus in the dropdown.\n     *\n     * @readonly\n     * @member {module:utils/focustracker~FocusTracker}\n     */\n    this.focusTracker = new FocusTracker();\n    this.setTemplate({\n      tag: 'div',\n      attributes: {\n        class: ['ck', 'ck-splitbutton', bind.to('class'), bind.if('isVisible', 'ck-hidden', value => !value), this.arrowView.bindTemplate.if('isOn', 'ck-splitbutton_open')]\n      },\n      children: this.children\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  render() {\n    super.render();\n    this.children.add(this.actionView);\n    this.children.add(this.arrowView);\n    this.focusTracker.add(this.actionView.element);\n    this.focusTracker.add(this.arrowView.element);\n    this.keystrokes.listenTo(this.element);\n\n    // Overrides toolbar focus cycling behavior.\n    this.keystrokes.set('arrowright', (evt, cancel) => {\n      if (this.focusTracker.focusedElement === this.actionView.element) {\n        this.arrowView.focus();\n        cancel();\n      }\n    });\n\n    // Overrides toolbar focus cycling behavior.\n    this.keystrokes.set('arrowleft', (evt, cancel) => {\n      if (this.focusTracker.focusedElement === this.arrowView.element) {\n        this.actionView.focus();\n        cancel();\n      }\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    super.destroy();\n    this.focusTracker.destroy();\n    this.keystrokes.destroy();\n  }\n\n  /**\n   * Focuses the {@link #actionView#element} of the action part of split button.\n   */\n  focus() {\n    this.actionView.focus();\n  }\n\n  /**\n   * Creates a {@link module:ui/button/buttonview~ButtonView} instance as {@link #actionView} and binds it with main split button\n   * attributes.\n   *\n   * @private\n   * @returns {module:ui/button/buttonview~ButtonView}\n   */\n  _createActionView() {\n    const actionView = new ButtonView();\n    actionView.bind('icon', 'isEnabled', 'isOn', 'isToggleable', 'keystroke', 'label', 'tabindex', 'tooltip', 'tooltipPosition', 'type', 'withText').to(this);\n    actionView.extendTemplate({\n      attributes: {\n        class: 'ck-splitbutton__action'\n      }\n    });\n    actionView.delegate('execute').to(this);\n    return actionView;\n  }\n\n  /**\n   * Creates a {@link module:ui/button/buttonview~ButtonView} instance as {@link #arrowView} and binds it with main split button\n   * attributes.\n   *\n   * @private\n   * @returns {module:ui/button/buttonview~ButtonView}\n   */\n  _createArrowView() {\n    const arrowView = new ButtonView();\n    const bind = arrowView.bindTemplate;\n    arrowView.icon = dropdownArrowIcon;\n    arrowView.extendTemplate({\n      attributes: {\n        class: ['ck-splitbutton__arrow'],\n        'data-cke-tooltip-disabled': bind.to('isOn'),\n        'aria-haspopup': true,\n        'aria-expanded': bind.to('isOn', value => String(value))\n      }\n    });\n    arrowView.bind('isEnabled').to(this);\n    arrowView.bind('label').to(this);\n    arrowView.bind('tooltip').to(this);\n    arrowView.delegate('execute').to(this, 'open');\n    return arrowView;\n  }\n}","map":{"version":3,"names":["View","ButtonView","KeystrokeHandler","FocusTracker","dropdownArrowIcon","SplitButtonView","constructor","locale","bind","bindTemplate","set","children","createCollection","actionView","_createActionView","arrowView","_createArrowView","keystrokes","focusTracker","setTemplate","tag","attributes","class","to","if","value","render","add","element","listenTo","evt","cancel","focusedElement","focus","destroy","extendTemplate","delegate","icon","String"],"sources":["C:/data/project/realproject/node_modules/@ckeditor/ckeditor5-ui/src/dropdown/button/splitbuttonview.js"],"sourcesContent":["/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/dropdown/button/splitbuttonview\n */\n\nimport View from '../../view';\nimport ButtonView from '../../button/buttonview';\n\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\n\nimport dropdownArrowIcon from '../../../theme/icons/dropdown-arrow.svg';\n\nimport '../../../theme/components/dropdown/splitbutton.css';\n\n/**\n * The split button view class.\n *\n *\t\tconst view = new SplitButtonView();\n *\n *\t\tview.set( {\n *\t\t\tlabel: 'A button',\n *\t\t\tkeystroke: 'Ctrl+B',\n *\t\t\ttooltip: true\n *\t\t} );\n *\n *\t\tview.render();\n *\n *\t\tdocument.body.append( view.element );\n *\n * Also see the {@link module:ui/dropdown/utils~createDropdown `createDropdown()` util}.\n *\n * @implements module:ui/dropdown/button/dropdownbutton~DropdownButton\n * @extends module:ui/view~View\n */\nexport default class SplitButtonView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t// Implement the Button interface.\n\t\tthis.set( 'class' );\n\t\tthis.set( 'icon' );\n\t\tthis.set( 'isEnabled', true );\n\t\tthis.set( 'isOn', false );\n\t\tthis.set( 'isToggleable', false );\n\t\tthis.set( 'isVisible', true );\n\t\tthis.set( 'keystroke' );\n\t\tthis.set( 'label' );\n\t\tthis.set( 'tabindex', -1 );\n\t\tthis.set( 'tooltip' );\n\t\tthis.set( 'tooltipPosition', 's' );\n\t\tthis.set( 'type', 'button' );\n\t\tthis.set( 'withText', false );\n\n\t\t/**\n\t\t * Collection of the child views inside of the split button {@link #element}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.children = this.createCollection();\n\n\t\t/**\n\t\t * A main button of split button.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/button/buttonview~ButtonView}\n\t\t */\n\t\tthis.actionView = this._createActionView();\n\n\t\t/**\n\t\t * A secondary button of split button that opens dropdown.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/button/buttonview~ButtonView}\n\t\t */\n\t\tthis.arrowView = this._createArrowView();\n\n\t\t/**\n\t\t * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}. It manages\n\t\t * keystrokes of the split button:\n\t\t *\n\t\t * * <kbd>▶</kbd> moves focus to arrow view when action view is focused,\n\t\t * * <kbd>◀</kbd> moves focus to action view when arrow view is focused.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\n\t\t */\n\t\tthis.keystrokes = new KeystrokeHandler();\n\n\t\t/**\n\t\t * Tracks information about DOM focus in the dropdown.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker}\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-splitbutton',\n\t\t\t\t\tbind.to( 'class' ),\n\t\t\t\t\tbind.if( 'isVisible', 'ck-hidden', value => !value ),\n\t\t\t\t\tthis.arrowView.bindTemplate.if( 'isOn', 'ck-splitbutton_open' )\n\t\t\t\t]\n\t\t\t},\n\n\t\t\tchildren: this.children\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tthis.children.add( this.actionView );\n\t\tthis.children.add( this.arrowView );\n\n\t\tthis.focusTracker.add( this.actionView.element );\n\t\tthis.focusTracker.add( this.arrowView.element );\n\n\t\tthis.keystrokes.listenTo( this.element );\n\n\t\t// Overrides toolbar focus cycling behavior.\n\t\tthis.keystrokes.set( 'arrowright', ( evt, cancel ) => {\n\t\t\tif ( this.focusTracker.focusedElement === this.actionView.element ) {\n\t\t\t\tthis.arrowView.focus();\n\n\t\t\t\tcancel();\n\t\t\t}\n\t\t} );\n\n\t\t// Overrides toolbar focus cycling behavior.\n\t\tthis.keystrokes.set( 'arrowleft', ( evt, cancel ) => {\n\t\t\tif ( this.focusTracker.focusedElement === this.arrowView.element ) {\n\t\t\t\tthis.actionView.focus();\n\n\t\t\t\tcancel();\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tsuper.destroy();\n\n\t\tthis.focusTracker.destroy();\n\t\tthis.keystrokes.destroy();\n\t}\n\n\t/**\n\t * Focuses the {@link #actionView#element} of the action part of split button.\n\t */\n\tfocus() {\n\t\tthis.actionView.focus();\n\t}\n\n\t/**\n\t * Creates a {@link module:ui/button/buttonview~ButtonView} instance as {@link #actionView} and binds it with main split button\n\t * attributes.\n\t *\n\t * @private\n\t * @returns {module:ui/button/buttonview~ButtonView}\n\t */\n\t_createActionView() {\n\t\tconst actionView = new ButtonView();\n\n\t\tactionView.bind(\n\t\t\t'icon',\n\t\t\t'isEnabled',\n\t\t\t'isOn',\n\t\t\t'isToggleable',\n\t\t\t'keystroke',\n\t\t\t'label',\n\t\t\t'tabindex',\n\t\t\t'tooltip',\n\t\t\t'tooltipPosition',\n\t\t\t'type',\n\t\t\t'withText'\n\t\t).to( this );\n\n\t\tactionView.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck-splitbutton__action'\n\t\t\t}\n\t\t} );\n\n\t\tactionView.delegate( 'execute' ).to( this );\n\n\t\treturn actionView;\n\t}\n\n\t/**\n\t * Creates a {@link module:ui/button/buttonview~ButtonView} instance as {@link #arrowView} and binds it with main split button\n\t * attributes.\n\t *\n\t * @private\n\t * @returns {module:ui/button/buttonview~ButtonView}\n\t */\n\t_createArrowView() {\n\t\tconst arrowView = new ButtonView();\n\t\tconst bind = arrowView.bindTemplate;\n\n\t\tarrowView.icon = dropdownArrowIcon;\n\n\t\tarrowView.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-splitbutton__arrow'\n\t\t\t\t],\n\t\t\t\t'data-cke-tooltip-disabled': bind.to( 'isOn' ),\n\t\t\t\t'aria-haspopup': true,\n\t\t\t\t'aria-expanded': bind.to( 'isOn', value => String( value ) )\n\t\t\t}\n\t\t} );\n\n\t\tarrowView.bind( 'isEnabled' ).to( this );\n\t\tarrowView.bind( 'label' ).to( this );\n\t\tarrowView.bind( 'tooltip' ).to( this );\n\n\t\tarrowView.delegate( 'execute' ).to( this, 'open' );\n\n\t\treturn arrowView;\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
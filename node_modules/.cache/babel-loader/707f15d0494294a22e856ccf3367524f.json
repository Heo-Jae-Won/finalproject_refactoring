{"ast":null,"code":"var _jsxFileName = \"C:\\\\data\\\\project\\\\realproject\\\\src\\\\my\\\\MyChatList.jsx\",\n  _s = $RefreshSig$();\nimport { addDoc, collection, deleteDoc, doc, getFirestore, limit, onSnapshot, orderBy, query } from 'firebase/firestore';\nimport moment from 'moment/moment';\nimport React, { useEffect, useState } from 'react';\nimport { Button, Card, Form, Row, Table } from 'react-bootstrap';\nimport { app } from '../fireStore';\nimport MyChatItem from './MyChatItem';\nimport './chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyChatList = () => {\n  _s();\n  const uid = sessionStorage.getItem('uid');\n  const db = getFirestore(app);\n  const [msg, setMsg] = useState('');\n  const [messages, setMessages] = useState(null);\n\n  //Doc element를 최초 생성\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (!window.confirm('새로운 메시지를 보내실래요?')) return;\n    await addDoc(collection(db, 'messages'), {\n      uid: uid,\n      text: msg,\n      date: moment(new Date()).format('a H:m')\n    });\n    setMsg('');\n  };\n\n  //만든 Doc element를 fetch. 새로 배열 하나 만들어서 뿌려야함.\n  const getMessages = () => {\n    const q = query(collection(db, 'messages'), orderBy('date', 'desc'), limit(100));\n    onSnapshot(q, snapshot => {\n      let rows = [];\n      snapshot.forEach(doc => {\n        rows.push({\n          id: doc.id,\n          uid: doc.data().uid,\n          text: doc.data().text,\n          date: doc.data().date\n        });\n      });\n      setMessages(rows);\n    });\n  };\n  const onClickDelete = async id => {\n    if (!window.confirm(`${id}번 알림을 삭제하실래요?`)) return;\n    await deleteDoc(doc(db, 'messages', id));\n  };\n  useEffect(() => {\n    getMessages();\n  }, []);\n  if (!messages) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading......\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '50px 0px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"my-3\",\n        style: {\n          width: '50rem'\n        },\n        children: messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: message.uid === loginUser.uid ? 'chat ch2' : 'chat ch1',\n          children: /*#__PURE__*/_jsxDEV(MyChatItem, {\n            message: message,\n            onClickDelete: onClickDelete\n          }, message.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 31\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-5 justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: sendMessage,\n        className: \"d-flex my-3\",\n        style: {\n          width: '52rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          value: msg,\n          onChange: e => setMsg(e.target.value),\n          placeholder: \"\\uBCF4\\uB0B4\\uC2E4 \\uB0B4\\uC6A9\\uC744 \\uC801\\uC73C\\uC138\\uC694\",\n          className: \"mx-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"\\uC804\\uC1A1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(MyChatList, \"lBDyl+80zz5ZHIeo4/IOfK8nNVI=\");\n_c = MyChatList;\nexport default MyChatList;\nvar _c;\n$RefreshReg$(_c, \"MyChatList\");","map":{"version":3,"names":["addDoc","collection","deleteDoc","doc","getFirestore","limit","onSnapshot","orderBy","query","moment","React","useEffect","useState","Button","Card","Form","Row","Table","app","MyChatItem","MyChatList","uid","sessionStorage","getItem","db","msg","setMsg","messages","setMessages","sendMessage","e","preventDefault","window","confirm","text","date","Date","format","getMessages","q","snapshot","rows","forEach","push","id","data","onClickDelete","margin","width","map","message","loginUser","target","value"],"sources":["C:/data/project/realproject/src/my/MyChatList.jsx"],"sourcesContent":["import { addDoc, collection, deleteDoc, doc, getFirestore, limit, onSnapshot, orderBy, query } from 'firebase/firestore';\r\nimport moment from 'moment/moment';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Button, Card, Form, Row, Table } from 'react-bootstrap';\r\nimport { app } from '../fireStore';\r\nimport MyChatItem from './MyChatItem';\r\nimport './chat.css'\r\n\r\nconst MyChatList = () => {\r\n    const uid = sessionStorage.getItem('uid');\r\n    const db = getFirestore(app);\r\n    const [msg, setMsg] = useState('');\r\n    const [messages, setMessages] = useState(null);\r\n\r\n    //Doc element를 최초 생성\r\n    const sendMessage = async (e) => {\r\n        e.preventDefault();\r\n        if (!window.confirm('새로운 메시지를 보내실래요?')) return;\r\n        await addDoc(collection(db, 'messages'), {\r\n            uid: uid,\r\n            text: msg,\r\n            date: moment(new Date()).format('a H:m')\r\n        });\r\n        setMsg('');\r\n    }\r\n\r\n    //만든 Doc element를 fetch. 새로 배열 하나 만들어서 뿌려야함.\r\n    const getMessages = () => {\r\n        const q = query(\r\n            collection(db, 'messages'),\r\n            orderBy('date', 'desc'),\r\n            limit(100)\r\n        );\r\n\r\n        onSnapshot(q, (snapshot) => {\r\n            let rows = [];\r\n            snapshot.forEach((doc) => {\r\n                rows.push({\r\n                    id: doc.id,\r\n                    uid: doc.data().uid,\r\n                    text: doc.data().text,\r\n                    date: doc.data().date\r\n                });\r\n            });\r\n            setMessages(rows);\r\n        });\r\n    }\r\n\r\n    const onClickDelete = async (id) => {\r\n        if (!window.confirm(`${id}번 알림을 삭제하실래요?`)) return;\r\n        await deleteDoc(doc(db, 'messages', id));\r\n    }\r\n\r\n    useEffect(() => {\r\n        getMessages();\r\n    }, []);\r\n\r\n    if (!messages) return <h1>Loading......</h1>\r\n\r\n    return (\r\n        <div style={{margin:'50px 0px'}}>\r\n            <div className=\"wrap\">\r\n                <Card className=\"my-3\" style={{ width: '50rem' }}>\r\n                            {messages.map(message =>\r\n                              <div className={message.uid === loginUser.uid ? 'chat ch2' : 'chat ch1'}>\r\n                                <MyChatItem key={message.id}\r\n                                    message={message}\r\n                                    onClickDelete={onClickDelete} />\r\n                                    </div>\r\n                            )}\r\n                </Card>\r\n            </div>\r\n            <Row className=\"mt-5 justify-content-center\">\r\n                <Form onSubmit={sendMessage} className=\"d-flex my-3\" style={{ width: '52rem' }}>\r\n                    <Form.Control\r\n                        value={msg}\r\n                        onChange={(e) => setMsg(e.target.value)}\r\n                        placeholder='보내실 내용을 적으세요' className=\"mx-2\" />\r\n                    <Button type=\"submit\">전송</Button>\r\n                </Form>\r\n            </Row>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default MyChatList"],"mappings":"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"},"metadata":{},"sourceType":"module"}